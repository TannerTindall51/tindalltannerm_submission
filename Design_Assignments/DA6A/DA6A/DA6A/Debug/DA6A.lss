
DA6A.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  0000157a  0000160e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000157a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000036  00800106  00800106  00001614  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001614  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001670  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  000016b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000109d  00000000  00000000  00001730  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a9c  00000000  00000000  000027cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000063e  00000000  00000000  00003269  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000154  00000000  00000000  000038a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000059c  00000000  00000000  000039fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000277  00000000  00000000  00003f98  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  0000420f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__ctors_end>
       4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      10:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      14:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      18:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      1c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      20:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      24:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      28:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      2c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      30:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      34:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      38:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      3c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      40:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      44:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      48:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      4c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      50:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      54:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      58:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      5c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      60:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      64:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      68:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      6c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      70:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      74:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      78:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      7c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      80:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      84:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      88:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      8c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      90:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      94:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      98:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      9c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      ac:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      b0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>

000000b4 <__trampolines_end>:
      b4:	6e 61       	ori	r22, 0x1E	; 30
      b6:	6e 00       	.word	0x006e	; ????

000000b8 <__c.2332>:
      b8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      c8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      d8:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      e8:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      f8:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     108:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     118:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     128:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     138:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     148:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     158:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     168:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     178:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     188:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     198:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1a8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001b6 <__ctors_end>:
     1b6:	11 24       	eor	r1, r1
     1b8:	1f be       	out	0x3f, r1	; 63
     1ba:	cf ef       	ldi	r28, 0xFF	; 255
     1bc:	d8 e0       	ldi	r29, 0x08	; 8
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	cd bf       	out	0x3d, r28	; 61

000001c2 <__do_copy_data>:
     1c2:	11 e0       	ldi	r17, 0x01	; 1
     1c4:	a0 e0       	ldi	r26, 0x00	; 0
     1c6:	b1 e0       	ldi	r27, 0x01	; 1
     1c8:	ea e7       	ldi	r30, 0x7A	; 122
     1ca:	f5 e1       	ldi	r31, 0x15	; 21
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <__do_copy_data+0x10>
     1ce:	05 90       	lpm	r0, Z+
     1d0:	0d 92       	st	X+, r0
     1d2:	a6 30       	cpi	r26, 0x06	; 6
     1d4:	b1 07       	cpc	r27, r17
     1d6:	d9 f7       	brne	.-10     	; 0x1ce <__do_copy_data+0xc>

000001d8 <__do_clear_bss>:
     1d8:	21 e0       	ldi	r18, 0x01	; 1
     1da:	a6 e0       	ldi	r26, 0x06	; 6
     1dc:	b1 e0       	ldi	r27, 0x01	; 1
     1de:	01 c0       	rjmp	.+2      	; 0x1e2 <.do_clear_bss_start>

000001e0 <.do_clear_bss_loop>:
     1e0:	1d 92       	st	X+, r1

000001e2 <.do_clear_bss_start>:
     1e2:	ac 33       	cpi	r26, 0x3C	; 60
     1e4:	b2 07       	cpc	r27, r18
     1e6:	e1 f7       	brne	.-8      	; 0x1e0 <.do_clear_bss_loop>
     1e8:	0e 94 ca 03 	call	0x794	; 0x794 <main>
     1ec:	0c 94 bb 0a 	jmp	0x1576	; 0x1576 <_exit>

000001f0 <__bad_interrupt>:
     1f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f4 <i2cInit>:
float Acc_x,Acc_y,Acc_z,Temperature,Gyro_x,Gyro_y,Gyro_z;


void i2cInit(void)
{
	TWBR0 = BITRATE;						//set bitrate
     1f4:	83 e0       	ldi	r24, 0x03	; 3
     1f6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
	TWSR0 |= (0<<TWPS1)|(0<<TWPS0);			//set prescaler to 1
     1fa:	e9 eb       	ldi	r30, 0xB9	; 185
     1fc:	f0 e0       	ldi	r31, 0x00	; 0
     1fe:	80 81       	ld	r24, Z
     200:	80 83       	st	Z, r24
     202:	08 95       	ret

00000204 <i2cRead>:
}

unsigned char i2cRead(value)
{
	if (value == 0)									//ack bit & continue
     204:	89 2b       	or	r24, r25
     206:	21 f4       	brne	.+8      	; 0x210 <i2cRead+0xc>
	{
		TWCR0= (1<<TWINT) | (1<<TWEN) | (1<<TWEA);   //enable TWI/ACK and clear flag
     208:	84 ec       	ldi	r24, 0xC4	; 196
     20a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     20e:	03 c0       	rjmp	.+6      	; 0x216 <i2cRead+0x12>
	}
	else
	{
		TWCR0= (1<<TWINT) | (1<<TWEN);   	//enable TWI & clear flag
     210:	84 e8       	ldi	r24, 0x84	; 132
     212:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	}
	while ((TWCR0& (1<<TWINT)) == 0);     	//wait until emptied
     216:	ec eb       	ldi	r30, 0xBC	; 188
     218:	f0 e0       	ldi	r31, 0x00	; 0
     21a:	80 81       	ld	r24, Z
     21c:	88 23       	and	r24, r24
     21e:	ec f7       	brge	.-6      	; 0x21a <i2cRead+0x16>
	return TWDR0;							//return value to TWDR
     220:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
}
     224:	08 95       	ret

00000226 <i2cWrite>:

void i2cWrite(data)
{
	TWDR0 = data;                   			//pull data from TWI register
     226:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR0 = (1<<TWINT) | (1<<TWEN);			//enable TWI & clear flag
     22a:	84 e8       	ldi	r24, 0x84	; 132
     22c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR0&(1<<TWINT)) == 0);   		//wait until done
     230:	ec eb       	ldi	r30, 0xBC	; 188
     232:	f0 e0       	ldi	r31, 0x00	; 0
     234:	80 81       	ld	r24, Z
     236:	88 23       	and	r24, r24
     238:	ec f7       	brge	.-6      	; 0x234 <i2cWrite+0xe>
}
     23a:	08 95       	ret

0000023c <i2cStart>:

void i2cStart(void)
{
	TWCR0= (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);		//enable TWI, clear flag, start condition
     23c:	ec eb       	ldi	r30, 0xBC	; 188
     23e:	f0 e0       	ldi	r31, 0x00	; 0
     240:	84 ea       	ldi	r24, 0xA4	; 164
     242:	80 83       	st	Z, r24
	while (TWCR0 & (1<<TWINT) == 0);            	//wait until emptied
     244:	80 81       	ld	r24, Z
     246:	08 95       	ret

00000248 <i2cStop>:
}
void i2cStop(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);	//enable TWI, clear flag, stop condition
     248:	84 e9       	ldi	r24, 0x94	; 148
     24a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while ((TWCR0&(1<<TWINT)) == 0);				//wait until done
     24e:	ec eb       	ldi	r30, 0xBC	; 188
     250:	f0 e0       	ldi	r31, 0x00	; 0
     252:	80 81       	ld	r24, Z
     254:	88 23       	and	r24, r24
     256:	ec f7       	brge	.-6      	; 0x252 <i2cStop+0xa>
}
     258:	08 95       	ret

0000025a <i2cIdle>:

void i2cIdle(char slave_write_address)				//taken from Dr. Venkis I2C start wait function in Demo code
{
     25a:	bf 92       	push	r11
     25c:	cf 92       	push	r12
     25e:	df 92       	push	r13
     260:	ef 92       	push	r14
     262:	ff 92       	push	r15
     264:	0f 93       	push	r16
     266:	1f 93       	push	r17
     268:	cf 93       	push	r28
     26a:	df 93       	push	r29
     26c:	b8 2e       	mov	r11, r24
	uint8_t check;									/* Declare variable */
	while (1)
	{
		TWCR0 = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);	/* Enable TWI, generate start condition and clear interrupt flag */
     26e:	cc eb       	ldi	r28, 0xBC	; 188
     270:	d0 e0       	ldi	r29, 0x00	; 0
     272:	0f 2e       	mov	r0, r31
     274:	f4 ea       	ldi	r31, 0xA4	; 164
     276:	df 2e       	mov	r13, r31
     278:	f0 2d       	mov	r31, r0
		while (!(TWCR0 & (1<<TWINT)));				/* Wait until TWI finish its current job (start condition) */
		check = TWSR0 & 0xF8;						/* Read TWI status register with masking lower three bits */
     27a:	09 eb       	ldi	r16, 0xB9	; 185
     27c:	10 e0       	ldi	r17, 0x00	; 0
		if (check != 0x08)							/* Check weather start condition transmitted successfully or not? */
		continue;									/* If no then continue with start loop again */
		TWDR0 = slave_write_address;				/* If yes then write SLA+W in TWI data register */
     27e:	0f 2e       	mov	r0, r31
     280:	fb eb       	ldi	r31, 0xBB	; 187
     282:	ef 2e       	mov	r14, r31
     284:	f1 2c       	mov	r15, r1
     286:	f0 2d       	mov	r31, r0
		TWCR0 = (1<<TWEN)|(1<<TWINT);				/* Enable TWI and clear interrupt flag */
     288:	0f 2e       	mov	r0, r31
     28a:	f4 e8       	ldi	r31, 0x84	; 132
     28c:	cf 2e       	mov	r12, r31
     28e:	f0 2d       	mov	r31, r0
void i2cIdle(char slave_write_address)				//taken from Dr. Venkis I2C start wait function in Demo code
{
	uint8_t check;									/* Declare variable */
	while (1)
	{
		TWCR0 = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);	/* Enable TWI, generate start condition and clear interrupt flag */
     290:	d8 82       	st	Y, r13
		while (!(TWCR0 & (1<<TWINT)));				/* Wait until TWI finish its current job (start condition) */
     292:	88 81       	ld	r24, Y
     294:	88 23       	and	r24, r24
     296:	ec f7       	brge	.-6      	; 0x292 <i2cIdle+0x38>
		check = TWSR0 & 0xF8;						/* Read TWI status register with masking lower three bits */
     298:	f8 01       	movw	r30, r16
     29a:	80 81       	ld	r24, Z
		if (check != 0x08)							/* Check weather start condition transmitted successfully or not? */
     29c:	88 7f       	andi	r24, 0xF8	; 248
     29e:	88 30       	cpi	r24, 0x08	; 8
     2a0:	b9 f7       	brne	.-18     	; 0x290 <i2cIdle+0x36>
		continue;									/* If no then continue with start loop again */
		TWDR0 = slave_write_address;				/* If yes then write SLA+W in TWI data register */
     2a2:	f7 01       	movw	r30, r14
     2a4:	b0 82       	st	Z, r11
		TWCR0 = (1<<TWEN)|(1<<TWINT);				/* Enable TWI and clear interrupt flag */
     2a6:	c8 82       	st	Y, r12
		while (!(TWCR0 & (1<<TWINT)));				/* Wait until TWI finish its current job (Write operation) */
     2a8:	88 81       	ld	r24, Y
     2aa:	88 23       	and	r24, r24
     2ac:	ec f7       	brge	.-6      	; 0x2a8 <i2cIdle+0x4e>
		check = TWSR0 & 0xF8;						/* Read TWI status register with masking lower three bits */
     2ae:	f8 01       	movw	r30, r16
     2b0:	80 81       	ld	r24, Z
		if (check != 0x18 )							/* Check weather SLA+W transmitted & ack received or not? */
     2b2:	88 7f       	andi	r24, 0xF8	; 248
     2b4:	88 31       	cpi	r24, 0x18	; 24
     2b6:	19 f0       	breq	.+6      	; 0x2be <i2cIdle+0x64>
		{
			i2cStop();								/* If not then generate stop condition */
     2b8:	0e 94 24 01 	call	0x248	; 0x248 <i2cStop>
			continue;								/* continue with start loop again */
     2bc:	e9 cf       	rjmp	.-46     	; 0x290 <i2cIdle+0x36>
		}
		break;										/* If yes then break loop */
	}
}
     2be:	df 91       	pop	r29
     2c0:	cf 91       	pop	r28
     2c2:	1f 91       	pop	r17
     2c4:	0f 91       	pop	r16
     2c6:	ff 90       	pop	r15
     2c8:	ef 90       	pop	r14
     2ca:	df 90       	pop	r13
     2cc:	cf 90       	pop	r12
     2ce:	bf 90       	pop	r11
     2d0:	08 95       	ret

000002d2 <initializeUART>:

void initializeUART()
{
	DDRD |= 0x02;
     2d2:	51 9a       	sbi	0x0a, 1	; 10
	UBRR0 = 103;
     2d4:	87 e6       	ldi	r24, 0x67	; 103
     2d6:	90 e0       	ldi	r25, 0x00	; 0
     2d8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     2dc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0C |= (0<<UPM01) | (0<<UPM00) | (1<<UCSZ01) | (1<<UCSZ00);  //disable parity and set to asynchronous
     2e0:	e2 ec       	ldi	r30, 0xC2	; 194
     2e2:	f0 e0       	ldi	r31, 0x00	; 0
     2e4:	80 81       	ld	r24, Z
     2e6:	86 60       	ori	r24, 0x06	; 6
     2e8:	80 83       	st	Z, r24
     2ea:	08 95       	ret

000002ec <USART_tx_transmit>:
}

void USART_tx_transmit()
{
	UBRR0 = 103;
     2ec:	87 e6       	ldi	r24, 0x67	; 103
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     2f4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0B |= (1 << TXCIE0) | (1<<TXEN0);		//enable data transmission
     2f8:	e1 ec       	ldi	r30, 0xC1	; 193
     2fa:	f0 e0       	ldi	r31, 0x00	; 0
     2fc:	80 81       	ld	r24, Z
     2fe:	88 64       	ori	r24, 0x48	; 72
     300:	80 83       	st	Z, r24
	DDRD |= 0x02;								//transmit through PD2
     302:	51 9a       	sbi	0x0a, 1	; 10
     304:	08 95       	ret

00000306 <USART_tx>:
}

void USART_tx(char*data)						//outputs data to terminal
{
     306:	cf 93       	push	r28
     308:	df 93       	push	r29
	while((*data != '\0'))						//loop until all data is emptied
     30a:	fc 01       	movw	r30, r24
     30c:	20 81       	ld	r18, Z
     30e:	22 23       	and	r18, r18
     310:	69 f0       	breq	.+26     	; 0x32c <USART_tx+0x26>
     312:	dc 01       	movw	r26, r24
     314:	11 96       	adiw	r26, 0x01	; 1
	{
		while(!(UCSR0A & (1 << UDRE0)));		//wait until data register in emptied
     316:	e0 ec       	ldi	r30, 0xC0	; 192
     318:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;							//once emptied, import into data register UDR0
     31a:	c6 ec       	ldi	r28, 0xC6	; 198
     31c:	d0 e0       	ldi	r29, 0x00	; 0

void USART_tx(char*data)						//outputs data to terminal
{
	while((*data != '\0'))						//loop until all data is emptied
	{
		while(!(UCSR0A & (1 << UDRE0)));		//wait until data register in emptied
     31e:	90 81       	ld	r25, Z
     320:	95 ff       	sbrs	r25, 5
     322:	fd cf       	rjmp	.-6      	; 0x31e <USART_tx+0x18>
		UDR0 = *data;							//once emptied, import into data register UDR0
     324:	28 83       	st	Y, r18
	DDRD |= 0x02;								//transmit through PD2
}

void USART_tx(char*data)						//outputs data to terminal
{
	while((*data != '\0'))						//loop until all data is emptied
     326:	2d 91       	ld	r18, X+
     328:	21 11       	cpse	r18, r1
     32a:	f9 cf       	rjmp	.-14     	; 0x31e <USART_tx+0x18>
	{
		while(!(UCSR0A & (1 << UDRE0)));		//wait until data register in emptied
		UDR0 = *data;							//once emptied, import into data register UDR0
		data++;									//increments pointer position for data
	}
}
     32c:	df 91       	pop	r29
     32e:	cf 91       	pop	r28
     330:	08 95       	ret

00000332 <gyroInit>:

void gyroInit()
{
	i2cIdle(SLAVE_ADDRESS);			//start condition at slave address
     332:	80 ed       	ldi	r24, 0xD0	; 208
     334:	0e 94 2d 01 	call	0x25a	; 0x25a <i2cIdle>
	i2cWrite(DIVIDER_ADDRESS);		//write to sampling rate register
     338:	89 e1       	ldi	r24, 0x19	; 25
     33a:	90 e0       	ldi	r25, 0x00	; 0
     33c:	0e 94 13 01 	call	0x226	; 0x226 <i2cWrite>
	i2cWrite(0x07);					//set sampling rate to 1kHz
     340:	87 e0       	ldi	r24, 0x07	; 7
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	0e 94 13 01 	call	0x226	; 0x226 <i2cWrite>
	i2cStop();						//stop condition
     348:	0e 94 24 01 	call	0x248	; 0x248 <i2cStop>

	i2cIdle(SLAVE_ADDRESS);			//set power & start condition at slave address
     34c:	80 ed       	ldi	r24, 0xD0	; 208
     34e:	0e 94 2d 01 	call	0x25a	; 0x25a <i2cIdle>
	i2cWrite(POWER_ADDRESS);		//write to that address
     352:	8b e6       	ldi	r24, 0x6B	; 107
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	0e 94 13 01 	call	0x226	; 0x226 <i2cWrite>
	i2cWrite(0x01);					//PLL with X axis gyroscope reference
     35a:	81 e0       	ldi	r24, 0x01	; 1
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	0e 94 13 01 	call	0x226	; 0x226 <i2cWrite>
	i2cStop();						//stop condition
     362:	0e 94 24 01 	call	0x248	; 0x248 <i2cStop>

	i2cIdle(SLAVE_ADDRESS);			//start condition at slave address
     366:	80 ed       	ldi	r24, 0xD0	; 208
     368:	0e 94 2d 01 	call	0x25a	; 0x25a <i2cIdle>
	i2cWrite(CONFIG_ADDRESS);		//write to that address
     36c:	8a e1       	ldi	r24, 0x1A	; 26
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	0e 94 13 01 	call	0x226	; 0x226 <i2cWrite>
	i2cWrite(0x00);					//set sampling rate to 8kHz
     374:	80 e0       	ldi	r24, 0x00	; 0
     376:	90 e0       	ldi	r25, 0x00	; 0
     378:	0e 94 13 01 	call	0x226	; 0x226 <i2cWrite>
	i2cStop();						//stop condition
     37c:	0e 94 24 01 	call	0x248	; 0x248 <i2cStop>

	i2cIdle(SLAVE_ADDRESS);			//start condition at slave address
     380:	80 ed       	ldi	r24, 0xD0	; 208
     382:	0e 94 2d 01 	call	0x25a	; 0x25a <i2cIdle>
	i2cWrite(GYRO_CONFIG_ADDRESS);	//write to that address
     386:	8b e1       	ldi	r24, 0x1B	; 27
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	0e 94 13 01 	call	0x226	; 0x226 <i2cWrite>
	i2cWrite(0x18);					//set range
     38e:	88 e1       	ldi	r24, 0x18	; 24
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	0e 94 13 01 	call	0x226	; 0x226 <i2cWrite>
	i2cStop();						//stop condition
     396:	0e 94 24 01 	call	0x248	; 0x248 <i2cStop>

	i2cIdle(SLAVE_ADDRESS);			//start condition at slave address
     39a:	80 ed       	ldi	r24, 0xD0	; 208
     39c:	0e 94 2d 01 	call	0x25a	; 0x25a <i2cIdle>
	i2cWrite(INTERRUPT_ADDRESS);	//write to interrupt register address
     3a0:	88 e3       	ldi	r24, 0x38	; 56
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	0e 94 13 01 	call	0x226	; 0x226 <i2cWrite>
	i2cWrite(0x01);					//toggle DATA_RDY_EN
     3a8:	81 e0       	ldi	r24, 0x01	; 1
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	0e 94 13 01 	call	0x226	; 0x226 <i2cWrite>
	i2cStop();						//stop condition
     3b0:	0e 94 24 01 	call	0x248	; 0x248 <i2cStop>
     3b4:	08 95       	ret

000003b6 <Read_RawValue>:
		_delay_ms(250);
	}
}

void Read_RawValue()
{
     3b6:	cf 93       	push	r28
	i2cIdle(SLAVE_ADDRESS);			//start condition
     3b8:	80 ed       	ldi	r24, 0xD0	; 208
     3ba:	0e 94 2d 01 	call	0x25a	; 0x25a <i2cIdle>
	i2cWrite(ACC_START_ADDRESS);	//set acc address
     3be:	8b e3       	ldi	r24, 0x3B	; 59
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	0e 94 13 01 	call	0x226	; 0x226 <i2cWrite>
	
	i2cStart();						//read acc data
     3c6:	0e 94 1e 01 	call	0x23c	; 0x23c <i2cStart>
	Acc_x = (((int)i2cRead()<<8) | (int)i2cRead());
     3ca:	0e 94 02 01 	call	0x204	; 0x204 <i2cRead>
     3ce:	c8 2f       	mov	r28, r24
     3d0:	0e 94 02 01 	call	0x204	; 0x204 <i2cRead>
     3d4:	6c 2f       	mov	r22, r28
     3d6:	70 e0       	ldi	r23, 0x00	; 0
     3d8:	76 2f       	mov	r23, r22
     3da:	66 27       	eor	r22, r22
     3dc:	68 2b       	or	r22, r24
     3de:	07 2e       	mov	r0, r23
     3e0:	00 0c       	add	r0, r0
     3e2:	88 0b       	sbc	r24, r24
     3e4:	99 0b       	sbc	r25, r25
     3e6:	0e 94 56 04 	call	0x8ac	; 0x8ac <__floatsisf>
     3ea:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <Acc_x>
     3ee:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <Acc_x+0x1>
     3f2:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <Acc_x+0x2>
     3f6:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <Acc_x+0x3>
	Acc_y = (((int)i2cRead()<<8) | (int)i2cRead());
     3fa:	0e 94 02 01 	call	0x204	; 0x204 <i2cRead>
     3fe:	c8 2f       	mov	r28, r24
     400:	0e 94 02 01 	call	0x204	; 0x204 <i2cRead>
     404:	6c 2f       	mov	r22, r28
     406:	70 e0       	ldi	r23, 0x00	; 0
     408:	76 2f       	mov	r23, r22
     40a:	66 27       	eor	r22, r22
     40c:	68 2b       	or	r22, r24
     40e:	07 2e       	mov	r0, r23
     410:	00 0c       	add	r0, r0
     412:	88 0b       	sbc	r24, r24
     414:	99 0b       	sbc	r25, r25
     416:	0e 94 56 04 	call	0x8ac	; 0x8ac <__floatsisf>
     41a:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <Acc_y>
     41e:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <Acc_y+0x1>
     422:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <Acc_y+0x2>
     426:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <Acc_y+0x3>
	Acc_z = (((int)i2cRead()<<8) | (int)i2cRead());
     42a:	0e 94 02 01 	call	0x204	; 0x204 <i2cRead>
     42e:	c8 2f       	mov	r28, r24
     430:	0e 94 02 01 	call	0x204	; 0x204 <i2cRead>
     434:	6c 2f       	mov	r22, r28
     436:	70 e0       	ldi	r23, 0x00	; 0
     438:	76 2f       	mov	r23, r22
     43a:	66 27       	eor	r22, r22
     43c:	68 2b       	or	r22, r24
     43e:	07 2e       	mov	r0, r23
     440:	00 0c       	add	r0, r0
     442:	88 0b       	sbc	r24, r24
     444:	99 0b       	sbc	r25, r25
     446:	0e 94 56 04 	call	0x8ac	; 0x8ac <__floatsisf>
     44a:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <Acc_z>
     44e:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <Acc_z+0x1>
     452:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <Acc_z+0x2>
     456:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <Acc_z+0x3>
	i2cStop();						//stop condition
     45a:	0e 94 24 01 	call	0x248	; 0x248 <i2cStop>
	
	i2cIdle(SLAVE_ADDRESS);			//start condition
     45e:	80 ed       	ldi	r24, 0xD0	; 208
     460:	0e 94 2d 01 	call	0x25a	; 0x25a <i2cIdle>
	i2cWrite(GYRO_START_ADDRESS);	//set gyro address
     464:	83 e4       	ldi	r24, 0x43	; 67
     466:	90 e0       	ldi	r25, 0x00	; 0
     468:	0e 94 13 01 	call	0x226	; 0x226 <i2cWrite>
	
	i2cStart();						//read gyro data
     46c:	0e 94 1e 01 	call	0x23c	; 0x23c <i2cStart>
	i2cWrite(SLAVE_ADDRESS);
     470:	80 ed       	ldi	r24, 0xD0	; 208
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	0e 94 13 01 	call	0x226	; 0x226 <i2cWrite>
	Gyro_x = (((int)i2cRead()<<8) | (int)i2cRead());
     478:	0e 94 02 01 	call	0x204	; 0x204 <i2cRead>
     47c:	c8 2f       	mov	r28, r24
     47e:	0e 94 02 01 	call	0x204	; 0x204 <i2cRead>
     482:	6c 2f       	mov	r22, r28
     484:	70 e0       	ldi	r23, 0x00	; 0
     486:	76 2f       	mov	r23, r22
     488:	66 27       	eor	r22, r22
     48a:	68 2b       	or	r22, r24
     48c:	07 2e       	mov	r0, r23
     48e:	00 0c       	add	r0, r0
     490:	88 0b       	sbc	r24, r24
     492:	99 0b       	sbc	r25, r25
     494:	0e 94 56 04 	call	0x8ac	; 0x8ac <__floatsisf>
     498:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <Gyro_x>
     49c:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <Gyro_x+0x1>
     4a0:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <Gyro_x+0x2>
     4a4:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <Gyro_x+0x3>
	Gyro_y = (((int)i2cRead()<<8) | (int)i2cRead());
     4a8:	0e 94 02 01 	call	0x204	; 0x204 <i2cRead>
     4ac:	c8 2f       	mov	r28, r24
     4ae:	0e 94 02 01 	call	0x204	; 0x204 <i2cRead>
     4b2:	6c 2f       	mov	r22, r28
     4b4:	70 e0       	ldi	r23, 0x00	; 0
     4b6:	76 2f       	mov	r23, r22
     4b8:	66 27       	eor	r22, r22
     4ba:	68 2b       	or	r22, r24
     4bc:	07 2e       	mov	r0, r23
     4be:	00 0c       	add	r0, r0
     4c0:	88 0b       	sbc	r24, r24
     4c2:	99 0b       	sbc	r25, r25
     4c4:	0e 94 56 04 	call	0x8ac	; 0x8ac <__floatsisf>
     4c8:	60 93 37 01 	sts	0x0137, r22	; 0x800137 <Gyro_y>
     4cc:	70 93 38 01 	sts	0x0138, r23	; 0x800138 <Gyro_y+0x1>
     4d0:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <Gyro_y+0x2>
     4d4:	90 93 3a 01 	sts	0x013A, r25	; 0x80013a <Gyro_y+0x3>
	Gyro_z = (((int)i2cRead()<<8) | (int)i2cRead());
     4d8:	0e 94 02 01 	call	0x204	; 0x204 <i2cRead>
     4dc:	c8 2f       	mov	r28, r24
     4de:	0e 94 02 01 	call	0x204	; 0x204 <i2cRead>
     4e2:	6c 2f       	mov	r22, r28
     4e4:	70 e0       	ldi	r23, 0x00	; 0
     4e6:	76 2f       	mov	r23, r22
     4e8:	66 27       	eor	r22, r22
     4ea:	68 2b       	or	r22, r24
     4ec:	07 2e       	mov	r0, r23
     4ee:	00 0c       	add	r0, r0
     4f0:	88 0b       	sbc	r24, r24
     4f2:	99 0b       	sbc	r25, r25
     4f4:	0e 94 56 04 	call	0x8ac	; 0x8ac <__floatsisf>
     4f8:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <Gyro_z>
     4fc:	70 93 27 01 	sts	0x0127, r23	; 0x800127 <Gyro_z+0x1>
     500:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <Gyro_z+0x2>
     504:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <Gyro_z+0x3>
	i2cStop();						//stop condition
     508:	0e 94 24 01 	call	0x248	; 0x248 <i2cStop>
}
     50c:	cf 91       	pop	r28
     50e:	08 95       	ret

00000510 <sendData>:

void sendData()
{
     510:	df 92       	push	r13
     512:	ef 92       	push	r14
     514:	ff 92       	push	r15
     516:	0f 93       	push	r16
     518:	1f 93       	push	r17
     51a:	cf 93       	push	r28
     51c:	df 93       	push	r29
     51e:	cd b7       	in	r28, 0x3d	; 61
     520:	de b7       	in	r29, 0x3e	; 62
     522:	64 97       	sbiw	r28, 0x14	; 20
     524:	0f b6       	in	r0, 0x3f	; 63
     526:	f8 94       	cli
     528:	de bf       	out	0x3e, r29	; 62
     52a:	0f be       	out	0x3f, r0	; 63
     52c:	cd bf       	out	0x3d, r28	; 61
	char array[20];
	Ax = Acc_x/16384.0;
     52e:	20 e0       	ldi	r18, 0x00	; 0
     530:	30 e0       	ldi	r19, 0x00	; 0
     532:	40 e8       	ldi	r20, 0x80	; 128
     534:	58 e3       	ldi	r21, 0x38	; 56
     536:	60 91 2a 01 	lds	r22, 0x012A	; 0x80012a <Acc_x>
     53a:	70 91 2b 01 	lds	r23, 0x012B	; 0x80012b <Acc_x+0x1>
     53e:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <Acc_x+0x2>
     542:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <Acc_x+0x3>
     546:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <__mulsf3>
     54a:	60 93 2e 01 	sts	0x012E, r22	; 0x80012e <Ax>
     54e:	70 93 2f 01 	sts	0x012F, r23	; 0x80012f <Ax+0x1>
     552:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <Ax+0x2>
     556:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <Ax+0x3>
	snprintf(array,sizeof(array), "%f\r\n", Ax);
     55a:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <Ax>
     55e:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <Ax+0x1>
     562:	a0 91 30 01 	lds	r26, 0x0130	; 0x800130 <Ax+0x2>
     566:	b0 91 31 01 	lds	r27, 0x0131	; 0x800131 <Ax+0x3>
     56a:	bf 93       	push	r27
     56c:	af 93       	push	r26
     56e:	9f 93       	push	r25
     570:	8f 93       	push	r24
     572:	0f 2e       	mov	r0, r31
     574:	f0 e0       	ldi	r31, 0x00	; 0
     576:	ef 2e       	mov	r14, r31
     578:	f1 e0       	ldi	r31, 0x01	; 1
     57a:	ff 2e       	mov	r15, r31
     57c:	f0 2d       	mov	r31, r0
     57e:	ff 92       	push	r15
     580:	ef 92       	push	r14
     582:	1f 92       	push	r1
     584:	0f 2e       	mov	r0, r31
     586:	f4 e1       	ldi	r31, 0x14	; 20
     588:	df 2e       	mov	r13, r31
     58a:	f0 2d       	mov	r31, r0
     58c:	df 92       	push	r13
     58e:	8e 01       	movw	r16, r28
     590:	0f 5f       	subi	r16, 0xFF	; 255
     592:	1f 4f       	sbci	r17, 0xFF	; 255
     594:	1f 93       	push	r17
     596:	0f 93       	push	r16
     598:	0e 94 2d 0a 	call	0x145a	; 0x145a <snprintf>
	USART_tx(array);
     59c:	c8 01       	movw	r24, r16
     59e:	0e 94 83 01 	call	0x306	; 0x306 <USART_tx>
	
	Ay = Acc_y/16384.0;
     5a2:	20 e0       	ldi	r18, 0x00	; 0
     5a4:	30 e0       	ldi	r19, 0x00	; 0
     5a6:	40 e8       	ldi	r20, 0x80	; 128
     5a8:	58 e3       	ldi	r21, 0x38	; 56
     5aa:	60 91 1e 01 	lds	r22, 0x011E	; 0x80011e <Acc_y>
     5ae:	70 91 1f 01 	lds	r23, 0x011F	; 0x80011f <Acc_y+0x1>
     5b2:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <Acc_y+0x2>
     5b6:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <Acc_y+0x3>
     5ba:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <__mulsf3>
     5be:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <Ay>
     5c2:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <Ay+0x1>
     5c6:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <Ay+0x2>
     5ca:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <Ay+0x3>
	snprintf(array,sizeof(array), "%f\r\n", Ay);
     5ce:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <Ay>
     5d2:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <Ay+0x1>
     5d6:	a0 91 24 01 	lds	r26, 0x0124	; 0x800124 <Ay+0x2>
     5da:	b0 91 25 01 	lds	r27, 0x0125	; 0x800125 <Ay+0x3>
     5de:	bf 93       	push	r27
     5e0:	af 93       	push	r26
     5e2:	9f 93       	push	r25
     5e4:	8f 93       	push	r24
     5e6:	ff 92       	push	r15
     5e8:	ef 92       	push	r14
     5ea:	1f 92       	push	r1
     5ec:	df 92       	push	r13
     5ee:	1f 93       	push	r17
     5f0:	0f 93       	push	r16
     5f2:	0e 94 2d 0a 	call	0x145a	; 0x145a <snprintf>
	USART_tx(array);
     5f6:	c8 01       	movw	r24, r16
     5f8:	0e 94 83 01 	call	0x306	; 0x306 <USART_tx>
	
	Az = Acc_z/16384.0;
     5fc:	20 e0       	ldi	r18, 0x00	; 0
     5fe:	30 e0       	ldi	r19, 0x00	; 0
     600:	40 e8       	ldi	r20, 0x80	; 128
     602:	58 e3       	ldi	r21, 0x38	; 56
     604:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <Acc_z>
     608:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <Acc_z+0x1>
     60c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <Acc_z+0x2>
     610:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <Acc_z+0x3>
     614:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <__mulsf3>
     618:	60 93 33 01 	sts	0x0133, r22	; 0x800133 <Az>
     61c:	70 93 34 01 	sts	0x0134, r23	; 0x800134 <Az+0x1>
     620:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <Az+0x2>
     624:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <Az+0x3>
	snprintf(array,sizeof(array), "%f\r\n", Az);
     628:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <Az>
     62c:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <Az+0x1>
     630:	a0 91 35 01 	lds	r26, 0x0135	; 0x800135 <Az+0x2>
     634:	b0 91 36 01 	lds	r27, 0x0136	; 0x800136 <Az+0x3>
     638:	bf 93       	push	r27
     63a:	af 93       	push	r26
     63c:	9f 93       	push	r25
     63e:	8f 93       	push	r24
     640:	ff 92       	push	r15
     642:	ef 92       	push	r14
     644:	1f 92       	push	r1
     646:	df 92       	push	r13
     648:	1f 93       	push	r17
     64a:	0f 93       	push	r16
     64c:	0e 94 2d 0a 	call	0x145a	; 0x145a <snprintf>
	USART_tx(array);
     650:	c8 01       	movw	r24, r16
     652:	0e 94 83 01 	call	0x306	; 0x306 <USART_tx>
	
	Gx = Gyro_x/16.4;
     656:	23 e3       	ldi	r18, 0x33	; 51
     658:	33 e3       	ldi	r19, 0x33	; 51
     65a:	43 e8       	ldi	r20, 0x83	; 131
     65c:	51 e4       	ldi	r21, 0x41	; 65
     65e:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <Gyro_x>
     662:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <Gyro_x+0x1>
     666:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <Gyro_x+0x2>
     66a:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <Gyro_x+0x3>
     66e:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <__divsf3>
     672:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <Gx>
     676:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <Gx+0x1>
     67a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <Gx+0x2>
     67e:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <Gx+0x3>
	snprintf(array,sizeof(array), "%f\r\n", Gx);
     682:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <Gx>
     686:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <Gx+0x1>
     68a:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <Gx+0x2>
     68e:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <Gx+0x3>
     692:	bf 93       	push	r27
     694:	af 93       	push	r26
     696:	9f 93       	push	r25
     698:	8f 93       	push	r24
     69a:	ff 92       	push	r15
     69c:	ef 92       	push	r14
     69e:	1f 92       	push	r1
     6a0:	df 92       	push	r13
     6a2:	1f 93       	push	r17
     6a4:	0f 93       	push	r16
     6a6:	0e 94 2d 0a 	call	0x145a	; 0x145a <snprintf>
	USART_tx(array);
     6aa:	0f b6       	in	r0, 0x3f	; 63
     6ac:	f8 94       	cli
     6ae:	de bf       	out	0x3e, r29	; 62
     6b0:	0f be       	out	0x3f, r0	; 63
     6b2:	cd bf       	out	0x3d, r28	; 61
     6b4:	c8 01       	movw	r24, r16
     6b6:	0e 94 83 01 	call	0x306	; 0x306 <USART_tx>
	
	Gy = Gyro_y/16.4;
     6ba:	23 e3       	ldi	r18, 0x33	; 51
     6bc:	33 e3       	ldi	r19, 0x33	; 51
     6be:	43 e8       	ldi	r20, 0x83	; 131
     6c0:	51 e4       	ldi	r21, 0x41	; 65
     6c2:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <Gyro_y>
     6c6:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <Gyro_y+0x1>
     6ca:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <Gyro_y+0x2>
     6ce:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <Gyro_y+0x3>
     6d2:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <__divsf3>
     6d6:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <Gy>
     6da:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <Gy+0x1>
     6de:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <Gy+0x2>
     6e2:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <Gy+0x3>
	snprintf(array,sizeof(array), "%f\r\n", Gy);
     6e6:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <Gy>
     6ea:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <Gy+0x1>
     6ee:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <Gy+0x2>
     6f2:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <Gy+0x3>
     6f6:	bf 93       	push	r27
     6f8:	af 93       	push	r26
     6fa:	9f 93       	push	r25
     6fc:	8f 93       	push	r24
     6fe:	ff 92       	push	r15
     700:	ef 92       	push	r14
     702:	1f 92       	push	r1
     704:	df 92       	push	r13
     706:	1f 93       	push	r17
     708:	0f 93       	push	r16
     70a:	0e 94 2d 0a 	call	0x145a	; 0x145a <snprintf>
	USART_tx(array);
     70e:	c8 01       	movw	r24, r16
     710:	0e 94 83 01 	call	0x306	; 0x306 <USART_tx>
	
	Gz = Gyro_z/16.4;
     714:	23 e3       	ldi	r18, 0x33	; 51
     716:	33 e3       	ldi	r19, 0x33	; 51
     718:	43 e8       	ldi	r20, 0x83	; 131
     71a:	51 e4       	ldi	r21, 0x41	; 65
     71c:	60 91 26 01 	lds	r22, 0x0126	; 0x800126 <Gyro_z>
     720:	70 91 27 01 	lds	r23, 0x0127	; 0x800127 <Gyro_z+0x1>
     724:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <Gyro_z+0x2>
     728:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <Gyro_z+0x3>
     72c:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <__divsf3>
     730:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <__data_end>
     734:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <__data_end+0x1>
     738:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end+0x2>
     73c:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__data_end+0x3>
	snprintf(array,sizeof(array), "%f\r\n", Gz);
     740:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
     744:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
     748:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <__data_end+0x2>
     74c:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <__data_end+0x3>
     750:	bf 93       	push	r27
     752:	af 93       	push	r26
     754:	9f 93       	push	r25
     756:	8f 93       	push	r24
     758:	ff 92       	push	r15
     75a:	ef 92       	push	r14
     75c:	1f 92       	push	r1
     75e:	df 92       	push	r13
     760:	1f 93       	push	r17
     762:	0f 93       	push	r16
     764:	0e 94 2d 0a 	call	0x145a	; 0x145a <snprintf>
	USART_tx(array);
     768:	c8 01       	movw	r24, r16
     76a:	0e 94 83 01 	call	0x306	; 0x306 <USART_tx>
}
     76e:	0f b6       	in	r0, 0x3f	; 63
     770:	f8 94       	cli
     772:	de bf       	out	0x3e, r29	; 62
     774:	0f be       	out	0x3f, r0	; 63
     776:	cd bf       	out	0x3d, r28	; 61
     778:	64 96       	adiw	r28, 0x14	; 20
     77a:	0f b6       	in	r0, 0x3f	; 63
     77c:	f8 94       	cli
     77e:	de bf       	out	0x3e, r29	; 62
     780:	0f be       	out	0x3f, r0	; 63
     782:	cd bf       	out	0x3d, r28	; 61
     784:	df 91       	pop	r29
     786:	cf 91       	pop	r28
     788:	1f 91       	pop	r17
     78a:	0f 91       	pop	r16
     78c:	ff 90       	pop	r15
     78e:	ef 90       	pop	r14
     790:	df 90       	pop	r13
     792:	08 95       	ret

00000794 <main>:
	i2cStop();						//stop condition
}

int main()
{
	i2cInit();                  //initializing functions
     794:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <i2cInit>
	i2cStart();
     798:	0e 94 1e 01 	call	0x23c	; 0x23c <i2cStart>
	USART_tx_transmit();
     79c:	0e 94 76 01 	call	0x2ec	; 0x2ec <USART_tx_transmit>
	initializeUART();
     7a0:	0e 94 69 01 	call	0x2d2	; 0x2d2 <initializeUART>
	gyroInit();
     7a4:	0e 94 99 01 	call	0x332	; 0x332 <gyroInit>
	
	while(1)
	{
		Read_RawValue();		//read in data
     7a8:	0e 94 db 01 	call	0x3b6	; 0x3b6 <Read_RawValue>
		sendData();				//output data to UART
     7ac:	0e 94 88 02 	call	0x510	; 0x510 <sendData>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7b0:	2f ef       	ldi	r18, 0xFF	; 255
     7b2:	84 e3       	ldi	r24, 0x34	; 52
     7b4:	9c e0       	ldi	r25, 0x0C	; 12
     7b6:	21 50       	subi	r18, 0x01	; 1
     7b8:	80 40       	sbci	r24, 0x00	; 0
     7ba:	90 40       	sbci	r25, 0x00	; 0
     7bc:	e1 f7       	brne	.-8      	; 0x7b6 <main+0x22>
     7be:	00 c0       	rjmp	.+0      	; 0x7c0 <main+0x2c>
     7c0:	00 00       	nop
     7c2:	f2 cf       	rjmp	.-28     	; 0x7a8 <main+0x14>

000007c4 <__divsf3>:
     7c4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__divsf3x>
     7c8:	0c 94 a8 04 	jmp	0x950	; 0x950 <__fp_round>
     7cc:	0e 94 a1 04 	call	0x942	; 0x942 <__fp_pscB>
     7d0:	58 f0       	brcs	.+22     	; 0x7e8 <__divsf3+0x24>
     7d2:	0e 94 9a 04 	call	0x934	; 0x934 <__fp_pscA>
     7d6:	40 f0       	brcs	.+16     	; 0x7e8 <__divsf3+0x24>
     7d8:	29 f4       	brne	.+10     	; 0x7e4 <__divsf3+0x20>
     7da:	5f 3f       	cpi	r21, 0xFF	; 255
     7dc:	29 f0       	breq	.+10     	; 0x7e8 <__divsf3+0x24>
     7de:	0c 94 91 04 	jmp	0x922	; 0x922 <__fp_inf>
     7e2:	51 11       	cpse	r21, r1
     7e4:	0c 94 dc 04 	jmp	0x9b8	; 0x9b8 <__fp_szero>
     7e8:	0c 94 97 04 	jmp	0x92e	; 0x92e <__fp_nan>

000007ec <__divsf3x>:
     7ec:	0e 94 b9 04 	call	0x972	; 0x972 <__fp_split3>
     7f0:	68 f3       	brcs	.-38     	; 0x7cc <__divsf3+0x8>

000007f2 <__divsf3_pse>:
     7f2:	99 23       	and	r25, r25
     7f4:	b1 f3       	breq	.-20     	; 0x7e2 <__divsf3+0x1e>
     7f6:	55 23       	and	r21, r21
     7f8:	91 f3       	breq	.-28     	; 0x7de <__divsf3+0x1a>
     7fa:	95 1b       	sub	r25, r21
     7fc:	55 0b       	sbc	r21, r21
     7fe:	bb 27       	eor	r27, r27
     800:	aa 27       	eor	r26, r26
     802:	62 17       	cp	r22, r18
     804:	73 07       	cpc	r23, r19
     806:	84 07       	cpc	r24, r20
     808:	38 f0       	brcs	.+14     	; 0x818 <__divsf3_pse+0x26>
     80a:	9f 5f       	subi	r25, 0xFF	; 255
     80c:	5f 4f       	sbci	r21, 0xFF	; 255
     80e:	22 0f       	add	r18, r18
     810:	33 1f       	adc	r19, r19
     812:	44 1f       	adc	r20, r20
     814:	aa 1f       	adc	r26, r26
     816:	a9 f3       	breq	.-22     	; 0x802 <__divsf3_pse+0x10>
     818:	35 d0       	rcall	.+106    	; 0x884 <__divsf3_pse+0x92>
     81a:	0e 2e       	mov	r0, r30
     81c:	3a f0       	brmi	.+14     	; 0x82c <__divsf3_pse+0x3a>
     81e:	e0 e8       	ldi	r30, 0x80	; 128
     820:	32 d0       	rcall	.+100    	; 0x886 <__divsf3_pse+0x94>
     822:	91 50       	subi	r25, 0x01	; 1
     824:	50 40       	sbci	r21, 0x00	; 0
     826:	e6 95       	lsr	r30
     828:	00 1c       	adc	r0, r0
     82a:	ca f7       	brpl	.-14     	; 0x81e <__divsf3_pse+0x2c>
     82c:	2b d0       	rcall	.+86     	; 0x884 <__divsf3_pse+0x92>
     82e:	fe 2f       	mov	r31, r30
     830:	29 d0       	rcall	.+82     	; 0x884 <__divsf3_pse+0x92>
     832:	66 0f       	add	r22, r22
     834:	77 1f       	adc	r23, r23
     836:	88 1f       	adc	r24, r24
     838:	bb 1f       	adc	r27, r27
     83a:	26 17       	cp	r18, r22
     83c:	37 07       	cpc	r19, r23
     83e:	48 07       	cpc	r20, r24
     840:	ab 07       	cpc	r26, r27
     842:	b0 e8       	ldi	r27, 0x80	; 128
     844:	09 f0       	breq	.+2      	; 0x848 <__divsf3_pse+0x56>
     846:	bb 0b       	sbc	r27, r27
     848:	80 2d       	mov	r24, r0
     84a:	bf 01       	movw	r22, r30
     84c:	ff 27       	eor	r31, r31
     84e:	93 58       	subi	r25, 0x83	; 131
     850:	5f 4f       	sbci	r21, 0xFF	; 255
     852:	3a f0       	brmi	.+14     	; 0x862 <__divsf3_pse+0x70>
     854:	9e 3f       	cpi	r25, 0xFE	; 254
     856:	51 05       	cpc	r21, r1
     858:	78 f0       	brcs	.+30     	; 0x878 <__divsf3_pse+0x86>
     85a:	0c 94 91 04 	jmp	0x922	; 0x922 <__fp_inf>
     85e:	0c 94 dc 04 	jmp	0x9b8	; 0x9b8 <__fp_szero>
     862:	5f 3f       	cpi	r21, 0xFF	; 255
     864:	e4 f3       	brlt	.-8      	; 0x85e <__divsf3_pse+0x6c>
     866:	98 3e       	cpi	r25, 0xE8	; 232
     868:	d4 f3       	brlt	.-12     	; 0x85e <__divsf3_pse+0x6c>
     86a:	86 95       	lsr	r24
     86c:	77 95       	ror	r23
     86e:	67 95       	ror	r22
     870:	b7 95       	ror	r27
     872:	f7 95       	ror	r31
     874:	9f 5f       	subi	r25, 0xFF	; 255
     876:	c9 f7       	brne	.-14     	; 0x86a <__divsf3_pse+0x78>
     878:	88 0f       	add	r24, r24
     87a:	91 1d       	adc	r25, r1
     87c:	96 95       	lsr	r25
     87e:	87 95       	ror	r24
     880:	97 f9       	bld	r25, 7
     882:	08 95       	ret
     884:	e1 e0       	ldi	r30, 0x01	; 1
     886:	66 0f       	add	r22, r22
     888:	77 1f       	adc	r23, r23
     88a:	88 1f       	adc	r24, r24
     88c:	bb 1f       	adc	r27, r27
     88e:	62 17       	cp	r22, r18
     890:	73 07       	cpc	r23, r19
     892:	84 07       	cpc	r24, r20
     894:	ba 07       	cpc	r27, r26
     896:	20 f0       	brcs	.+8      	; 0x8a0 <__divsf3_pse+0xae>
     898:	62 1b       	sub	r22, r18
     89a:	73 0b       	sbc	r23, r19
     89c:	84 0b       	sbc	r24, r20
     89e:	ba 0b       	sbc	r27, r26
     8a0:	ee 1f       	adc	r30, r30
     8a2:	88 f7       	brcc	.-30     	; 0x886 <__divsf3_pse+0x94>
     8a4:	e0 95       	com	r30
     8a6:	08 95       	ret

000008a8 <__floatunsisf>:
     8a8:	e8 94       	clt
     8aa:	09 c0       	rjmp	.+18     	; 0x8be <__floatsisf+0x12>

000008ac <__floatsisf>:
     8ac:	97 fb       	bst	r25, 7
     8ae:	3e f4       	brtc	.+14     	; 0x8be <__floatsisf+0x12>
     8b0:	90 95       	com	r25
     8b2:	80 95       	com	r24
     8b4:	70 95       	com	r23
     8b6:	61 95       	neg	r22
     8b8:	7f 4f       	sbci	r23, 0xFF	; 255
     8ba:	8f 4f       	sbci	r24, 0xFF	; 255
     8bc:	9f 4f       	sbci	r25, 0xFF	; 255
     8be:	99 23       	and	r25, r25
     8c0:	a9 f0       	breq	.+42     	; 0x8ec <__floatsisf+0x40>
     8c2:	f9 2f       	mov	r31, r25
     8c4:	96 e9       	ldi	r25, 0x96	; 150
     8c6:	bb 27       	eor	r27, r27
     8c8:	93 95       	inc	r25
     8ca:	f6 95       	lsr	r31
     8cc:	87 95       	ror	r24
     8ce:	77 95       	ror	r23
     8d0:	67 95       	ror	r22
     8d2:	b7 95       	ror	r27
     8d4:	f1 11       	cpse	r31, r1
     8d6:	f8 cf       	rjmp	.-16     	; 0x8c8 <__floatsisf+0x1c>
     8d8:	fa f4       	brpl	.+62     	; 0x918 <__stack+0x19>
     8da:	bb 0f       	add	r27, r27
     8dc:	11 f4       	brne	.+4      	; 0x8e2 <__floatsisf+0x36>
     8de:	60 ff       	sbrs	r22, 0
     8e0:	1b c0       	rjmp	.+54     	; 0x918 <__stack+0x19>
     8e2:	6f 5f       	subi	r22, 0xFF	; 255
     8e4:	7f 4f       	sbci	r23, 0xFF	; 255
     8e6:	8f 4f       	sbci	r24, 0xFF	; 255
     8e8:	9f 4f       	sbci	r25, 0xFF	; 255
     8ea:	16 c0       	rjmp	.+44     	; 0x918 <__stack+0x19>
     8ec:	88 23       	and	r24, r24
     8ee:	11 f0       	breq	.+4      	; 0x8f4 <__floatsisf+0x48>
     8f0:	96 e9       	ldi	r25, 0x96	; 150
     8f2:	11 c0       	rjmp	.+34     	; 0x916 <__stack+0x17>
     8f4:	77 23       	and	r23, r23
     8f6:	21 f0       	breq	.+8      	; 0x900 <__stack+0x1>
     8f8:	9e e8       	ldi	r25, 0x8E	; 142
     8fa:	87 2f       	mov	r24, r23
     8fc:	76 2f       	mov	r23, r22
     8fe:	05 c0       	rjmp	.+10     	; 0x90a <__stack+0xb>
     900:	66 23       	and	r22, r22
     902:	71 f0       	breq	.+28     	; 0x920 <__stack+0x21>
     904:	96 e8       	ldi	r25, 0x86	; 134
     906:	86 2f       	mov	r24, r22
     908:	70 e0       	ldi	r23, 0x00	; 0
     90a:	60 e0       	ldi	r22, 0x00	; 0
     90c:	2a f0       	brmi	.+10     	; 0x918 <__stack+0x19>
     90e:	9a 95       	dec	r25
     910:	66 0f       	add	r22, r22
     912:	77 1f       	adc	r23, r23
     914:	88 1f       	adc	r24, r24
     916:	da f7       	brpl	.-10     	; 0x90e <__stack+0xf>
     918:	88 0f       	add	r24, r24
     91a:	96 95       	lsr	r25
     91c:	87 95       	ror	r24
     91e:	97 f9       	bld	r25, 7
     920:	08 95       	ret

00000922 <__fp_inf>:
     922:	97 f9       	bld	r25, 7
     924:	9f 67       	ori	r25, 0x7F	; 127
     926:	80 e8       	ldi	r24, 0x80	; 128
     928:	70 e0       	ldi	r23, 0x00	; 0
     92a:	60 e0       	ldi	r22, 0x00	; 0
     92c:	08 95       	ret

0000092e <__fp_nan>:
     92e:	9f ef       	ldi	r25, 0xFF	; 255
     930:	80 ec       	ldi	r24, 0xC0	; 192
     932:	08 95       	ret

00000934 <__fp_pscA>:
     934:	00 24       	eor	r0, r0
     936:	0a 94       	dec	r0
     938:	16 16       	cp	r1, r22
     93a:	17 06       	cpc	r1, r23
     93c:	18 06       	cpc	r1, r24
     93e:	09 06       	cpc	r0, r25
     940:	08 95       	ret

00000942 <__fp_pscB>:
     942:	00 24       	eor	r0, r0
     944:	0a 94       	dec	r0
     946:	12 16       	cp	r1, r18
     948:	13 06       	cpc	r1, r19
     94a:	14 06       	cpc	r1, r20
     94c:	05 06       	cpc	r0, r21
     94e:	08 95       	ret

00000950 <__fp_round>:
     950:	09 2e       	mov	r0, r25
     952:	03 94       	inc	r0
     954:	00 0c       	add	r0, r0
     956:	11 f4       	brne	.+4      	; 0x95c <__fp_round+0xc>
     958:	88 23       	and	r24, r24
     95a:	52 f0       	brmi	.+20     	; 0x970 <__fp_round+0x20>
     95c:	bb 0f       	add	r27, r27
     95e:	40 f4       	brcc	.+16     	; 0x970 <__fp_round+0x20>
     960:	bf 2b       	or	r27, r31
     962:	11 f4       	brne	.+4      	; 0x968 <__fp_round+0x18>
     964:	60 ff       	sbrs	r22, 0
     966:	04 c0       	rjmp	.+8      	; 0x970 <__fp_round+0x20>
     968:	6f 5f       	subi	r22, 0xFF	; 255
     96a:	7f 4f       	sbci	r23, 0xFF	; 255
     96c:	8f 4f       	sbci	r24, 0xFF	; 255
     96e:	9f 4f       	sbci	r25, 0xFF	; 255
     970:	08 95       	ret

00000972 <__fp_split3>:
     972:	57 fd       	sbrc	r21, 7
     974:	90 58       	subi	r25, 0x80	; 128
     976:	44 0f       	add	r20, r20
     978:	55 1f       	adc	r21, r21
     97a:	59 f0       	breq	.+22     	; 0x992 <__fp_splitA+0x10>
     97c:	5f 3f       	cpi	r21, 0xFF	; 255
     97e:	71 f0       	breq	.+28     	; 0x99c <__fp_splitA+0x1a>
     980:	47 95       	ror	r20

00000982 <__fp_splitA>:
     982:	88 0f       	add	r24, r24
     984:	97 fb       	bst	r25, 7
     986:	99 1f       	adc	r25, r25
     988:	61 f0       	breq	.+24     	; 0x9a2 <__fp_splitA+0x20>
     98a:	9f 3f       	cpi	r25, 0xFF	; 255
     98c:	79 f0       	breq	.+30     	; 0x9ac <__fp_splitA+0x2a>
     98e:	87 95       	ror	r24
     990:	08 95       	ret
     992:	12 16       	cp	r1, r18
     994:	13 06       	cpc	r1, r19
     996:	14 06       	cpc	r1, r20
     998:	55 1f       	adc	r21, r21
     99a:	f2 cf       	rjmp	.-28     	; 0x980 <__fp_split3+0xe>
     99c:	46 95       	lsr	r20
     99e:	f1 df       	rcall	.-30     	; 0x982 <__fp_splitA>
     9a0:	08 c0       	rjmp	.+16     	; 0x9b2 <__fp_splitA+0x30>
     9a2:	16 16       	cp	r1, r22
     9a4:	17 06       	cpc	r1, r23
     9a6:	18 06       	cpc	r1, r24
     9a8:	99 1f       	adc	r25, r25
     9aa:	f1 cf       	rjmp	.-30     	; 0x98e <__fp_splitA+0xc>
     9ac:	86 95       	lsr	r24
     9ae:	71 05       	cpc	r23, r1
     9b0:	61 05       	cpc	r22, r1
     9b2:	08 94       	sec
     9b4:	08 95       	ret

000009b6 <__fp_zero>:
     9b6:	e8 94       	clt

000009b8 <__fp_szero>:
     9b8:	bb 27       	eor	r27, r27
     9ba:	66 27       	eor	r22, r22
     9bc:	77 27       	eor	r23, r23
     9be:	cb 01       	movw	r24, r22
     9c0:	97 f9       	bld	r25, 7
     9c2:	08 95       	ret

000009c4 <__mulsf3>:
     9c4:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__mulsf3x>
     9c8:	0c 94 a8 04 	jmp	0x950	; 0x950 <__fp_round>
     9cc:	0e 94 9a 04 	call	0x934	; 0x934 <__fp_pscA>
     9d0:	38 f0       	brcs	.+14     	; 0x9e0 <__mulsf3+0x1c>
     9d2:	0e 94 a1 04 	call	0x942	; 0x942 <__fp_pscB>
     9d6:	20 f0       	brcs	.+8      	; 0x9e0 <__mulsf3+0x1c>
     9d8:	95 23       	and	r25, r21
     9da:	11 f0       	breq	.+4      	; 0x9e0 <__mulsf3+0x1c>
     9dc:	0c 94 91 04 	jmp	0x922	; 0x922 <__fp_inf>
     9e0:	0c 94 97 04 	jmp	0x92e	; 0x92e <__fp_nan>
     9e4:	11 24       	eor	r1, r1
     9e6:	0c 94 dc 04 	jmp	0x9b8	; 0x9b8 <__fp_szero>

000009ea <__mulsf3x>:
     9ea:	0e 94 b9 04 	call	0x972	; 0x972 <__fp_split3>
     9ee:	70 f3       	brcs	.-36     	; 0x9cc <__mulsf3+0x8>

000009f0 <__mulsf3_pse>:
     9f0:	95 9f       	mul	r25, r21
     9f2:	c1 f3       	breq	.-16     	; 0x9e4 <__mulsf3+0x20>
     9f4:	95 0f       	add	r25, r21
     9f6:	50 e0       	ldi	r21, 0x00	; 0
     9f8:	55 1f       	adc	r21, r21
     9fa:	62 9f       	mul	r22, r18
     9fc:	f0 01       	movw	r30, r0
     9fe:	72 9f       	mul	r23, r18
     a00:	bb 27       	eor	r27, r27
     a02:	f0 0d       	add	r31, r0
     a04:	b1 1d       	adc	r27, r1
     a06:	63 9f       	mul	r22, r19
     a08:	aa 27       	eor	r26, r26
     a0a:	f0 0d       	add	r31, r0
     a0c:	b1 1d       	adc	r27, r1
     a0e:	aa 1f       	adc	r26, r26
     a10:	64 9f       	mul	r22, r20
     a12:	66 27       	eor	r22, r22
     a14:	b0 0d       	add	r27, r0
     a16:	a1 1d       	adc	r26, r1
     a18:	66 1f       	adc	r22, r22
     a1a:	82 9f       	mul	r24, r18
     a1c:	22 27       	eor	r18, r18
     a1e:	b0 0d       	add	r27, r0
     a20:	a1 1d       	adc	r26, r1
     a22:	62 1f       	adc	r22, r18
     a24:	73 9f       	mul	r23, r19
     a26:	b0 0d       	add	r27, r0
     a28:	a1 1d       	adc	r26, r1
     a2a:	62 1f       	adc	r22, r18
     a2c:	83 9f       	mul	r24, r19
     a2e:	a0 0d       	add	r26, r0
     a30:	61 1d       	adc	r22, r1
     a32:	22 1f       	adc	r18, r18
     a34:	74 9f       	mul	r23, r20
     a36:	33 27       	eor	r19, r19
     a38:	a0 0d       	add	r26, r0
     a3a:	61 1d       	adc	r22, r1
     a3c:	23 1f       	adc	r18, r19
     a3e:	84 9f       	mul	r24, r20
     a40:	60 0d       	add	r22, r0
     a42:	21 1d       	adc	r18, r1
     a44:	82 2f       	mov	r24, r18
     a46:	76 2f       	mov	r23, r22
     a48:	6a 2f       	mov	r22, r26
     a4a:	11 24       	eor	r1, r1
     a4c:	9f 57       	subi	r25, 0x7F	; 127
     a4e:	50 40       	sbci	r21, 0x00	; 0
     a50:	9a f0       	brmi	.+38     	; 0xa78 <__mulsf3_pse+0x88>
     a52:	f1 f0       	breq	.+60     	; 0xa90 <__mulsf3_pse+0xa0>
     a54:	88 23       	and	r24, r24
     a56:	4a f0       	brmi	.+18     	; 0xa6a <__mulsf3_pse+0x7a>
     a58:	ee 0f       	add	r30, r30
     a5a:	ff 1f       	adc	r31, r31
     a5c:	bb 1f       	adc	r27, r27
     a5e:	66 1f       	adc	r22, r22
     a60:	77 1f       	adc	r23, r23
     a62:	88 1f       	adc	r24, r24
     a64:	91 50       	subi	r25, 0x01	; 1
     a66:	50 40       	sbci	r21, 0x00	; 0
     a68:	a9 f7       	brne	.-22     	; 0xa54 <__mulsf3_pse+0x64>
     a6a:	9e 3f       	cpi	r25, 0xFE	; 254
     a6c:	51 05       	cpc	r21, r1
     a6e:	80 f0       	brcs	.+32     	; 0xa90 <__mulsf3_pse+0xa0>
     a70:	0c 94 91 04 	jmp	0x922	; 0x922 <__fp_inf>
     a74:	0c 94 dc 04 	jmp	0x9b8	; 0x9b8 <__fp_szero>
     a78:	5f 3f       	cpi	r21, 0xFF	; 255
     a7a:	e4 f3       	brlt	.-8      	; 0xa74 <__mulsf3_pse+0x84>
     a7c:	98 3e       	cpi	r25, 0xE8	; 232
     a7e:	d4 f3       	brlt	.-12     	; 0xa74 <__mulsf3_pse+0x84>
     a80:	86 95       	lsr	r24
     a82:	77 95       	ror	r23
     a84:	67 95       	ror	r22
     a86:	b7 95       	ror	r27
     a88:	f7 95       	ror	r31
     a8a:	e7 95       	ror	r30
     a8c:	9f 5f       	subi	r25, 0xFF	; 255
     a8e:	c1 f7       	brne	.-16     	; 0xa80 <__mulsf3_pse+0x90>
     a90:	fe 2b       	or	r31, r30
     a92:	88 0f       	add	r24, r24
     a94:	91 1d       	adc	r25, r1
     a96:	96 95       	lsr	r25
     a98:	87 95       	ror	r24
     a9a:	97 f9       	bld	r25, 7
     a9c:	08 95       	ret

00000a9e <vfprintf>:
     a9e:	a0 e1       	ldi	r26, 0x10	; 16
     aa0:	b0 e0       	ldi	r27, 0x00	; 0
     aa2:	e5 e5       	ldi	r30, 0x55	; 85
     aa4:	f5 e0       	ldi	r31, 0x05	; 5
     aa6:	0c 94 cc 08 	jmp	0x1198	; 0x1198 <__prologue_saves__>
     aaa:	7c 01       	movw	r14, r24
     aac:	1b 01       	movw	r2, r22
     aae:	6a 01       	movw	r12, r20
     ab0:	fc 01       	movw	r30, r24
     ab2:	17 82       	std	Z+7, r1	; 0x07
     ab4:	16 82       	std	Z+6, r1	; 0x06
     ab6:	83 81       	ldd	r24, Z+3	; 0x03
     ab8:	81 ff       	sbrs	r24, 1
     aba:	44 c3       	rjmp	.+1672   	; 0x1144 <vfprintf+0x6a6>
     abc:	9e 01       	movw	r18, r28
     abe:	2f 5f       	subi	r18, 0xFF	; 255
     ac0:	3f 4f       	sbci	r19, 0xFF	; 255
     ac2:	39 01       	movw	r6, r18
     ac4:	f7 01       	movw	r30, r14
     ac6:	93 81       	ldd	r25, Z+3	; 0x03
     ac8:	f1 01       	movw	r30, r2
     aca:	93 fd       	sbrc	r25, 3
     acc:	85 91       	lpm	r24, Z+
     ace:	93 ff       	sbrs	r25, 3
     ad0:	81 91       	ld	r24, Z+
     ad2:	1f 01       	movw	r2, r30
     ad4:	88 23       	and	r24, r24
     ad6:	09 f4       	brne	.+2      	; 0xada <vfprintf+0x3c>
     ad8:	31 c3       	rjmp	.+1634   	; 0x113c <vfprintf+0x69e>
     ada:	85 32       	cpi	r24, 0x25	; 37
     adc:	39 f4       	brne	.+14     	; 0xaec <vfprintf+0x4e>
     ade:	93 fd       	sbrc	r25, 3
     ae0:	85 91       	lpm	r24, Z+
     ae2:	93 ff       	sbrs	r25, 3
     ae4:	81 91       	ld	r24, Z+
     ae6:	1f 01       	movw	r2, r30
     ae8:	85 32       	cpi	r24, 0x25	; 37
     aea:	39 f4       	brne	.+14     	; 0xafa <vfprintf+0x5c>
     aec:	b7 01       	movw	r22, r14
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
     af4:	56 01       	movw	r10, r12
     af6:	65 01       	movw	r12, r10
     af8:	e5 cf       	rjmp	.-54     	; 0xac4 <vfprintf+0x26>
     afa:	10 e0       	ldi	r17, 0x00	; 0
     afc:	51 2c       	mov	r5, r1
     afe:	91 2c       	mov	r9, r1
     b00:	ff e1       	ldi	r31, 0x1F	; 31
     b02:	f9 15       	cp	r31, r9
     b04:	d8 f0       	brcs	.+54     	; 0xb3c <vfprintf+0x9e>
     b06:	8b 32       	cpi	r24, 0x2B	; 43
     b08:	79 f0       	breq	.+30     	; 0xb28 <vfprintf+0x8a>
     b0a:	38 f4       	brcc	.+14     	; 0xb1a <vfprintf+0x7c>
     b0c:	80 32       	cpi	r24, 0x20	; 32
     b0e:	79 f0       	breq	.+30     	; 0xb2e <vfprintf+0x90>
     b10:	83 32       	cpi	r24, 0x23	; 35
     b12:	a1 f4       	brne	.+40     	; 0xb3c <vfprintf+0x9e>
     b14:	f9 2d       	mov	r31, r9
     b16:	f0 61       	ori	r31, 0x10	; 16
     b18:	2e c0       	rjmp	.+92     	; 0xb76 <vfprintf+0xd8>
     b1a:	8d 32       	cpi	r24, 0x2D	; 45
     b1c:	61 f0       	breq	.+24     	; 0xb36 <vfprintf+0x98>
     b1e:	80 33       	cpi	r24, 0x30	; 48
     b20:	69 f4       	brne	.+26     	; 0xb3c <vfprintf+0x9e>
     b22:	29 2d       	mov	r18, r9
     b24:	21 60       	ori	r18, 0x01	; 1
     b26:	2d c0       	rjmp	.+90     	; 0xb82 <vfprintf+0xe4>
     b28:	39 2d       	mov	r19, r9
     b2a:	32 60       	ori	r19, 0x02	; 2
     b2c:	93 2e       	mov	r9, r19
     b2e:	89 2d       	mov	r24, r9
     b30:	84 60       	ori	r24, 0x04	; 4
     b32:	98 2e       	mov	r9, r24
     b34:	2a c0       	rjmp	.+84     	; 0xb8a <vfprintf+0xec>
     b36:	e9 2d       	mov	r30, r9
     b38:	e8 60       	ori	r30, 0x08	; 8
     b3a:	15 c0       	rjmp	.+42     	; 0xb66 <vfprintf+0xc8>
     b3c:	97 fc       	sbrc	r9, 7
     b3e:	2d c0       	rjmp	.+90     	; 0xb9a <vfprintf+0xfc>
     b40:	20 ed       	ldi	r18, 0xD0	; 208
     b42:	28 0f       	add	r18, r24
     b44:	2a 30       	cpi	r18, 0x0A	; 10
     b46:	88 f4       	brcc	.+34     	; 0xb6a <vfprintf+0xcc>
     b48:	96 fe       	sbrs	r9, 6
     b4a:	06 c0       	rjmp	.+12     	; 0xb58 <vfprintf+0xba>
     b4c:	3a e0       	ldi	r19, 0x0A	; 10
     b4e:	13 9f       	mul	r17, r19
     b50:	20 0d       	add	r18, r0
     b52:	11 24       	eor	r1, r1
     b54:	12 2f       	mov	r17, r18
     b56:	19 c0       	rjmp	.+50     	; 0xb8a <vfprintf+0xec>
     b58:	8a e0       	ldi	r24, 0x0A	; 10
     b5a:	58 9e       	mul	r5, r24
     b5c:	20 0d       	add	r18, r0
     b5e:	11 24       	eor	r1, r1
     b60:	52 2e       	mov	r5, r18
     b62:	e9 2d       	mov	r30, r9
     b64:	e0 62       	ori	r30, 0x20	; 32
     b66:	9e 2e       	mov	r9, r30
     b68:	10 c0       	rjmp	.+32     	; 0xb8a <vfprintf+0xec>
     b6a:	8e 32       	cpi	r24, 0x2E	; 46
     b6c:	31 f4       	brne	.+12     	; 0xb7a <vfprintf+0xdc>
     b6e:	96 fc       	sbrc	r9, 6
     b70:	e5 c2       	rjmp	.+1482   	; 0x113c <vfprintf+0x69e>
     b72:	f9 2d       	mov	r31, r9
     b74:	f0 64       	ori	r31, 0x40	; 64
     b76:	9f 2e       	mov	r9, r31
     b78:	08 c0       	rjmp	.+16     	; 0xb8a <vfprintf+0xec>
     b7a:	8c 36       	cpi	r24, 0x6C	; 108
     b7c:	21 f4       	brne	.+8      	; 0xb86 <vfprintf+0xe8>
     b7e:	29 2d       	mov	r18, r9
     b80:	20 68       	ori	r18, 0x80	; 128
     b82:	92 2e       	mov	r9, r18
     b84:	02 c0       	rjmp	.+4      	; 0xb8a <vfprintf+0xec>
     b86:	88 36       	cpi	r24, 0x68	; 104
     b88:	41 f4       	brne	.+16     	; 0xb9a <vfprintf+0xfc>
     b8a:	f1 01       	movw	r30, r2
     b8c:	93 fd       	sbrc	r25, 3
     b8e:	85 91       	lpm	r24, Z+
     b90:	93 ff       	sbrs	r25, 3
     b92:	81 91       	ld	r24, Z+
     b94:	1f 01       	movw	r2, r30
     b96:	81 11       	cpse	r24, r1
     b98:	b3 cf       	rjmp	.-154    	; 0xb00 <vfprintf+0x62>
     b9a:	9b eb       	ldi	r25, 0xBB	; 187
     b9c:	98 0f       	add	r25, r24
     b9e:	93 30       	cpi	r25, 0x03	; 3
     ba0:	20 f4       	brcc	.+8      	; 0xbaa <vfprintf+0x10c>
     ba2:	99 2d       	mov	r25, r9
     ba4:	90 61       	ori	r25, 0x10	; 16
     ba6:	80 5e       	subi	r24, 0xE0	; 224
     ba8:	07 c0       	rjmp	.+14     	; 0xbb8 <vfprintf+0x11a>
     baa:	9b e9       	ldi	r25, 0x9B	; 155
     bac:	98 0f       	add	r25, r24
     bae:	93 30       	cpi	r25, 0x03	; 3
     bb0:	08 f0       	brcs	.+2      	; 0xbb4 <vfprintf+0x116>
     bb2:	66 c1       	rjmp	.+716    	; 0xe80 <vfprintf+0x3e2>
     bb4:	99 2d       	mov	r25, r9
     bb6:	9f 7e       	andi	r25, 0xEF	; 239
     bb8:	96 ff       	sbrs	r25, 6
     bba:	16 e0       	ldi	r17, 0x06	; 6
     bbc:	9f 73       	andi	r25, 0x3F	; 63
     bbe:	99 2e       	mov	r9, r25
     bc0:	85 36       	cpi	r24, 0x65	; 101
     bc2:	19 f4       	brne	.+6      	; 0xbca <vfprintf+0x12c>
     bc4:	90 64       	ori	r25, 0x40	; 64
     bc6:	99 2e       	mov	r9, r25
     bc8:	08 c0       	rjmp	.+16     	; 0xbda <vfprintf+0x13c>
     bca:	86 36       	cpi	r24, 0x66	; 102
     bcc:	21 f4       	brne	.+8      	; 0xbd6 <vfprintf+0x138>
     bce:	39 2f       	mov	r19, r25
     bd0:	30 68       	ori	r19, 0x80	; 128
     bd2:	93 2e       	mov	r9, r19
     bd4:	02 c0       	rjmp	.+4      	; 0xbda <vfprintf+0x13c>
     bd6:	11 11       	cpse	r17, r1
     bd8:	11 50       	subi	r17, 0x01	; 1
     bda:	97 fe       	sbrs	r9, 7
     bdc:	07 c0       	rjmp	.+14     	; 0xbec <vfprintf+0x14e>
     bde:	1c 33       	cpi	r17, 0x3C	; 60
     be0:	50 f4       	brcc	.+20     	; 0xbf6 <vfprintf+0x158>
     be2:	44 24       	eor	r4, r4
     be4:	43 94       	inc	r4
     be6:	41 0e       	add	r4, r17
     be8:	27 e0       	ldi	r18, 0x07	; 7
     bea:	0b c0       	rjmp	.+22     	; 0xc02 <vfprintf+0x164>
     bec:	18 30       	cpi	r17, 0x08	; 8
     bee:	38 f0       	brcs	.+14     	; 0xbfe <vfprintf+0x160>
     bf0:	27 e0       	ldi	r18, 0x07	; 7
     bf2:	17 e0       	ldi	r17, 0x07	; 7
     bf4:	05 c0       	rjmp	.+10     	; 0xc00 <vfprintf+0x162>
     bf6:	27 e0       	ldi	r18, 0x07	; 7
     bf8:	9c e3       	ldi	r25, 0x3C	; 60
     bfa:	49 2e       	mov	r4, r25
     bfc:	02 c0       	rjmp	.+4      	; 0xc02 <vfprintf+0x164>
     bfe:	21 2f       	mov	r18, r17
     c00:	41 2c       	mov	r4, r1
     c02:	56 01       	movw	r10, r12
     c04:	84 e0       	ldi	r24, 0x04	; 4
     c06:	a8 0e       	add	r10, r24
     c08:	b1 1c       	adc	r11, r1
     c0a:	f6 01       	movw	r30, r12
     c0c:	60 81       	ld	r22, Z
     c0e:	71 81       	ldd	r23, Z+1	; 0x01
     c10:	82 81       	ldd	r24, Z+2	; 0x02
     c12:	93 81       	ldd	r25, Z+3	; 0x03
     c14:	04 2d       	mov	r16, r4
     c16:	a3 01       	movw	r20, r6
     c18:	0e 94 03 09 	call	0x1206	; 0x1206 <__ftoa_engine>
     c1c:	6c 01       	movw	r12, r24
     c1e:	f9 81       	ldd	r31, Y+1	; 0x01
     c20:	fc 87       	std	Y+12, r31	; 0x0c
     c22:	f0 ff       	sbrs	r31, 0
     c24:	02 c0       	rjmp	.+4      	; 0xc2a <vfprintf+0x18c>
     c26:	f3 ff       	sbrs	r31, 3
     c28:	06 c0       	rjmp	.+12     	; 0xc36 <vfprintf+0x198>
     c2a:	91 fc       	sbrc	r9, 1
     c2c:	06 c0       	rjmp	.+12     	; 0xc3a <vfprintf+0x19c>
     c2e:	92 fe       	sbrs	r9, 2
     c30:	06 c0       	rjmp	.+12     	; 0xc3e <vfprintf+0x1a0>
     c32:	00 e2       	ldi	r16, 0x20	; 32
     c34:	05 c0       	rjmp	.+10     	; 0xc40 <vfprintf+0x1a2>
     c36:	0d e2       	ldi	r16, 0x2D	; 45
     c38:	03 c0       	rjmp	.+6      	; 0xc40 <vfprintf+0x1a2>
     c3a:	0b e2       	ldi	r16, 0x2B	; 43
     c3c:	01 c0       	rjmp	.+2      	; 0xc40 <vfprintf+0x1a2>
     c3e:	00 e0       	ldi	r16, 0x00	; 0
     c40:	8c 85       	ldd	r24, Y+12	; 0x0c
     c42:	8c 70       	andi	r24, 0x0C	; 12
     c44:	19 f0       	breq	.+6      	; 0xc4c <vfprintf+0x1ae>
     c46:	01 11       	cpse	r16, r1
     c48:	5a c2       	rjmp	.+1204   	; 0x10fe <vfprintf+0x660>
     c4a:	9b c2       	rjmp	.+1334   	; 0x1182 <vfprintf+0x6e4>
     c4c:	97 fe       	sbrs	r9, 7
     c4e:	10 c0       	rjmp	.+32     	; 0xc70 <vfprintf+0x1d2>
     c50:	4c 0c       	add	r4, r12
     c52:	fc 85       	ldd	r31, Y+12	; 0x0c
     c54:	f4 ff       	sbrs	r31, 4
     c56:	04 c0       	rjmp	.+8      	; 0xc60 <vfprintf+0x1c2>
     c58:	8a 81       	ldd	r24, Y+2	; 0x02
     c5a:	81 33       	cpi	r24, 0x31	; 49
     c5c:	09 f4       	brne	.+2      	; 0xc60 <vfprintf+0x1c2>
     c5e:	4a 94       	dec	r4
     c60:	14 14       	cp	r1, r4
     c62:	74 f5       	brge	.+92     	; 0xcc0 <vfprintf+0x222>
     c64:	28 e0       	ldi	r18, 0x08	; 8
     c66:	24 15       	cp	r18, r4
     c68:	78 f5       	brcc	.+94     	; 0xcc8 <vfprintf+0x22a>
     c6a:	88 e0       	ldi	r24, 0x08	; 8
     c6c:	48 2e       	mov	r4, r24
     c6e:	2c c0       	rjmp	.+88     	; 0xcc8 <vfprintf+0x22a>
     c70:	96 fc       	sbrc	r9, 6
     c72:	2a c0       	rjmp	.+84     	; 0xcc8 <vfprintf+0x22a>
     c74:	81 2f       	mov	r24, r17
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	8c 15       	cp	r24, r12
     c7a:	9d 05       	cpc	r25, r13
     c7c:	9c f0       	brlt	.+38     	; 0xca4 <vfprintf+0x206>
     c7e:	3c ef       	ldi	r19, 0xFC	; 252
     c80:	c3 16       	cp	r12, r19
     c82:	3f ef       	ldi	r19, 0xFF	; 255
     c84:	d3 06       	cpc	r13, r19
     c86:	74 f0       	brlt	.+28     	; 0xca4 <vfprintf+0x206>
     c88:	89 2d       	mov	r24, r9
     c8a:	80 68       	ori	r24, 0x80	; 128
     c8c:	98 2e       	mov	r9, r24
     c8e:	0a c0       	rjmp	.+20     	; 0xca4 <vfprintf+0x206>
     c90:	e2 e0       	ldi	r30, 0x02	; 2
     c92:	f0 e0       	ldi	r31, 0x00	; 0
     c94:	ec 0f       	add	r30, r28
     c96:	fd 1f       	adc	r31, r29
     c98:	e1 0f       	add	r30, r17
     c9a:	f1 1d       	adc	r31, r1
     c9c:	80 81       	ld	r24, Z
     c9e:	80 33       	cpi	r24, 0x30	; 48
     ca0:	19 f4       	brne	.+6      	; 0xca8 <vfprintf+0x20a>
     ca2:	11 50       	subi	r17, 0x01	; 1
     ca4:	11 11       	cpse	r17, r1
     ca6:	f4 cf       	rjmp	.-24     	; 0xc90 <vfprintf+0x1f2>
     ca8:	97 fe       	sbrs	r9, 7
     caa:	0e c0       	rjmp	.+28     	; 0xcc8 <vfprintf+0x22a>
     cac:	44 24       	eor	r4, r4
     cae:	43 94       	inc	r4
     cb0:	41 0e       	add	r4, r17
     cb2:	81 2f       	mov	r24, r17
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	c8 16       	cp	r12, r24
     cb8:	d9 06       	cpc	r13, r25
     cba:	2c f4       	brge	.+10     	; 0xcc6 <vfprintf+0x228>
     cbc:	1c 19       	sub	r17, r12
     cbe:	04 c0       	rjmp	.+8      	; 0xcc8 <vfprintf+0x22a>
     cc0:	44 24       	eor	r4, r4
     cc2:	43 94       	inc	r4
     cc4:	01 c0       	rjmp	.+2      	; 0xcc8 <vfprintf+0x22a>
     cc6:	10 e0       	ldi	r17, 0x00	; 0
     cc8:	97 fe       	sbrs	r9, 7
     cca:	06 c0       	rjmp	.+12     	; 0xcd8 <vfprintf+0x23a>
     ccc:	1c 14       	cp	r1, r12
     cce:	1d 04       	cpc	r1, r13
     cd0:	34 f4       	brge	.+12     	; 0xcde <vfprintf+0x240>
     cd2:	c6 01       	movw	r24, r12
     cd4:	01 96       	adiw	r24, 0x01	; 1
     cd6:	05 c0       	rjmp	.+10     	; 0xce2 <vfprintf+0x244>
     cd8:	85 e0       	ldi	r24, 0x05	; 5
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	02 c0       	rjmp	.+4      	; 0xce2 <vfprintf+0x244>
     cde:	81 e0       	ldi	r24, 0x01	; 1
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	01 11       	cpse	r16, r1
     ce4:	01 96       	adiw	r24, 0x01	; 1
     ce6:	11 23       	and	r17, r17
     ce8:	31 f0       	breq	.+12     	; 0xcf6 <vfprintf+0x258>
     cea:	21 2f       	mov	r18, r17
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	2f 5f       	subi	r18, 0xFF	; 255
     cf0:	3f 4f       	sbci	r19, 0xFF	; 255
     cf2:	82 0f       	add	r24, r18
     cf4:	93 1f       	adc	r25, r19
     cf6:	25 2d       	mov	r18, r5
     cf8:	30 e0       	ldi	r19, 0x00	; 0
     cfa:	82 17       	cp	r24, r18
     cfc:	93 07       	cpc	r25, r19
     cfe:	14 f4       	brge	.+4      	; 0xd04 <vfprintf+0x266>
     d00:	58 1a       	sub	r5, r24
     d02:	01 c0       	rjmp	.+2      	; 0xd06 <vfprintf+0x268>
     d04:	51 2c       	mov	r5, r1
     d06:	89 2d       	mov	r24, r9
     d08:	89 70       	andi	r24, 0x09	; 9
     d0a:	49 f4       	brne	.+18     	; 0xd1e <vfprintf+0x280>
     d0c:	55 20       	and	r5, r5
     d0e:	39 f0       	breq	.+14     	; 0xd1e <vfprintf+0x280>
     d10:	b7 01       	movw	r22, r14
     d12:	80 e2       	ldi	r24, 0x20	; 32
     d14:	90 e0       	ldi	r25, 0x00	; 0
     d16:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
     d1a:	5a 94       	dec	r5
     d1c:	f7 cf       	rjmp	.-18     	; 0xd0c <vfprintf+0x26e>
     d1e:	00 23       	and	r16, r16
     d20:	29 f0       	breq	.+10     	; 0xd2c <vfprintf+0x28e>
     d22:	b7 01       	movw	r22, r14
     d24:	80 2f       	mov	r24, r16
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
     d2c:	93 fc       	sbrc	r9, 3
     d2e:	09 c0       	rjmp	.+18     	; 0xd42 <vfprintf+0x2a4>
     d30:	55 20       	and	r5, r5
     d32:	39 f0       	breq	.+14     	; 0xd42 <vfprintf+0x2a4>
     d34:	b7 01       	movw	r22, r14
     d36:	80 e3       	ldi	r24, 0x30	; 48
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
     d3e:	5a 94       	dec	r5
     d40:	f7 cf       	rjmp	.-18     	; 0xd30 <vfprintf+0x292>
     d42:	97 fe       	sbrs	r9, 7
     d44:	4c c0       	rjmp	.+152    	; 0xdde <vfprintf+0x340>
     d46:	46 01       	movw	r8, r12
     d48:	d7 fe       	sbrs	r13, 7
     d4a:	02 c0       	rjmp	.+4      	; 0xd50 <vfprintf+0x2b2>
     d4c:	81 2c       	mov	r8, r1
     d4e:	91 2c       	mov	r9, r1
     d50:	c6 01       	movw	r24, r12
     d52:	88 19       	sub	r24, r8
     d54:	99 09       	sbc	r25, r9
     d56:	f3 01       	movw	r30, r6
     d58:	e8 0f       	add	r30, r24
     d5a:	f9 1f       	adc	r31, r25
     d5c:	fe 87       	std	Y+14, r31	; 0x0e
     d5e:	ed 87       	std	Y+13, r30	; 0x0d
     d60:	96 01       	movw	r18, r12
     d62:	24 19       	sub	r18, r4
     d64:	31 09       	sbc	r19, r1
     d66:	38 8b       	std	Y+16, r19	; 0x10
     d68:	2f 87       	std	Y+15, r18	; 0x0f
     d6a:	01 2f       	mov	r16, r17
     d6c:	10 e0       	ldi	r17, 0x00	; 0
     d6e:	11 95       	neg	r17
     d70:	01 95       	neg	r16
     d72:	11 09       	sbc	r17, r1
     d74:	3f ef       	ldi	r19, 0xFF	; 255
     d76:	83 16       	cp	r8, r19
     d78:	93 06       	cpc	r9, r19
     d7a:	29 f4       	brne	.+10     	; 0xd86 <vfprintf+0x2e8>
     d7c:	b7 01       	movw	r22, r14
     d7e:	8e e2       	ldi	r24, 0x2E	; 46
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
     d86:	c8 14       	cp	r12, r8
     d88:	d9 04       	cpc	r13, r9
     d8a:	4c f0       	brlt	.+18     	; 0xd9e <vfprintf+0x300>
     d8c:	8f 85       	ldd	r24, Y+15	; 0x0f
     d8e:	98 89       	ldd	r25, Y+16	; 0x10
     d90:	88 15       	cp	r24, r8
     d92:	99 05       	cpc	r25, r9
     d94:	24 f4       	brge	.+8      	; 0xd9e <vfprintf+0x300>
     d96:	ed 85       	ldd	r30, Y+13	; 0x0d
     d98:	fe 85       	ldd	r31, Y+14	; 0x0e
     d9a:	81 81       	ldd	r24, Z+1	; 0x01
     d9c:	01 c0       	rjmp	.+2      	; 0xda0 <vfprintf+0x302>
     d9e:	80 e3       	ldi	r24, 0x30	; 48
     da0:	f1 e0       	ldi	r31, 0x01	; 1
     da2:	8f 1a       	sub	r8, r31
     da4:	91 08       	sbc	r9, r1
     da6:	2d 85       	ldd	r18, Y+13	; 0x0d
     da8:	3e 85       	ldd	r19, Y+14	; 0x0e
     daa:	2f 5f       	subi	r18, 0xFF	; 255
     dac:	3f 4f       	sbci	r19, 0xFF	; 255
     dae:	3e 87       	std	Y+14, r19	; 0x0e
     db0:	2d 87       	std	Y+13, r18	; 0x0d
     db2:	80 16       	cp	r8, r16
     db4:	91 06       	cpc	r9, r17
     db6:	2c f0       	brlt	.+10     	; 0xdc2 <vfprintf+0x324>
     db8:	b7 01       	movw	r22, r14
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
     dc0:	d9 cf       	rjmp	.-78     	; 0xd74 <vfprintf+0x2d6>
     dc2:	c8 14       	cp	r12, r8
     dc4:	d9 04       	cpc	r13, r9
     dc6:	41 f4       	brne	.+16     	; 0xdd8 <vfprintf+0x33a>
     dc8:	9a 81       	ldd	r25, Y+2	; 0x02
     dca:	96 33       	cpi	r25, 0x36	; 54
     dcc:	20 f4       	brcc	.+8      	; 0xdd6 <vfprintf+0x338>
     dce:	95 33       	cpi	r25, 0x35	; 53
     dd0:	19 f4       	brne	.+6      	; 0xdd8 <vfprintf+0x33a>
     dd2:	3c 85       	ldd	r19, Y+12	; 0x0c
     dd4:	34 ff       	sbrs	r19, 4
     dd6:	81 e3       	ldi	r24, 0x31	; 49
     dd8:	b7 01       	movw	r22, r14
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	4e c0       	rjmp	.+156    	; 0xe7a <vfprintf+0x3dc>
     dde:	8a 81       	ldd	r24, Y+2	; 0x02
     de0:	81 33       	cpi	r24, 0x31	; 49
     de2:	19 f0       	breq	.+6      	; 0xdea <vfprintf+0x34c>
     de4:	9c 85       	ldd	r25, Y+12	; 0x0c
     de6:	9f 7e       	andi	r25, 0xEF	; 239
     de8:	9c 87       	std	Y+12, r25	; 0x0c
     dea:	b7 01       	movw	r22, r14
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
     df2:	11 11       	cpse	r17, r1
     df4:	05 c0       	rjmp	.+10     	; 0xe00 <vfprintf+0x362>
     df6:	94 fc       	sbrc	r9, 4
     df8:	18 c0       	rjmp	.+48     	; 0xe2a <vfprintf+0x38c>
     dfa:	85 e6       	ldi	r24, 0x65	; 101
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	17 c0       	rjmp	.+46     	; 0xe2e <vfprintf+0x390>
     e00:	b7 01       	movw	r22, r14
     e02:	8e e2       	ldi	r24, 0x2E	; 46
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
     e0a:	1e 5f       	subi	r17, 0xFE	; 254
     e0c:	82 e0       	ldi	r24, 0x02	; 2
     e0e:	01 e0       	ldi	r16, 0x01	; 1
     e10:	08 0f       	add	r16, r24
     e12:	f3 01       	movw	r30, r6
     e14:	e8 0f       	add	r30, r24
     e16:	f1 1d       	adc	r31, r1
     e18:	80 81       	ld	r24, Z
     e1a:	b7 01       	movw	r22, r14
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
     e22:	80 2f       	mov	r24, r16
     e24:	01 13       	cpse	r16, r17
     e26:	f3 cf       	rjmp	.-26     	; 0xe0e <vfprintf+0x370>
     e28:	e6 cf       	rjmp	.-52     	; 0xdf6 <vfprintf+0x358>
     e2a:	85 e4       	ldi	r24, 0x45	; 69
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	b7 01       	movw	r22, r14
     e30:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
     e34:	d7 fc       	sbrc	r13, 7
     e36:	06 c0       	rjmp	.+12     	; 0xe44 <vfprintf+0x3a6>
     e38:	c1 14       	cp	r12, r1
     e3a:	d1 04       	cpc	r13, r1
     e3c:	41 f4       	brne	.+16     	; 0xe4e <vfprintf+0x3b0>
     e3e:	ec 85       	ldd	r30, Y+12	; 0x0c
     e40:	e4 ff       	sbrs	r30, 4
     e42:	05 c0       	rjmp	.+10     	; 0xe4e <vfprintf+0x3b0>
     e44:	d1 94       	neg	r13
     e46:	c1 94       	neg	r12
     e48:	d1 08       	sbc	r13, r1
     e4a:	8d e2       	ldi	r24, 0x2D	; 45
     e4c:	01 c0       	rjmp	.+2      	; 0xe50 <vfprintf+0x3b2>
     e4e:	8b e2       	ldi	r24, 0x2B	; 43
     e50:	b7 01       	movw	r22, r14
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
     e58:	80 e3       	ldi	r24, 0x30	; 48
     e5a:	2a e0       	ldi	r18, 0x0A	; 10
     e5c:	c2 16       	cp	r12, r18
     e5e:	d1 04       	cpc	r13, r1
     e60:	2c f0       	brlt	.+10     	; 0xe6c <vfprintf+0x3ce>
     e62:	8f 5f       	subi	r24, 0xFF	; 255
     e64:	fa e0       	ldi	r31, 0x0A	; 10
     e66:	cf 1a       	sub	r12, r31
     e68:	d1 08       	sbc	r13, r1
     e6a:	f7 cf       	rjmp	.-18     	; 0xe5a <vfprintf+0x3bc>
     e6c:	b7 01       	movw	r22, r14
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
     e74:	b7 01       	movw	r22, r14
     e76:	c6 01       	movw	r24, r12
     e78:	c0 96       	adiw	r24, 0x30	; 48
     e7a:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
     e7e:	54 c1       	rjmp	.+680    	; 0x1128 <vfprintf+0x68a>
     e80:	83 36       	cpi	r24, 0x63	; 99
     e82:	31 f0       	breq	.+12     	; 0xe90 <vfprintf+0x3f2>
     e84:	83 37       	cpi	r24, 0x73	; 115
     e86:	79 f0       	breq	.+30     	; 0xea6 <vfprintf+0x408>
     e88:	83 35       	cpi	r24, 0x53	; 83
     e8a:	09 f0       	breq	.+2      	; 0xe8e <vfprintf+0x3f0>
     e8c:	56 c0       	rjmp	.+172    	; 0xf3a <vfprintf+0x49c>
     e8e:	20 c0       	rjmp	.+64     	; 0xed0 <vfprintf+0x432>
     e90:	56 01       	movw	r10, r12
     e92:	32 e0       	ldi	r19, 0x02	; 2
     e94:	a3 0e       	add	r10, r19
     e96:	b1 1c       	adc	r11, r1
     e98:	f6 01       	movw	r30, r12
     e9a:	80 81       	ld	r24, Z
     e9c:	89 83       	std	Y+1, r24	; 0x01
     e9e:	01 e0       	ldi	r16, 0x01	; 1
     ea0:	10 e0       	ldi	r17, 0x00	; 0
     ea2:	63 01       	movw	r12, r6
     ea4:	12 c0       	rjmp	.+36     	; 0xeca <vfprintf+0x42c>
     ea6:	56 01       	movw	r10, r12
     ea8:	f2 e0       	ldi	r31, 0x02	; 2
     eaa:	af 0e       	add	r10, r31
     eac:	b1 1c       	adc	r11, r1
     eae:	f6 01       	movw	r30, r12
     eb0:	c0 80       	ld	r12, Z
     eb2:	d1 80       	ldd	r13, Z+1	; 0x01
     eb4:	96 fe       	sbrs	r9, 6
     eb6:	03 c0       	rjmp	.+6      	; 0xebe <vfprintf+0x420>
     eb8:	61 2f       	mov	r22, r17
     eba:	70 e0       	ldi	r23, 0x00	; 0
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <vfprintf+0x424>
     ebe:	6f ef       	ldi	r22, 0xFF	; 255
     ec0:	7f ef       	ldi	r23, 0xFF	; 255
     ec2:	c6 01       	movw	r24, r12
     ec4:	0e 94 e6 09 	call	0x13cc	; 0x13cc <strnlen>
     ec8:	8c 01       	movw	r16, r24
     eca:	f9 2d       	mov	r31, r9
     ecc:	ff 77       	andi	r31, 0x7F	; 127
     ece:	14 c0       	rjmp	.+40     	; 0xef8 <vfprintf+0x45a>
     ed0:	56 01       	movw	r10, r12
     ed2:	22 e0       	ldi	r18, 0x02	; 2
     ed4:	a2 0e       	add	r10, r18
     ed6:	b1 1c       	adc	r11, r1
     ed8:	f6 01       	movw	r30, r12
     eda:	c0 80       	ld	r12, Z
     edc:	d1 80       	ldd	r13, Z+1	; 0x01
     ede:	96 fe       	sbrs	r9, 6
     ee0:	03 c0       	rjmp	.+6      	; 0xee8 <vfprintf+0x44a>
     ee2:	61 2f       	mov	r22, r17
     ee4:	70 e0       	ldi	r23, 0x00	; 0
     ee6:	02 c0       	rjmp	.+4      	; 0xeec <vfprintf+0x44e>
     ee8:	6f ef       	ldi	r22, 0xFF	; 255
     eea:	7f ef       	ldi	r23, 0xFF	; 255
     eec:	c6 01       	movw	r24, r12
     eee:	0e 94 db 09 	call	0x13b6	; 0x13b6 <strnlen_P>
     ef2:	8c 01       	movw	r16, r24
     ef4:	f9 2d       	mov	r31, r9
     ef6:	f0 68       	ori	r31, 0x80	; 128
     ef8:	9f 2e       	mov	r9, r31
     efa:	f3 fd       	sbrc	r31, 3
     efc:	1a c0       	rjmp	.+52     	; 0xf32 <vfprintf+0x494>
     efe:	85 2d       	mov	r24, r5
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	08 17       	cp	r16, r24
     f04:	19 07       	cpc	r17, r25
     f06:	a8 f4       	brcc	.+42     	; 0xf32 <vfprintf+0x494>
     f08:	b7 01       	movw	r22, r14
     f0a:	80 e2       	ldi	r24, 0x20	; 32
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
     f12:	5a 94       	dec	r5
     f14:	f4 cf       	rjmp	.-24     	; 0xefe <vfprintf+0x460>
     f16:	f6 01       	movw	r30, r12
     f18:	97 fc       	sbrc	r9, 7
     f1a:	85 91       	lpm	r24, Z+
     f1c:	97 fe       	sbrs	r9, 7
     f1e:	81 91       	ld	r24, Z+
     f20:	6f 01       	movw	r12, r30
     f22:	b7 01       	movw	r22, r14
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
     f2a:	51 10       	cpse	r5, r1
     f2c:	5a 94       	dec	r5
     f2e:	01 50       	subi	r16, 0x01	; 1
     f30:	11 09       	sbc	r17, r1
     f32:	01 15       	cp	r16, r1
     f34:	11 05       	cpc	r17, r1
     f36:	79 f7       	brne	.-34     	; 0xf16 <vfprintf+0x478>
     f38:	f7 c0       	rjmp	.+494    	; 0x1128 <vfprintf+0x68a>
     f3a:	84 36       	cpi	r24, 0x64	; 100
     f3c:	11 f0       	breq	.+4      	; 0xf42 <vfprintf+0x4a4>
     f3e:	89 36       	cpi	r24, 0x69	; 105
     f40:	61 f5       	brne	.+88     	; 0xf9a <vfprintf+0x4fc>
     f42:	56 01       	movw	r10, r12
     f44:	97 fe       	sbrs	r9, 7
     f46:	09 c0       	rjmp	.+18     	; 0xf5a <vfprintf+0x4bc>
     f48:	24 e0       	ldi	r18, 0x04	; 4
     f4a:	a2 0e       	add	r10, r18
     f4c:	b1 1c       	adc	r11, r1
     f4e:	f6 01       	movw	r30, r12
     f50:	60 81       	ld	r22, Z
     f52:	71 81       	ldd	r23, Z+1	; 0x01
     f54:	82 81       	ldd	r24, Z+2	; 0x02
     f56:	93 81       	ldd	r25, Z+3	; 0x03
     f58:	0a c0       	rjmp	.+20     	; 0xf6e <vfprintf+0x4d0>
     f5a:	f2 e0       	ldi	r31, 0x02	; 2
     f5c:	af 0e       	add	r10, r31
     f5e:	b1 1c       	adc	r11, r1
     f60:	f6 01       	movw	r30, r12
     f62:	60 81       	ld	r22, Z
     f64:	71 81       	ldd	r23, Z+1	; 0x01
     f66:	07 2e       	mov	r0, r23
     f68:	00 0c       	add	r0, r0
     f6a:	88 0b       	sbc	r24, r24
     f6c:	99 0b       	sbc	r25, r25
     f6e:	f9 2d       	mov	r31, r9
     f70:	ff 76       	andi	r31, 0x6F	; 111
     f72:	9f 2e       	mov	r9, r31
     f74:	97 ff       	sbrs	r25, 7
     f76:	09 c0       	rjmp	.+18     	; 0xf8a <vfprintf+0x4ec>
     f78:	90 95       	com	r25
     f7a:	80 95       	com	r24
     f7c:	70 95       	com	r23
     f7e:	61 95       	neg	r22
     f80:	7f 4f       	sbci	r23, 0xFF	; 255
     f82:	8f 4f       	sbci	r24, 0xFF	; 255
     f84:	9f 4f       	sbci	r25, 0xFF	; 255
     f86:	f0 68       	ori	r31, 0x80	; 128
     f88:	9f 2e       	mov	r9, r31
     f8a:	2a e0       	ldi	r18, 0x0A	; 10
     f8c:	30 e0       	ldi	r19, 0x00	; 0
     f8e:	a3 01       	movw	r20, r6
     f90:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <__ultoa_invert>
     f94:	c8 2e       	mov	r12, r24
     f96:	c6 18       	sub	r12, r6
     f98:	3f c0       	rjmp	.+126    	; 0x1018 <vfprintf+0x57a>
     f9a:	09 2d       	mov	r16, r9
     f9c:	85 37       	cpi	r24, 0x75	; 117
     f9e:	21 f4       	brne	.+8      	; 0xfa8 <vfprintf+0x50a>
     fa0:	0f 7e       	andi	r16, 0xEF	; 239
     fa2:	2a e0       	ldi	r18, 0x0A	; 10
     fa4:	30 e0       	ldi	r19, 0x00	; 0
     fa6:	1d c0       	rjmp	.+58     	; 0xfe2 <vfprintf+0x544>
     fa8:	09 7f       	andi	r16, 0xF9	; 249
     faa:	8f 36       	cpi	r24, 0x6F	; 111
     fac:	91 f0       	breq	.+36     	; 0xfd2 <vfprintf+0x534>
     fae:	18 f4       	brcc	.+6      	; 0xfb6 <vfprintf+0x518>
     fb0:	88 35       	cpi	r24, 0x58	; 88
     fb2:	59 f0       	breq	.+22     	; 0xfca <vfprintf+0x52c>
     fb4:	c3 c0       	rjmp	.+390    	; 0x113c <vfprintf+0x69e>
     fb6:	80 37       	cpi	r24, 0x70	; 112
     fb8:	19 f0       	breq	.+6      	; 0xfc0 <vfprintf+0x522>
     fba:	88 37       	cpi	r24, 0x78	; 120
     fbc:	11 f0       	breq	.+4      	; 0xfc2 <vfprintf+0x524>
     fbe:	be c0       	rjmp	.+380    	; 0x113c <vfprintf+0x69e>
     fc0:	00 61       	ori	r16, 0x10	; 16
     fc2:	04 ff       	sbrs	r16, 4
     fc4:	09 c0       	rjmp	.+18     	; 0xfd8 <vfprintf+0x53a>
     fc6:	04 60       	ori	r16, 0x04	; 4
     fc8:	07 c0       	rjmp	.+14     	; 0xfd8 <vfprintf+0x53a>
     fca:	94 fe       	sbrs	r9, 4
     fcc:	08 c0       	rjmp	.+16     	; 0xfde <vfprintf+0x540>
     fce:	06 60       	ori	r16, 0x06	; 6
     fd0:	06 c0       	rjmp	.+12     	; 0xfde <vfprintf+0x540>
     fd2:	28 e0       	ldi	r18, 0x08	; 8
     fd4:	30 e0       	ldi	r19, 0x00	; 0
     fd6:	05 c0       	rjmp	.+10     	; 0xfe2 <vfprintf+0x544>
     fd8:	20 e1       	ldi	r18, 0x10	; 16
     fda:	30 e0       	ldi	r19, 0x00	; 0
     fdc:	02 c0       	rjmp	.+4      	; 0xfe2 <vfprintf+0x544>
     fde:	20 e1       	ldi	r18, 0x10	; 16
     fe0:	32 e0       	ldi	r19, 0x02	; 2
     fe2:	56 01       	movw	r10, r12
     fe4:	07 ff       	sbrs	r16, 7
     fe6:	09 c0       	rjmp	.+18     	; 0xffa <vfprintf+0x55c>
     fe8:	84 e0       	ldi	r24, 0x04	; 4
     fea:	a8 0e       	add	r10, r24
     fec:	b1 1c       	adc	r11, r1
     fee:	f6 01       	movw	r30, r12
     ff0:	60 81       	ld	r22, Z
     ff2:	71 81       	ldd	r23, Z+1	; 0x01
     ff4:	82 81       	ldd	r24, Z+2	; 0x02
     ff6:	93 81       	ldd	r25, Z+3	; 0x03
     ff8:	08 c0       	rjmp	.+16     	; 0x100a <vfprintf+0x56c>
     ffa:	f2 e0       	ldi	r31, 0x02	; 2
     ffc:	af 0e       	add	r10, r31
     ffe:	b1 1c       	adc	r11, r1
    1000:	f6 01       	movw	r30, r12
    1002:	60 81       	ld	r22, Z
    1004:	71 81       	ldd	r23, Z+1	; 0x01
    1006:	80 e0       	ldi	r24, 0x00	; 0
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	a3 01       	movw	r20, r6
    100c:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <__ultoa_invert>
    1010:	c8 2e       	mov	r12, r24
    1012:	c6 18       	sub	r12, r6
    1014:	0f 77       	andi	r16, 0x7F	; 127
    1016:	90 2e       	mov	r9, r16
    1018:	96 fe       	sbrs	r9, 6
    101a:	0b c0       	rjmp	.+22     	; 0x1032 <vfprintf+0x594>
    101c:	09 2d       	mov	r16, r9
    101e:	0e 7f       	andi	r16, 0xFE	; 254
    1020:	c1 16       	cp	r12, r17
    1022:	50 f4       	brcc	.+20     	; 0x1038 <vfprintf+0x59a>
    1024:	94 fe       	sbrs	r9, 4
    1026:	0a c0       	rjmp	.+20     	; 0x103c <vfprintf+0x59e>
    1028:	92 fc       	sbrc	r9, 2
    102a:	08 c0       	rjmp	.+16     	; 0x103c <vfprintf+0x59e>
    102c:	09 2d       	mov	r16, r9
    102e:	0e 7e       	andi	r16, 0xEE	; 238
    1030:	05 c0       	rjmp	.+10     	; 0x103c <vfprintf+0x59e>
    1032:	dc 2c       	mov	r13, r12
    1034:	09 2d       	mov	r16, r9
    1036:	03 c0       	rjmp	.+6      	; 0x103e <vfprintf+0x5a0>
    1038:	dc 2c       	mov	r13, r12
    103a:	01 c0       	rjmp	.+2      	; 0x103e <vfprintf+0x5a0>
    103c:	d1 2e       	mov	r13, r17
    103e:	04 ff       	sbrs	r16, 4
    1040:	0d c0       	rjmp	.+26     	; 0x105c <vfprintf+0x5be>
    1042:	fe 01       	movw	r30, r28
    1044:	ec 0d       	add	r30, r12
    1046:	f1 1d       	adc	r31, r1
    1048:	80 81       	ld	r24, Z
    104a:	80 33       	cpi	r24, 0x30	; 48
    104c:	11 f4       	brne	.+4      	; 0x1052 <vfprintf+0x5b4>
    104e:	09 7e       	andi	r16, 0xE9	; 233
    1050:	09 c0       	rjmp	.+18     	; 0x1064 <vfprintf+0x5c6>
    1052:	02 ff       	sbrs	r16, 2
    1054:	06 c0       	rjmp	.+12     	; 0x1062 <vfprintf+0x5c4>
    1056:	d3 94       	inc	r13
    1058:	d3 94       	inc	r13
    105a:	04 c0       	rjmp	.+8      	; 0x1064 <vfprintf+0x5c6>
    105c:	80 2f       	mov	r24, r16
    105e:	86 78       	andi	r24, 0x86	; 134
    1060:	09 f0       	breq	.+2      	; 0x1064 <vfprintf+0x5c6>
    1062:	d3 94       	inc	r13
    1064:	03 fd       	sbrc	r16, 3
    1066:	11 c0       	rjmp	.+34     	; 0x108a <vfprintf+0x5ec>
    1068:	00 ff       	sbrs	r16, 0
    106a:	06 c0       	rjmp	.+12     	; 0x1078 <vfprintf+0x5da>
    106c:	1c 2d       	mov	r17, r12
    106e:	d5 14       	cp	r13, r5
    1070:	80 f4       	brcc	.+32     	; 0x1092 <vfprintf+0x5f4>
    1072:	15 0d       	add	r17, r5
    1074:	1d 19       	sub	r17, r13
    1076:	0d c0       	rjmp	.+26     	; 0x1092 <vfprintf+0x5f4>
    1078:	d5 14       	cp	r13, r5
    107a:	58 f4       	brcc	.+22     	; 0x1092 <vfprintf+0x5f4>
    107c:	b7 01       	movw	r22, r14
    107e:	80 e2       	ldi	r24, 0x20	; 32
    1080:	90 e0       	ldi	r25, 0x00	; 0
    1082:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
    1086:	d3 94       	inc	r13
    1088:	f7 cf       	rjmp	.-18     	; 0x1078 <vfprintf+0x5da>
    108a:	d5 14       	cp	r13, r5
    108c:	10 f4       	brcc	.+4      	; 0x1092 <vfprintf+0x5f4>
    108e:	5d 18       	sub	r5, r13
    1090:	01 c0       	rjmp	.+2      	; 0x1094 <vfprintf+0x5f6>
    1092:	51 2c       	mov	r5, r1
    1094:	04 ff       	sbrs	r16, 4
    1096:	10 c0       	rjmp	.+32     	; 0x10b8 <vfprintf+0x61a>
    1098:	b7 01       	movw	r22, r14
    109a:	80 e3       	ldi	r24, 0x30	; 48
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
    10a2:	02 ff       	sbrs	r16, 2
    10a4:	17 c0       	rjmp	.+46     	; 0x10d4 <vfprintf+0x636>
    10a6:	01 fd       	sbrc	r16, 1
    10a8:	03 c0       	rjmp	.+6      	; 0x10b0 <vfprintf+0x612>
    10aa:	88 e7       	ldi	r24, 0x78	; 120
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	02 c0       	rjmp	.+4      	; 0x10b4 <vfprintf+0x616>
    10b0:	88 e5       	ldi	r24, 0x58	; 88
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	b7 01       	movw	r22, r14
    10b6:	0c c0       	rjmp	.+24     	; 0x10d0 <vfprintf+0x632>
    10b8:	80 2f       	mov	r24, r16
    10ba:	86 78       	andi	r24, 0x86	; 134
    10bc:	59 f0       	breq	.+22     	; 0x10d4 <vfprintf+0x636>
    10be:	01 ff       	sbrs	r16, 1
    10c0:	02 c0       	rjmp	.+4      	; 0x10c6 <vfprintf+0x628>
    10c2:	8b e2       	ldi	r24, 0x2B	; 43
    10c4:	01 c0       	rjmp	.+2      	; 0x10c8 <vfprintf+0x62a>
    10c6:	80 e2       	ldi	r24, 0x20	; 32
    10c8:	07 fd       	sbrc	r16, 7
    10ca:	8d e2       	ldi	r24, 0x2D	; 45
    10cc:	b7 01       	movw	r22, r14
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
    10d4:	c1 16       	cp	r12, r17
    10d6:	38 f4       	brcc	.+14     	; 0x10e6 <vfprintf+0x648>
    10d8:	b7 01       	movw	r22, r14
    10da:	80 e3       	ldi	r24, 0x30	; 48
    10dc:	90 e0       	ldi	r25, 0x00	; 0
    10de:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
    10e2:	11 50       	subi	r17, 0x01	; 1
    10e4:	f7 cf       	rjmp	.-18     	; 0x10d4 <vfprintf+0x636>
    10e6:	ca 94       	dec	r12
    10e8:	f3 01       	movw	r30, r6
    10ea:	ec 0d       	add	r30, r12
    10ec:	f1 1d       	adc	r31, r1
    10ee:	80 81       	ld	r24, Z
    10f0:	b7 01       	movw	r22, r14
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
    10f8:	c1 10       	cpse	r12, r1
    10fa:	f5 cf       	rjmp	.-22     	; 0x10e6 <vfprintf+0x648>
    10fc:	15 c0       	rjmp	.+42     	; 0x1128 <vfprintf+0x68a>
    10fe:	f4 e0       	ldi	r31, 0x04	; 4
    1100:	f5 15       	cp	r31, r5
    1102:	60 f5       	brcc	.+88     	; 0x115c <vfprintf+0x6be>
    1104:	84 e0       	ldi	r24, 0x04	; 4
    1106:	58 1a       	sub	r5, r24
    1108:	93 fe       	sbrs	r9, 3
    110a:	1f c0       	rjmp	.+62     	; 0x114a <vfprintf+0x6ac>
    110c:	01 11       	cpse	r16, r1
    110e:	27 c0       	rjmp	.+78     	; 0x115e <vfprintf+0x6c0>
    1110:	2c 85       	ldd	r18, Y+12	; 0x0c
    1112:	23 ff       	sbrs	r18, 3
    1114:	2a c0       	rjmp	.+84     	; 0x116a <vfprintf+0x6cc>
    1116:	04 eb       	ldi	r16, 0xB4	; 180
    1118:	10 e0       	ldi	r17, 0x00	; 0
    111a:	39 2d       	mov	r19, r9
    111c:	30 71       	andi	r19, 0x10	; 16
    111e:	93 2e       	mov	r9, r19
    1120:	f8 01       	movw	r30, r16
    1122:	84 91       	lpm	r24, Z
    1124:	81 11       	cpse	r24, r1
    1126:	24 c0       	rjmp	.+72     	; 0x1170 <vfprintf+0x6d2>
    1128:	55 20       	and	r5, r5
    112a:	09 f4       	brne	.+2      	; 0x112e <vfprintf+0x690>
    112c:	e4 cc       	rjmp	.-1592   	; 0xaf6 <vfprintf+0x58>
    112e:	b7 01       	movw	r22, r14
    1130:	80 e2       	ldi	r24, 0x20	; 32
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
    1138:	5a 94       	dec	r5
    113a:	f6 cf       	rjmp	.-20     	; 0x1128 <vfprintf+0x68a>
    113c:	f7 01       	movw	r30, r14
    113e:	86 81       	ldd	r24, Z+6	; 0x06
    1140:	97 81       	ldd	r25, Z+7	; 0x07
    1142:	26 c0       	rjmp	.+76     	; 0x1190 <vfprintf+0x6f2>
    1144:	8f ef       	ldi	r24, 0xFF	; 255
    1146:	9f ef       	ldi	r25, 0xFF	; 255
    1148:	23 c0       	rjmp	.+70     	; 0x1190 <vfprintf+0x6f2>
    114a:	b7 01       	movw	r22, r14
    114c:	80 e2       	ldi	r24, 0x20	; 32
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
    1154:	5a 94       	dec	r5
    1156:	51 10       	cpse	r5, r1
    1158:	f8 cf       	rjmp	.-16     	; 0x114a <vfprintf+0x6ac>
    115a:	d8 cf       	rjmp	.-80     	; 0x110c <vfprintf+0x66e>
    115c:	51 2c       	mov	r5, r1
    115e:	b7 01       	movw	r22, r14
    1160:	80 2f       	mov	r24, r16
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
    1168:	d3 cf       	rjmp	.-90     	; 0x1110 <vfprintf+0x672>
    116a:	08 eb       	ldi	r16, 0xB8	; 184
    116c:	10 e0       	ldi	r17, 0x00	; 0
    116e:	d5 cf       	rjmp	.-86     	; 0x111a <vfprintf+0x67c>
    1170:	91 10       	cpse	r9, r1
    1172:	80 52       	subi	r24, 0x20	; 32
    1174:	b7 01       	movw	r22, r14
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <fputc>
    117c:	0f 5f       	subi	r16, 0xFF	; 255
    117e:	1f 4f       	sbci	r17, 0xFF	; 255
    1180:	cf cf       	rjmp	.-98     	; 0x1120 <vfprintf+0x682>
    1182:	23 e0       	ldi	r18, 0x03	; 3
    1184:	25 15       	cp	r18, r5
    1186:	10 f4       	brcc	.+4      	; 0x118c <vfprintf+0x6ee>
    1188:	83 e0       	ldi	r24, 0x03	; 3
    118a:	bd cf       	rjmp	.-134    	; 0x1106 <vfprintf+0x668>
    118c:	51 2c       	mov	r5, r1
    118e:	c0 cf       	rjmp	.-128    	; 0x1110 <vfprintf+0x672>
    1190:	60 96       	adiw	r28, 0x10	; 16
    1192:	e2 e1       	ldi	r30, 0x12	; 18
    1194:	0c 94 e8 08 	jmp	0x11d0	; 0x11d0 <__epilogue_restores__>

00001198 <__prologue_saves__>:
    1198:	2f 92       	push	r2
    119a:	3f 92       	push	r3
    119c:	4f 92       	push	r4
    119e:	5f 92       	push	r5
    11a0:	6f 92       	push	r6
    11a2:	7f 92       	push	r7
    11a4:	8f 92       	push	r8
    11a6:	9f 92       	push	r9
    11a8:	af 92       	push	r10
    11aa:	bf 92       	push	r11
    11ac:	cf 92       	push	r12
    11ae:	df 92       	push	r13
    11b0:	ef 92       	push	r14
    11b2:	ff 92       	push	r15
    11b4:	0f 93       	push	r16
    11b6:	1f 93       	push	r17
    11b8:	cf 93       	push	r28
    11ba:	df 93       	push	r29
    11bc:	cd b7       	in	r28, 0x3d	; 61
    11be:	de b7       	in	r29, 0x3e	; 62
    11c0:	ca 1b       	sub	r28, r26
    11c2:	db 0b       	sbc	r29, r27
    11c4:	0f b6       	in	r0, 0x3f	; 63
    11c6:	f8 94       	cli
    11c8:	de bf       	out	0x3e, r29	; 62
    11ca:	0f be       	out	0x3f, r0	; 63
    11cc:	cd bf       	out	0x3d, r28	; 61
    11ce:	09 94       	ijmp

000011d0 <__epilogue_restores__>:
    11d0:	2a 88       	ldd	r2, Y+18	; 0x12
    11d2:	39 88       	ldd	r3, Y+17	; 0x11
    11d4:	48 88       	ldd	r4, Y+16	; 0x10
    11d6:	5f 84       	ldd	r5, Y+15	; 0x0f
    11d8:	6e 84       	ldd	r6, Y+14	; 0x0e
    11da:	7d 84       	ldd	r7, Y+13	; 0x0d
    11dc:	8c 84       	ldd	r8, Y+12	; 0x0c
    11de:	9b 84       	ldd	r9, Y+11	; 0x0b
    11e0:	aa 84       	ldd	r10, Y+10	; 0x0a
    11e2:	b9 84       	ldd	r11, Y+9	; 0x09
    11e4:	c8 84       	ldd	r12, Y+8	; 0x08
    11e6:	df 80       	ldd	r13, Y+7	; 0x07
    11e8:	ee 80       	ldd	r14, Y+6	; 0x06
    11ea:	fd 80       	ldd	r15, Y+5	; 0x05
    11ec:	0c 81       	ldd	r16, Y+4	; 0x04
    11ee:	1b 81       	ldd	r17, Y+3	; 0x03
    11f0:	aa 81       	ldd	r26, Y+2	; 0x02
    11f2:	b9 81       	ldd	r27, Y+1	; 0x01
    11f4:	ce 0f       	add	r28, r30
    11f6:	d1 1d       	adc	r29, r1
    11f8:	0f b6       	in	r0, 0x3f	; 63
    11fa:	f8 94       	cli
    11fc:	de bf       	out	0x3e, r29	; 62
    11fe:	0f be       	out	0x3f, r0	; 63
    1200:	cd bf       	out	0x3d, r28	; 61
    1202:	ed 01       	movw	r28, r26
    1204:	08 95       	ret

00001206 <__ftoa_engine>:
    1206:	28 30       	cpi	r18, 0x08	; 8
    1208:	08 f0       	brcs	.+2      	; 0x120c <__ftoa_engine+0x6>
    120a:	27 e0       	ldi	r18, 0x07	; 7
    120c:	33 27       	eor	r19, r19
    120e:	da 01       	movw	r26, r20
    1210:	99 0f       	add	r25, r25
    1212:	31 1d       	adc	r19, r1
    1214:	87 fd       	sbrc	r24, 7
    1216:	91 60       	ori	r25, 0x01	; 1
    1218:	00 96       	adiw	r24, 0x00	; 0
    121a:	61 05       	cpc	r22, r1
    121c:	71 05       	cpc	r23, r1
    121e:	39 f4       	brne	.+14     	; 0x122e <__ftoa_engine+0x28>
    1220:	32 60       	ori	r19, 0x02	; 2
    1222:	2e 5f       	subi	r18, 0xFE	; 254
    1224:	3d 93       	st	X+, r19
    1226:	30 e3       	ldi	r19, 0x30	; 48
    1228:	2a 95       	dec	r18
    122a:	e1 f7       	brne	.-8      	; 0x1224 <__ftoa_engine+0x1e>
    122c:	08 95       	ret
    122e:	9f 3f       	cpi	r25, 0xFF	; 255
    1230:	30 f0       	brcs	.+12     	; 0x123e <__ftoa_engine+0x38>
    1232:	80 38       	cpi	r24, 0x80	; 128
    1234:	71 05       	cpc	r23, r1
    1236:	61 05       	cpc	r22, r1
    1238:	09 f0       	breq	.+2      	; 0x123c <__ftoa_engine+0x36>
    123a:	3c 5f       	subi	r19, 0xFC	; 252
    123c:	3c 5f       	subi	r19, 0xFC	; 252
    123e:	3d 93       	st	X+, r19
    1240:	91 30       	cpi	r25, 0x01	; 1
    1242:	08 f0       	brcs	.+2      	; 0x1246 <__ftoa_engine+0x40>
    1244:	80 68       	ori	r24, 0x80	; 128
    1246:	91 1d       	adc	r25, r1
    1248:	df 93       	push	r29
    124a:	cf 93       	push	r28
    124c:	1f 93       	push	r17
    124e:	0f 93       	push	r16
    1250:	ff 92       	push	r15
    1252:	ef 92       	push	r14
    1254:	19 2f       	mov	r17, r25
    1256:	98 7f       	andi	r25, 0xF8	; 248
    1258:	96 95       	lsr	r25
    125a:	e9 2f       	mov	r30, r25
    125c:	96 95       	lsr	r25
    125e:	96 95       	lsr	r25
    1260:	e9 0f       	add	r30, r25
    1262:	ff 27       	eor	r31, r31
    1264:	ea 5e       	subi	r30, 0xEA	; 234
    1266:	fe 4f       	sbci	r31, 0xFE	; 254
    1268:	99 27       	eor	r25, r25
    126a:	33 27       	eor	r19, r19
    126c:	ee 24       	eor	r14, r14
    126e:	ff 24       	eor	r15, r15
    1270:	a7 01       	movw	r20, r14
    1272:	e7 01       	movw	r28, r14
    1274:	05 90       	lpm	r0, Z+
    1276:	08 94       	sec
    1278:	07 94       	ror	r0
    127a:	28 f4       	brcc	.+10     	; 0x1286 <__ftoa_engine+0x80>
    127c:	36 0f       	add	r19, r22
    127e:	e7 1e       	adc	r14, r23
    1280:	f8 1e       	adc	r15, r24
    1282:	49 1f       	adc	r20, r25
    1284:	51 1d       	adc	r21, r1
    1286:	66 0f       	add	r22, r22
    1288:	77 1f       	adc	r23, r23
    128a:	88 1f       	adc	r24, r24
    128c:	99 1f       	adc	r25, r25
    128e:	06 94       	lsr	r0
    1290:	a1 f7       	brne	.-24     	; 0x127a <__ftoa_engine+0x74>
    1292:	05 90       	lpm	r0, Z+
    1294:	07 94       	ror	r0
    1296:	28 f4       	brcc	.+10     	; 0x12a2 <__ftoa_engine+0x9c>
    1298:	e7 0e       	add	r14, r23
    129a:	f8 1e       	adc	r15, r24
    129c:	49 1f       	adc	r20, r25
    129e:	56 1f       	adc	r21, r22
    12a0:	c1 1d       	adc	r28, r1
    12a2:	77 0f       	add	r23, r23
    12a4:	88 1f       	adc	r24, r24
    12a6:	99 1f       	adc	r25, r25
    12a8:	66 1f       	adc	r22, r22
    12aa:	06 94       	lsr	r0
    12ac:	a1 f7       	brne	.-24     	; 0x1296 <__ftoa_engine+0x90>
    12ae:	05 90       	lpm	r0, Z+
    12b0:	07 94       	ror	r0
    12b2:	28 f4       	brcc	.+10     	; 0x12be <__ftoa_engine+0xb8>
    12b4:	f8 0e       	add	r15, r24
    12b6:	49 1f       	adc	r20, r25
    12b8:	56 1f       	adc	r21, r22
    12ba:	c7 1f       	adc	r28, r23
    12bc:	d1 1d       	adc	r29, r1
    12be:	88 0f       	add	r24, r24
    12c0:	99 1f       	adc	r25, r25
    12c2:	66 1f       	adc	r22, r22
    12c4:	77 1f       	adc	r23, r23
    12c6:	06 94       	lsr	r0
    12c8:	a1 f7       	brne	.-24     	; 0x12b2 <__ftoa_engine+0xac>
    12ca:	05 90       	lpm	r0, Z+
    12cc:	07 94       	ror	r0
    12ce:	20 f4       	brcc	.+8      	; 0x12d8 <__ftoa_engine+0xd2>
    12d0:	49 0f       	add	r20, r25
    12d2:	56 1f       	adc	r21, r22
    12d4:	c7 1f       	adc	r28, r23
    12d6:	d8 1f       	adc	r29, r24
    12d8:	99 0f       	add	r25, r25
    12da:	66 1f       	adc	r22, r22
    12dc:	77 1f       	adc	r23, r23
    12de:	88 1f       	adc	r24, r24
    12e0:	06 94       	lsr	r0
    12e2:	a9 f7       	brne	.-22     	; 0x12ce <__ftoa_engine+0xc8>
    12e4:	84 91       	lpm	r24, Z
    12e6:	10 95       	com	r17
    12e8:	17 70       	andi	r17, 0x07	; 7
    12ea:	41 f0       	breq	.+16     	; 0x12fc <__ftoa_engine+0xf6>
    12ec:	d6 95       	lsr	r29
    12ee:	c7 95       	ror	r28
    12f0:	57 95       	ror	r21
    12f2:	47 95       	ror	r20
    12f4:	f7 94       	ror	r15
    12f6:	e7 94       	ror	r14
    12f8:	1a 95       	dec	r17
    12fa:	c1 f7       	brne	.-16     	; 0x12ec <__ftoa_engine+0xe6>
    12fc:	ec eb       	ldi	r30, 0xBC	; 188
    12fe:	f0 e0       	ldi	r31, 0x00	; 0
    1300:	68 94       	set
    1302:	15 90       	lpm	r1, Z+
    1304:	15 91       	lpm	r17, Z+
    1306:	35 91       	lpm	r19, Z+
    1308:	65 91       	lpm	r22, Z+
    130a:	95 91       	lpm	r25, Z+
    130c:	05 90       	lpm	r0, Z+
    130e:	7f e2       	ldi	r23, 0x2F	; 47
    1310:	73 95       	inc	r23
    1312:	e1 18       	sub	r14, r1
    1314:	f1 0a       	sbc	r15, r17
    1316:	43 0b       	sbc	r20, r19
    1318:	56 0b       	sbc	r21, r22
    131a:	c9 0b       	sbc	r28, r25
    131c:	d0 09       	sbc	r29, r0
    131e:	c0 f7       	brcc	.-16     	; 0x1310 <__ftoa_engine+0x10a>
    1320:	e1 0c       	add	r14, r1
    1322:	f1 1e       	adc	r15, r17
    1324:	43 1f       	adc	r20, r19
    1326:	56 1f       	adc	r21, r22
    1328:	c9 1f       	adc	r28, r25
    132a:	d0 1d       	adc	r29, r0
    132c:	7e f4       	brtc	.+30     	; 0x134c <__ftoa_engine+0x146>
    132e:	70 33       	cpi	r23, 0x30	; 48
    1330:	11 f4       	brne	.+4      	; 0x1336 <__ftoa_engine+0x130>
    1332:	8a 95       	dec	r24
    1334:	e6 cf       	rjmp	.-52     	; 0x1302 <__ftoa_engine+0xfc>
    1336:	e8 94       	clt
    1338:	01 50       	subi	r16, 0x01	; 1
    133a:	30 f0       	brcs	.+12     	; 0x1348 <__ftoa_engine+0x142>
    133c:	08 0f       	add	r16, r24
    133e:	0a f4       	brpl	.+2      	; 0x1342 <__ftoa_engine+0x13c>
    1340:	00 27       	eor	r16, r16
    1342:	02 17       	cp	r16, r18
    1344:	08 f4       	brcc	.+2      	; 0x1348 <__ftoa_engine+0x142>
    1346:	20 2f       	mov	r18, r16
    1348:	23 95       	inc	r18
    134a:	02 2f       	mov	r16, r18
    134c:	7a 33       	cpi	r23, 0x3A	; 58
    134e:	28 f0       	brcs	.+10     	; 0x135a <__ftoa_engine+0x154>
    1350:	79 e3       	ldi	r23, 0x39	; 57
    1352:	7d 93       	st	X+, r23
    1354:	2a 95       	dec	r18
    1356:	e9 f7       	brne	.-6      	; 0x1352 <__ftoa_engine+0x14c>
    1358:	10 c0       	rjmp	.+32     	; 0x137a <__ftoa_engine+0x174>
    135a:	7d 93       	st	X+, r23
    135c:	2a 95       	dec	r18
    135e:	89 f6       	brne	.-94     	; 0x1302 <__ftoa_engine+0xfc>
    1360:	06 94       	lsr	r0
    1362:	97 95       	ror	r25
    1364:	67 95       	ror	r22
    1366:	37 95       	ror	r19
    1368:	17 95       	ror	r17
    136a:	17 94       	ror	r1
    136c:	e1 18       	sub	r14, r1
    136e:	f1 0a       	sbc	r15, r17
    1370:	43 0b       	sbc	r20, r19
    1372:	56 0b       	sbc	r21, r22
    1374:	c9 0b       	sbc	r28, r25
    1376:	d0 09       	sbc	r29, r0
    1378:	98 f0       	brcs	.+38     	; 0x13a0 <__ftoa_engine+0x19a>
    137a:	23 95       	inc	r18
    137c:	7e 91       	ld	r23, -X
    137e:	73 95       	inc	r23
    1380:	7a 33       	cpi	r23, 0x3A	; 58
    1382:	08 f0       	brcs	.+2      	; 0x1386 <__ftoa_engine+0x180>
    1384:	70 e3       	ldi	r23, 0x30	; 48
    1386:	7c 93       	st	X, r23
    1388:	20 13       	cpse	r18, r16
    138a:	b8 f7       	brcc	.-18     	; 0x137a <__ftoa_engine+0x174>
    138c:	7e 91       	ld	r23, -X
    138e:	70 61       	ori	r23, 0x10	; 16
    1390:	7d 93       	st	X+, r23
    1392:	30 f0       	brcs	.+12     	; 0x13a0 <__ftoa_engine+0x19a>
    1394:	83 95       	inc	r24
    1396:	71 e3       	ldi	r23, 0x31	; 49
    1398:	7d 93       	st	X+, r23
    139a:	70 e3       	ldi	r23, 0x30	; 48
    139c:	2a 95       	dec	r18
    139e:	e1 f7       	brne	.-8      	; 0x1398 <__ftoa_engine+0x192>
    13a0:	11 24       	eor	r1, r1
    13a2:	ef 90       	pop	r14
    13a4:	ff 90       	pop	r15
    13a6:	0f 91       	pop	r16
    13a8:	1f 91       	pop	r17
    13aa:	cf 91       	pop	r28
    13ac:	df 91       	pop	r29
    13ae:	99 27       	eor	r25, r25
    13b0:	87 fd       	sbrc	r24, 7
    13b2:	90 95       	com	r25
    13b4:	08 95       	ret

000013b6 <strnlen_P>:
    13b6:	fc 01       	movw	r30, r24
    13b8:	05 90       	lpm	r0, Z+
    13ba:	61 50       	subi	r22, 0x01	; 1
    13bc:	70 40       	sbci	r23, 0x00	; 0
    13be:	01 10       	cpse	r0, r1
    13c0:	d8 f7       	brcc	.-10     	; 0x13b8 <strnlen_P+0x2>
    13c2:	80 95       	com	r24
    13c4:	90 95       	com	r25
    13c6:	8e 0f       	add	r24, r30
    13c8:	9f 1f       	adc	r25, r31
    13ca:	08 95       	ret

000013cc <strnlen>:
    13cc:	fc 01       	movw	r30, r24
    13ce:	61 50       	subi	r22, 0x01	; 1
    13d0:	70 40       	sbci	r23, 0x00	; 0
    13d2:	01 90       	ld	r0, Z+
    13d4:	01 10       	cpse	r0, r1
    13d6:	d8 f7       	brcc	.-10     	; 0x13ce <strnlen+0x2>
    13d8:	80 95       	com	r24
    13da:	90 95       	com	r25
    13dc:	8e 0f       	add	r24, r30
    13de:	9f 1f       	adc	r25, r31
    13e0:	08 95       	ret

000013e2 <fputc>:
    13e2:	0f 93       	push	r16
    13e4:	1f 93       	push	r17
    13e6:	cf 93       	push	r28
    13e8:	df 93       	push	r29
    13ea:	fb 01       	movw	r30, r22
    13ec:	23 81       	ldd	r18, Z+3	; 0x03
    13ee:	21 fd       	sbrc	r18, 1
    13f0:	03 c0       	rjmp	.+6      	; 0x13f8 <fputc+0x16>
    13f2:	8f ef       	ldi	r24, 0xFF	; 255
    13f4:	9f ef       	ldi	r25, 0xFF	; 255
    13f6:	2c c0       	rjmp	.+88     	; 0x1450 <fputc+0x6e>
    13f8:	22 ff       	sbrs	r18, 2
    13fa:	16 c0       	rjmp	.+44     	; 0x1428 <fputc+0x46>
    13fc:	46 81       	ldd	r20, Z+6	; 0x06
    13fe:	57 81       	ldd	r21, Z+7	; 0x07
    1400:	24 81       	ldd	r18, Z+4	; 0x04
    1402:	35 81       	ldd	r19, Z+5	; 0x05
    1404:	42 17       	cp	r20, r18
    1406:	53 07       	cpc	r21, r19
    1408:	44 f4       	brge	.+16     	; 0x141a <fputc+0x38>
    140a:	a0 81       	ld	r26, Z
    140c:	b1 81       	ldd	r27, Z+1	; 0x01
    140e:	9d 01       	movw	r18, r26
    1410:	2f 5f       	subi	r18, 0xFF	; 255
    1412:	3f 4f       	sbci	r19, 0xFF	; 255
    1414:	31 83       	std	Z+1, r19	; 0x01
    1416:	20 83       	st	Z, r18
    1418:	8c 93       	st	X, r24
    141a:	26 81       	ldd	r18, Z+6	; 0x06
    141c:	37 81       	ldd	r19, Z+7	; 0x07
    141e:	2f 5f       	subi	r18, 0xFF	; 255
    1420:	3f 4f       	sbci	r19, 0xFF	; 255
    1422:	37 83       	std	Z+7, r19	; 0x07
    1424:	26 83       	std	Z+6, r18	; 0x06
    1426:	14 c0       	rjmp	.+40     	; 0x1450 <fputc+0x6e>
    1428:	8b 01       	movw	r16, r22
    142a:	ec 01       	movw	r28, r24
    142c:	fb 01       	movw	r30, r22
    142e:	00 84       	ldd	r0, Z+8	; 0x08
    1430:	f1 85       	ldd	r31, Z+9	; 0x09
    1432:	e0 2d       	mov	r30, r0
    1434:	09 95       	icall
    1436:	89 2b       	or	r24, r25
    1438:	e1 f6       	brne	.-72     	; 0x13f2 <fputc+0x10>
    143a:	d8 01       	movw	r26, r16
    143c:	16 96       	adiw	r26, 0x06	; 6
    143e:	8d 91       	ld	r24, X+
    1440:	9c 91       	ld	r25, X
    1442:	17 97       	sbiw	r26, 0x07	; 7
    1444:	01 96       	adiw	r24, 0x01	; 1
    1446:	17 96       	adiw	r26, 0x07	; 7
    1448:	9c 93       	st	X, r25
    144a:	8e 93       	st	-X, r24
    144c:	16 97       	sbiw	r26, 0x06	; 6
    144e:	ce 01       	movw	r24, r28
    1450:	df 91       	pop	r29
    1452:	cf 91       	pop	r28
    1454:	1f 91       	pop	r17
    1456:	0f 91       	pop	r16
    1458:	08 95       	ret

0000145a <snprintf>:
    145a:	ae e0       	ldi	r26, 0x0E	; 14
    145c:	b0 e0       	ldi	r27, 0x00	; 0
    145e:	e3 e3       	ldi	r30, 0x33	; 51
    1460:	fa e0       	ldi	r31, 0x0A	; 10
    1462:	0c 94 da 08 	jmp	0x11b4	; 0x11b4 <__prologue_saves__+0x1c>
    1466:	0d 89       	ldd	r16, Y+21	; 0x15
    1468:	1e 89       	ldd	r17, Y+22	; 0x16
    146a:	8f 89       	ldd	r24, Y+23	; 0x17
    146c:	98 8d       	ldd	r25, Y+24	; 0x18
    146e:	26 e0       	ldi	r18, 0x06	; 6
    1470:	2c 83       	std	Y+4, r18	; 0x04
    1472:	1a 83       	std	Y+2, r17	; 0x02
    1474:	09 83       	std	Y+1, r16	; 0x01
    1476:	97 ff       	sbrs	r25, 7
    1478:	02 c0       	rjmp	.+4      	; 0x147e <snprintf+0x24>
    147a:	80 e0       	ldi	r24, 0x00	; 0
    147c:	90 e8       	ldi	r25, 0x80	; 128
    147e:	01 97       	sbiw	r24, 0x01	; 1
    1480:	9e 83       	std	Y+6, r25	; 0x06
    1482:	8d 83       	std	Y+5, r24	; 0x05
    1484:	ae 01       	movw	r20, r28
    1486:	45 5e       	subi	r20, 0xE5	; 229
    1488:	5f 4f       	sbci	r21, 0xFF	; 255
    148a:	69 8d       	ldd	r22, Y+25	; 0x19
    148c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    148e:	ce 01       	movw	r24, r28
    1490:	01 96       	adiw	r24, 0x01	; 1
    1492:	0e 94 4f 05 	call	0xa9e	; 0xa9e <vfprintf>
    1496:	4d 81       	ldd	r20, Y+5	; 0x05
    1498:	5e 81       	ldd	r21, Y+6	; 0x06
    149a:	57 fd       	sbrc	r21, 7
    149c:	0a c0       	rjmp	.+20     	; 0x14b2 <snprintf+0x58>
    149e:	2f 81       	ldd	r18, Y+7	; 0x07
    14a0:	38 85       	ldd	r19, Y+8	; 0x08
    14a2:	42 17       	cp	r20, r18
    14a4:	53 07       	cpc	r21, r19
    14a6:	0c f4       	brge	.+2      	; 0x14aa <snprintf+0x50>
    14a8:	9a 01       	movw	r18, r20
    14aa:	f8 01       	movw	r30, r16
    14ac:	e2 0f       	add	r30, r18
    14ae:	f3 1f       	adc	r31, r19
    14b0:	10 82       	st	Z, r1
    14b2:	2e 96       	adiw	r28, 0x0e	; 14
    14b4:	e4 e0       	ldi	r30, 0x04	; 4
    14b6:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__epilogue_restores__+0x1c>

000014ba <__ultoa_invert>:
    14ba:	fa 01       	movw	r30, r20
    14bc:	aa 27       	eor	r26, r26
    14be:	28 30       	cpi	r18, 0x08	; 8
    14c0:	51 f1       	breq	.+84     	; 0x1516 <__ultoa_invert+0x5c>
    14c2:	20 31       	cpi	r18, 0x10	; 16
    14c4:	81 f1       	breq	.+96     	; 0x1526 <__ultoa_invert+0x6c>
    14c6:	e8 94       	clt
    14c8:	6f 93       	push	r22
    14ca:	6e 7f       	andi	r22, 0xFE	; 254
    14cc:	6e 5f       	subi	r22, 0xFE	; 254
    14ce:	7f 4f       	sbci	r23, 0xFF	; 255
    14d0:	8f 4f       	sbci	r24, 0xFF	; 255
    14d2:	9f 4f       	sbci	r25, 0xFF	; 255
    14d4:	af 4f       	sbci	r26, 0xFF	; 255
    14d6:	b1 e0       	ldi	r27, 0x01	; 1
    14d8:	3e d0       	rcall	.+124    	; 0x1556 <__ultoa_invert+0x9c>
    14da:	b4 e0       	ldi	r27, 0x04	; 4
    14dc:	3c d0       	rcall	.+120    	; 0x1556 <__ultoa_invert+0x9c>
    14de:	67 0f       	add	r22, r23
    14e0:	78 1f       	adc	r23, r24
    14e2:	89 1f       	adc	r24, r25
    14e4:	9a 1f       	adc	r25, r26
    14e6:	a1 1d       	adc	r26, r1
    14e8:	68 0f       	add	r22, r24
    14ea:	79 1f       	adc	r23, r25
    14ec:	8a 1f       	adc	r24, r26
    14ee:	91 1d       	adc	r25, r1
    14f0:	a1 1d       	adc	r26, r1
    14f2:	6a 0f       	add	r22, r26
    14f4:	71 1d       	adc	r23, r1
    14f6:	81 1d       	adc	r24, r1
    14f8:	91 1d       	adc	r25, r1
    14fa:	a1 1d       	adc	r26, r1
    14fc:	20 d0       	rcall	.+64     	; 0x153e <__ultoa_invert+0x84>
    14fe:	09 f4       	brne	.+2      	; 0x1502 <__ultoa_invert+0x48>
    1500:	68 94       	set
    1502:	3f 91       	pop	r19
    1504:	2a e0       	ldi	r18, 0x0A	; 10
    1506:	26 9f       	mul	r18, r22
    1508:	11 24       	eor	r1, r1
    150a:	30 19       	sub	r19, r0
    150c:	30 5d       	subi	r19, 0xD0	; 208
    150e:	31 93       	st	Z+, r19
    1510:	de f6       	brtc	.-74     	; 0x14c8 <__ultoa_invert+0xe>
    1512:	cf 01       	movw	r24, r30
    1514:	08 95       	ret
    1516:	46 2f       	mov	r20, r22
    1518:	47 70       	andi	r20, 0x07	; 7
    151a:	40 5d       	subi	r20, 0xD0	; 208
    151c:	41 93       	st	Z+, r20
    151e:	b3 e0       	ldi	r27, 0x03	; 3
    1520:	0f d0       	rcall	.+30     	; 0x1540 <__ultoa_invert+0x86>
    1522:	c9 f7       	brne	.-14     	; 0x1516 <__ultoa_invert+0x5c>
    1524:	f6 cf       	rjmp	.-20     	; 0x1512 <__ultoa_invert+0x58>
    1526:	46 2f       	mov	r20, r22
    1528:	4f 70       	andi	r20, 0x0F	; 15
    152a:	40 5d       	subi	r20, 0xD0	; 208
    152c:	4a 33       	cpi	r20, 0x3A	; 58
    152e:	18 f0       	brcs	.+6      	; 0x1536 <__ultoa_invert+0x7c>
    1530:	49 5d       	subi	r20, 0xD9	; 217
    1532:	31 fd       	sbrc	r19, 1
    1534:	40 52       	subi	r20, 0x20	; 32
    1536:	41 93       	st	Z+, r20
    1538:	02 d0       	rcall	.+4      	; 0x153e <__ultoa_invert+0x84>
    153a:	a9 f7       	brne	.-22     	; 0x1526 <__ultoa_invert+0x6c>
    153c:	ea cf       	rjmp	.-44     	; 0x1512 <__ultoa_invert+0x58>
    153e:	b4 e0       	ldi	r27, 0x04	; 4
    1540:	a6 95       	lsr	r26
    1542:	97 95       	ror	r25
    1544:	87 95       	ror	r24
    1546:	77 95       	ror	r23
    1548:	67 95       	ror	r22
    154a:	ba 95       	dec	r27
    154c:	c9 f7       	brne	.-14     	; 0x1540 <__ultoa_invert+0x86>
    154e:	00 97       	sbiw	r24, 0x00	; 0
    1550:	61 05       	cpc	r22, r1
    1552:	71 05       	cpc	r23, r1
    1554:	08 95       	ret
    1556:	9b 01       	movw	r18, r22
    1558:	ac 01       	movw	r20, r24
    155a:	0a 2e       	mov	r0, r26
    155c:	06 94       	lsr	r0
    155e:	57 95       	ror	r21
    1560:	47 95       	ror	r20
    1562:	37 95       	ror	r19
    1564:	27 95       	ror	r18
    1566:	ba 95       	dec	r27
    1568:	c9 f7       	brne	.-14     	; 0x155c <__ultoa_invert+0xa2>
    156a:	62 0f       	add	r22, r18
    156c:	73 1f       	adc	r23, r19
    156e:	84 1f       	adc	r24, r20
    1570:	95 1f       	adc	r25, r21
    1572:	a0 1d       	adc	r26, r0
    1574:	08 95       	ret

00001576 <_exit>:
    1576:	f8 94       	cli

00001578 <__stop_program>:
    1578:	ff cf       	rjmp	.-2      	; 0x1578 <__stop_program>
