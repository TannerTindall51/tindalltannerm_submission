
DA5A.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000a48  00000adc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  0080010a  0080010a  00000ae6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ae6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b18  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000b58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bf9  00000000  00000000  00000bb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a75  00000000  00000000  000017a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000426  00000000  00000000  0000221e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c8  00000000  00000000  00002644  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000052f  00000000  00000000  0000270c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000134  00000000  00000000  00002c3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00002d6f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 9b 00 	jmp	0x136	; 0x136 <__ctors_end>
   4:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
   8:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
   c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  10:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  14:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  18:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  1c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  20:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  24:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  28:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  2c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  30:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  34:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  38:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  3c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  40:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  44:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  48:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  4c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  50:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  54:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  58:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  5c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  60:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  64:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  68:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  6c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  70:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  74:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  78:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  7c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  80:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  84:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  88:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  8c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  90:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  94:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  98:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  9c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  a0:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  a4:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  a8:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  ac:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  b0:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
  b4:	07 63       	ori	r16, 0x37	; 55
  b6:	42 36       	cpi	r20, 0x62	; 98
  b8:	b7 9b       	sbis	0x16, 7	; 22
  ba:	d8 a7       	std	Y+40, r29	; 0x28
  bc:	1a 39       	cpi	r17, 0x9A	; 154
  be:	68 56       	subi	r22, 0x68	; 104
  c0:	18 ae       	std	Y+56, r1	; 0x38
  c2:	ba ab       	std	Y+50, r27	; 0x32
  c4:	55 8c       	ldd	r5, Z+29	; 0x1d
  c6:	1d 3c       	cpi	r17, 0xCD	; 205
  c8:	b7 cc       	rjmp	.-1682   	; 0xfffffa38 <__eeprom_end+0xff7efa38>
  ca:	57 63       	ori	r21, 0x37	; 55
  cc:	bd 6d       	ori	r27, 0xDD	; 221
  ce:	ed fd       	.word	0xfded	; ????
  d0:	75 3e       	cpi	r23, 0xE5	; 229
  d2:	f6 17       	cp	r31, r22
  d4:	72 31       	cpi	r23, 0x12	; 18
  d6:	bf 00       	.word	0x00bf	; ????
  d8:	00 00       	nop
  da:	80 3f       	cpi	r24, 0xF0	; 240
  dc:	08 00       	.word	0x0008	; ????
  de:	00 00       	nop
  e0:	be 92       	st	-X, r11
  e2:	24 49       	sbci	r18, 0x94	; 148
  e4:	12 3e       	cpi	r17, 0xE2	; 226
  e6:	ab aa       	std	Y+51, r10	; 0x33
  e8:	aa 2a       	or	r10, r26
  ea:	be cd       	rjmp	.-1156   	; 0xfffffc68 <__eeprom_end+0xff7efc68>
  ec:	cc cc       	rjmp	.-1640   	; 0xfffffa86 <__eeprom_end+0xff7efa86>
  ee:	4c 3e       	cpi	r20, 0xEC	; 236
  f0:	00 00       	nop
  f2:	00 80       	ld	r0, Z
  f4:	be ab       	std	Y+54, r27	; 0x36
  f6:	aa aa       	std	Y+50, r10	; 0x32
  f8:	aa 3e       	cpi	r26, 0xEA	; 234
  fa:	00 00       	nop
  fc:	00 00       	nop
  fe:	bf 00       	.word	0x00bf	; ????
 100:	00 00       	nop
 102:	80 3f       	cpi	r24, 0xF0	; 240
 104:	00 00       	nop
 106:	00 00       	nop
 108:	00 08       	sbc	r0, r0
 10a:	41 78       	andi	r20, 0x81	; 129
 10c:	d3 bb       	out	0x13, r29	; 19
 10e:	43 87       	std	Z+11, r20	; 0x0b
 110:	d1 13       	cpse	r29, r17
 112:	3d 19       	sub	r19, r13
 114:	0e 3c       	cpi	r16, 0xCE	; 206
 116:	c3 bd       	out	0x23, r28	; 35
 118:	42 82       	std	Z+2, r4	; 0x02
 11a:	ad 2b       	or	r26, r29
 11c:	3e 68       	ori	r19, 0x8E	; 142
 11e:	ec 82       	std	Y+4, r14	; 0x04
 120:	76 be       	out	0x36, r7	; 54
 122:	d9 8f       	std	Y+25, r29	; 0x19
 124:	e1 a9       	ldd	r30, Z+49	; 0x31
 126:	3e 4c       	sbci	r19, 0xCE	; 206
 128:	80 ef       	ldi	r24, 0xF0	; 240
 12a:	ff be       	out	0x3f, r15	; 63
 12c:	01 c4       	rjmp	.+2050   	; 0x930 <__stack+0x31>
 12e:	ff 7f       	andi	r31, 0xFF	; 255
 130:	3f 00       	.word	0x003f	; ????
 132:	00 00       	nop
	...

00000136 <__ctors_end>:
 136:	11 24       	eor	r1, r1
 138:	1f be       	out	0x3f, r1	; 63
 13a:	cf ef       	ldi	r28, 0xFF	; 255
 13c:	d8 e0       	ldi	r29, 0x08	; 8
 13e:	de bf       	out	0x3e, r29	; 62
 140:	cd bf       	out	0x3d, r28	; 61

00000142 <__do_copy_data>:
 142:	11 e0       	ldi	r17, 0x01	; 1
 144:	a0 e0       	ldi	r26, 0x00	; 0
 146:	b1 e0       	ldi	r27, 0x01	; 1
 148:	e8 e4       	ldi	r30, 0x48	; 72
 14a:	fa e0       	ldi	r31, 0x0A	; 10
 14c:	02 c0       	rjmp	.+4      	; 0x152 <__do_copy_data+0x10>
 14e:	05 90       	lpm	r0, Z+
 150:	0d 92       	st	X+, r0
 152:	aa 30       	cpi	r26, 0x0A	; 10
 154:	b1 07       	cpc	r27, r17
 156:	d9 f7       	brne	.-10     	; 0x14e <__do_copy_data+0xc>

00000158 <__do_clear_bss>:
 158:	21 e0       	ldi	r18, 0x01	; 1
 15a:	aa e0       	ldi	r26, 0x0A	; 10
 15c:	b1 e0       	ldi	r27, 0x01	; 1
 15e:	01 c0       	rjmp	.+2      	; 0x162 <.do_clear_bss_start>

00000160 <.do_clear_bss_loop>:
 160:	1d 92       	st	X+, r1

00000162 <.do_clear_bss_start>:
 162:	af 30       	cpi	r26, 0x0F	; 15
 164:	b2 07       	cpc	r27, r18
 166:	e1 f7       	brne	.-8      	; 0x160 <.do_clear_bss_loop>
 168:	0e 94 8b 01 	call	0x316	; 0x316 <main>
 16c:	0c 94 22 05 	jmp	0xa44	; 0xa44 <_exit>

00000170 <__bad_interrupt>:
 170:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000174 <startADC>:
volatile int x;
volatile uint16_t tempC_value;

void startADC()
{
	DDRC &= ~(1<<4);												//set PC4 to input
 174:	3c 98       	cbi	0x07, 4	; 7
	ADMUX = (1<<REFS1)| (1<<REFS0)|	(1<<MUX2);						//set Vref and set ADC4 as input
 176:	84 ec       	ldi	r24, 0xC4	; 196
 178:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) |	(1<<ADPS0);		//enable ADC and set prescalar to 128
 17c:	87 e8       	ldi	r24, 0x87	; 135
 17e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
	ADCSRB = 0x00;													//set ADCSRB to free running
 182:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__DATA_REGION_ORIGIN__+0x1b>
 186:	08 95       	ret

00000188 <adcRead>:
}

uint16_t adcRead()
{
	ADCSRA |= (1<<6);				//enable ADC conversion
 188:	ea e7       	ldi	r30, 0x7A	; 122
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	80 81       	ld	r24, Z
 18e:	80 64       	ori	r24, 0x40	; 64
 190:	80 83       	st	Z, r24
	while (!(ADCSRA & (1<<latch)));	//waits for conversion to complete by ADIF flag
 192:	80 81       	ld	r24, Z
 194:	84 ff       	sbrs	r24, 4
 196:	fd cf       	rjmp	.-6      	; 0x192 <adcRead+0xa>
	ADCSRA |= (1<<latch);			//reset when complete
 198:	ea e7       	ldi	r30, 0x7A	; 122
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	80 81       	ld	r24, Z
 19e:	80 61       	ori	r24, 0x10	; 16
 1a0:	80 83       	st	Z, r24
	return ADC;						//return value once complete
 1a2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
 1a6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
}
 1aa:	08 95       	ret

000001ac <initPorts>:

void initPorts()
{
	DDRB |= (1<<3)|(1<<5);		//set MOSI and SCK output
 1ac:	84 b1       	in	r24, 0x04	; 4
 1ae:	88 62       	ori	r24, 0x28	; 40
 1b0:	84 b9       	out	0x04, r24	; 4
	DDRD |= (1<<latch);			//latch clock output
 1b2:	54 9a       	sbi	0x0a, 4	; 10
	PORTD &= ~(1<<latch);		//initialize clock to 0
 1b4:	5c 98       	cbi	0x0b, 4	; 11
	SPCR0 = 0x07;				//set SPI to master mode
 1b6:	87 e0       	ldi	r24, 0x07	; 7
 1b8:	8c bd       	out	0x2c, r24	; 44
 1ba:	08 95       	ret

000001bc <transmitSPI>:
}

void transmitSPI(uint8_t data)
{
	SPDR0 = data;					//send data
 1bc:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR0&(1<<SPIF)));		//wait until data register in emptied and all is sent
 1be:	0d b4       	in	r0, 0x2d	; 45
 1c0:	07 fe       	sbrs	r0, 7
 1c2:	fd cf       	rjmp	.-6      	; 0x1be <transmitSPI+0x2>
	SPSR0 |= (1<<SPIF);				//reset flag
 1c4:	8d b5       	in	r24, 0x2d	; 45
 1c6:	80 68       	ori	r24, 0x80	; 128
 1c8:	8d bd       	out	0x2d, r24	; 45
 1ca:	08 95       	ret

000001cc <tempC>:
}

uint16_t tempC()
{
	uint16_t temperature = adcRead();				//record value from adc
 1cc:	0e 94 c4 00 	call	0x188	; 0x188 <adcRead>
	tempC_value = ((temperature)*(110.0/1023.0));	//convert to temp value
 1d0:	bc 01       	movw	r22, r24
 1d2:	80 e0       	ldi	r24, 0x00	; 0
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	0e 94 35 02 	call	0x46a	; 0x46a <__floatunsisf>
 1da:	2e e0       	ldi	r18, 0x0E	; 14
 1dc:	37 e3       	ldi	r19, 0x37	; 55
 1de:	4c ed       	ldi	r20, 0xDC	; 220
 1e0:	5d e3       	ldi	r21, 0x3D	; 61
 1e2:	0e 94 c3 02 	call	0x586	; 0x586 <__mulsf3>
 1e6:	0e 94 06 02 	call	0x40c	; 0x40c <__fixunssfsi>
 1ea:	70 93 0e 01 	sts	0x010E, r23	; 0x80010e <tempC_value+0x1>
 1ee:	60 93 0d 01 	sts	0x010D, r22	; 0x80010d <tempC_value>
}
 1f2:	08 95       	ret

000001f4 <Latch>:

void Latch()
{
	PORTD |= (1<<latch);		//set
 1f4:	5c 9a       	sbi	0x0b, 4	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1f6:	2f ef       	ldi	r18, 0xFF	; 255
 1f8:	89 ef       	ldi	r24, 0xF9	; 249
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	21 50       	subi	r18, 0x01	; 1
 1fe:	80 40       	sbci	r24, 0x00	; 0
 200:	90 40       	sbci	r25, 0x00	; 0
 202:	e1 f7       	brne	.-8      	; 0x1fc <Latch+0x8>
 204:	00 c0       	rjmp	.+0      	; 0x206 <Latch+0x12>
 206:	00 00       	nop
	_delay_ms(20);
	PORTD &= ~(1<<latch);		//reset
 208:	5c 98       	cbi	0x0b, 4	; 11
 20a:	08 95       	ret

0000020c <segConvert>:
		segConvert();	//convert to segment display and transmit
	}
}

void segConvert()
{
 20c:	af 92       	push	r10
 20e:	bf 92       	push	r11
 210:	cf 92       	push	r12
 212:	df 92       	push	r13
 214:	ef 92       	push	r14
 216:	ff 92       	push	r15
 218:	0f 93       	push	r16
 21a:	1f 93       	push	r17
 21c:	cf 93       	push	r28
 21e:	df 93       	push	r29
	for (x = 0; x < 4; x++)		//loop for each segment select
 220:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <__data_end+0x1>
 224:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__data_end>
 228:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 22c:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 230:	04 97       	sbiw	r24, 0x04	; 4
 232:	0c f0       	brlt	.+2      	; 0x236 <segConvert+0x2a>
 234:	65 c0       	rjmp	.+202    	; 0x300 <segConvert+0xf4>
	{
		segSelectArray[x] = ((uint8_t)((tempC_value/pow(10, x))) % 10);	//scale temp value according to for loop
 236:	dd ec       	ldi	r29, 0xCD	; 205
		transmitSPI(segMapArray[segSelectArray[x]]);					//send the position value to defined array
		transmitSPI(1<<(4+x));											//shift transmitted value
 238:	c1 e0       	ldi	r28, 0x01	; 1

void segConvert()
{
	for (x = 0; x < 4; x++)		//loop for each segment select
	{
		segSelectArray[x] = ((uint8_t)((tempC_value/pow(10, x))) % 10);	//scale temp value according to for loop
 23a:	00 91 0a 01 	lds	r16, 0x010A	; 0x80010a <__data_end>
 23e:	10 91 0b 01 	lds	r17, 0x010B	; 0x80010b <__data_end+0x1>
 242:	a0 90 0d 01 	lds	r10, 0x010D	; 0x80010d <tempC_value>
 246:	b0 90 0e 01 	lds	r11, 0x010E	; 0x80010e <tempC_value+0x1>
 24a:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <__data_end>
 24e:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <__data_end+0x1>
 252:	07 2e       	mov	r0, r23
 254:	00 0c       	add	r0, r0
 256:	88 0b       	sbc	r24, r24
 258:	99 0b       	sbc	r25, r25
 25a:	0e 94 37 02 	call	0x46e	; 0x46e <__floatsisf>
 25e:	9b 01       	movw	r18, r22
 260:	ac 01       	movw	r20, r24
 262:	60 e0       	ldi	r22, 0x00	; 0
 264:	70 e0       	ldi	r23, 0x00	; 0
 266:	80 e2       	ldi	r24, 0x20	; 32
 268:	91 e4       	ldi	r25, 0x41	; 65
 26a:	0e 94 30 03 	call	0x660	; 0x660 <pow>
 26e:	6b 01       	movw	r12, r22
 270:	7c 01       	movw	r14, r24
 272:	04 5f       	subi	r16, 0xF4	; 244
 274:	1e 4f       	sbci	r17, 0xFE	; 254
 276:	b5 01       	movw	r22, r10
 278:	80 e0       	ldi	r24, 0x00	; 0
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	0e 94 35 02 	call	0x46a	; 0x46a <__floatunsisf>
 280:	a7 01       	movw	r20, r14
 282:	96 01       	movw	r18, r12
 284:	0e 94 94 01 	call	0x328	; 0x328 <__divsf3>
 288:	0e 94 06 02 	call	0x40c	; 0x40c <__fixunssfsi>
 28c:	6d 9f       	mul	r22, r29
 28e:	81 2d       	mov	r24, r1
 290:	11 24       	eor	r1, r1
 292:	86 95       	lsr	r24
 294:	86 95       	lsr	r24
 296:	86 95       	lsr	r24
 298:	88 0f       	add	r24, r24
 29a:	98 2f       	mov	r25, r24
 29c:	99 0f       	add	r25, r25
 29e:	99 0f       	add	r25, r25
 2a0:	89 0f       	add	r24, r25
 2a2:	68 1b       	sub	r22, r24
 2a4:	f8 01       	movw	r30, r16
 2a6:	60 83       	st	Z, r22
		transmitSPI(segMapArray[segSelectArray[x]]);					//send the position value to defined array
 2a8:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__data_end>
 2ac:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <__data_end+0x1>
 2b0:	e4 5f       	subi	r30, 0xF4	; 244
 2b2:	fe 4f       	sbci	r31, 0xFE	; 254
 2b4:	e0 81       	ld	r30, Z
 2b6:	f0 e0       	ldi	r31, 0x00	; 0
 2b8:	e0 50       	subi	r30, 0x00	; 0
 2ba:	ff 4f       	sbci	r31, 0xFF	; 255
 2bc:	80 81       	ld	r24, Z
 2be:	0e 94 de 00 	call	0x1bc	; 0x1bc <transmitSPI>
		transmitSPI(1<<(4+x));											//shift transmitted value
 2c2:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 2c6:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 2ca:	04 96       	adiw	r24, 0x04	; 4
 2cc:	fc 2f       	mov	r31, r28
 2ce:	01 c0       	rjmp	.+2      	; 0x2d2 <segConvert+0xc6>
 2d0:	ff 0f       	add	r31, r31
 2d2:	8a 95       	dec	r24
 2d4:	ea f7       	brpl	.-6      	; 0x2d0 <segConvert+0xc4>
 2d6:	8f 2f       	mov	r24, r31
 2d8:	0e 94 de 00 	call	0x1bc	; 0x1bc <transmitSPI>
		Latch();														//latch the clock before next iteration
 2dc:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <Latch>
	}
}

void segConvert()
{
	for (x = 0; x < 4; x++)		//loop for each segment select
 2e0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 2e4:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 2e8:	01 96       	adiw	r24, 0x01	; 1
 2ea:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
 2ee:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
 2f2:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 2f6:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 2fa:	04 97       	sbiw	r24, 0x04	; 4
 2fc:	0c f4       	brge	.+2      	; 0x300 <segConvert+0xf4>
 2fe:	9d cf       	rjmp	.-198    	; 0x23a <segConvert+0x2e>
		segSelectArray[x] = ((uint8_t)((tempC_value/pow(10, x))) % 10);	//scale temp value according to for loop
		transmitSPI(segMapArray[segSelectArray[x]]);					//send the position value to defined array
		transmitSPI(1<<(4+x));											//shift transmitted value
		Latch();														//latch the clock before next iteration
	}
 300:	df 91       	pop	r29
 302:	cf 91       	pop	r28
 304:	1f 91       	pop	r17
 306:	0f 91       	pop	r16
 308:	ff 90       	pop	r15
 30a:	ef 90       	pop	r14
 30c:	df 90       	pop	r13
 30e:	cf 90       	pop	r12
 310:	bf 90       	pop	r11
 312:	af 90       	pop	r10
 314:	08 95       	ret

00000316 <main>:
	PORTD &= ~(1<<latch);		//reset
}

int main()
{
	initPorts();		//initialize ports
 316:	0e 94 d6 00 	call	0x1ac	; 0x1ac <initPorts>
	startADC();			//initialize adc
 31a:	0e 94 ba 00 	call	0x174	; 0x174 <startADC>
	
	while(1)
	{
		tempC();		//collect a temp value from ADC
 31e:	0e 94 e6 00 	call	0x1cc	; 0x1cc <tempC>
		segConvert();	//convert to segment display and transmit
 322:	0e 94 06 01 	call	0x20c	; 0x20c <segConvert>
 326:	fb cf       	rjmp	.-10     	; 0x31e <main+0x8>

00000328 <__divsf3>:
 328:	0e 94 a8 01 	call	0x350	; 0x350 <__divsf3x>
 32c:	0c 94 89 02 	jmp	0x512	; 0x512 <__fp_round>
 330:	0e 94 82 02 	call	0x504	; 0x504 <__fp_pscB>
 334:	58 f0       	brcs	.+22     	; 0x34c <__divsf3+0x24>
 336:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__fp_pscA>
 33a:	40 f0       	brcs	.+16     	; 0x34c <__divsf3+0x24>
 33c:	29 f4       	brne	.+10     	; 0x348 <__divsf3+0x20>
 33e:	5f 3f       	cpi	r21, 0xFF	; 255
 340:	29 f0       	breq	.+10     	; 0x34c <__divsf3+0x24>
 342:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_inf>
 346:	51 11       	cpse	r21, r1
 348:	0c 94 bd 02 	jmp	0x57a	; 0x57a <__fp_szero>
 34c:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__fp_nan>

00000350 <__divsf3x>:
 350:	0e 94 9a 02 	call	0x534	; 0x534 <__fp_split3>
 354:	68 f3       	brcs	.-38     	; 0x330 <__divsf3+0x8>

00000356 <__divsf3_pse>:
 356:	99 23       	and	r25, r25
 358:	b1 f3       	breq	.-20     	; 0x346 <__divsf3+0x1e>
 35a:	55 23       	and	r21, r21
 35c:	91 f3       	breq	.-28     	; 0x342 <__divsf3+0x1a>
 35e:	95 1b       	sub	r25, r21
 360:	55 0b       	sbc	r21, r21
 362:	bb 27       	eor	r27, r27
 364:	aa 27       	eor	r26, r26
 366:	62 17       	cp	r22, r18
 368:	73 07       	cpc	r23, r19
 36a:	84 07       	cpc	r24, r20
 36c:	38 f0       	brcs	.+14     	; 0x37c <__divsf3_pse+0x26>
 36e:	9f 5f       	subi	r25, 0xFF	; 255
 370:	5f 4f       	sbci	r21, 0xFF	; 255
 372:	22 0f       	add	r18, r18
 374:	33 1f       	adc	r19, r19
 376:	44 1f       	adc	r20, r20
 378:	aa 1f       	adc	r26, r26
 37a:	a9 f3       	breq	.-22     	; 0x366 <__divsf3_pse+0x10>
 37c:	35 d0       	rcall	.+106    	; 0x3e8 <__divsf3_pse+0x92>
 37e:	0e 2e       	mov	r0, r30
 380:	3a f0       	brmi	.+14     	; 0x390 <__divsf3_pse+0x3a>
 382:	e0 e8       	ldi	r30, 0x80	; 128
 384:	32 d0       	rcall	.+100    	; 0x3ea <__divsf3_pse+0x94>
 386:	91 50       	subi	r25, 0x01	; 1
 388:	50 40       	sbci	r21, 0x00	; 0
 38a:	e6 95       	lsr	r30
 38c:	00 1c       	adc	r0, r0
 38e:	ca f7       	brpl	.-14     	; 0x382 <__divsf3_pse+0x2c>
 390:	2b d0       	rcall	.+86     	; 0x3e8 <__divsf3_pse+0x92>
 392:	fe 2f       	mov	r31, r30
 394:	29 d0       	rcall	.+82     	; 0x3e8 <__divsf3_pse+0x92>
 396:	66 0f       	add	r22, r22
 398:	77 1f       	adc	r23, r23
 39a:	88 1f       	adc	r24, r24
 39c:	bb 1f       	adc	r27, r27
 39e:	26 17       	cp	r18, r22
 3a0:	37 07       	cpc	r19, r23
 3a2:	48 07       	cpc	r20, r24
 3a4:	ab 07       	cpc	r26, r27
 3a6:	b0 e8       	ldi	r27, 0x80	; 128
 3a8:	09 f0       	breq	.+2      	; 0x3ac <__divsf3_pse+0x56>
 3aa:	bb 0b       	sbc	r27, r27
 3ac:	80 2d       	mov	r24, r0
 3ae:	bf 01       	movw	r22, r30
 3b0:	ff 27       	eor	r31, r31
 3b2:	93 58       	subi	r25, 0x83	; 131
 3b4:	5f 4f       	sbci	r21, 0xFF	; 255
 3b6:	3a f0       	brmi	.+14     	; 0x3c6 <__divsf3_pse+0x70>
 3b8:	9e 3f       	cpi	r25, 0xFE	; 254
 3ba:	51 05       	cpc	r21, r1
 3bc:	78 f0       	brcs	.+30     	; 0x3dc <__divsf3_pse+0x86>
 3be:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_inf>
 3c2:	0c 94 bd 02 	jmp	0x57a	; 0x57a <__fp_szero>
 3c6:	5f 3f       	cpi	r21, 0xFF	; 255
 3c8:	e4 f3       	brlt	.-8      	; 0x3c2 <__divsf3_pse+0x6c>
 3ca:	98 3e       	cpi	r25, 0xE8	; 232
 3cc:	d4 f3       	brlt	.-12     	; 0x3c2 <__divsf3_pse+0x6c>
 3ce:	86 95       	lsr	r24
 3d0:	77 95       	ror	r23
 3d2:	67 95       	ror	r22
 3d4:	b7 95       	ror	r27
 3d6:	f7 95       	ror	r31
 3d8:	9f 5f       	subi	r25, 0xFF	; 255
 3da:	c9 f7       	brne	.-14     	; 0x3ce <__divsf3_pse+0x78>
 3dc:	88 0f       	add	r24, r24
 3de:	91 1d       	adc	r25, r1
 3e0:	96 95       	lsr	r25
 3e2:	87 95       	ror	r24
 3e4:	97 f9       	bld	r25, 7
 3e6:	08 95       	ret
 3e8:	e1 e0       	ldi	r30, 0x01	; 1
 3ea:	66 0f       	add	r22, r22
 3ec:	77 1f       	adc	r23, r23
 3ee:	88 1f       	adc	r24, r24
 3f0:	bb 1f       	adc	r27, r27
 3f2:	62 17       	cp	r22, r18
 3f4:	73 07       	cpc	r23, r19
 3f6:	84 07       	cpc	r24, r20
 3f8:	ba 07       	cpc	r27, r26
 3fa:	20 f0       	brcs	.+8      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fc:	62 1b       	sub	r22, r18
 3fe:	73 0b       	sbc	r23, r19
 400:	84 0b       	sbc	r24, r20
 402:	ba 0b       	sbc	r27, r26
 404:	ee 1f       	adc	r30, r30
 406:	88 f7       	brcc	.-30     	; 0x3ea <__divsf3_pse+0x94>
 408:	e0 95       	com	r30
 40a:	08 95       	ret

0000040c <__fixunssfsi>:
 40c:	0e 94 a2 02 	call	0x544	; 0x544 <__fp_splitA>
 410:	88 f0       	brcs	.+34     	; 0x434 <__fixunssfsi+0x28>
 412:	9f 57       	subi	r25, 0x7F	; 127
 414:	98 f0       	brcs	.+38     	; 0x43c <__fixunssfsi+0x30>
 416:	b9 2f       	mov	r27, r25
 418:	99 27       	eor	r25, r25
 41a:	b7 51       	subi	r27, 0x17	; 23
 41c:	b0 f0       	brcs	.+44     	; 0x44a <__fixunssfsi+0x3e>
 41e:	e1 f0       	breq	.+56     	; 0x458 <__fixunssfsi+0x4c>
 420:	66 0f       	add	r22, r22
 422:	77 1f       	adc	r23, r23
 424:	88 1f       	adc	r24, r24
 426:	99 1f       	adc	r25, r25
 428:	1a f0       	brmi	.+6      	; 0x430 <__fixunssfsi+0x24>
 42a:	ba 95       	dec	r27
 42c:	c9 f7       	brne	.-14     	; 0x420 <__fixunssfsi+0x14>
 42e:	14 c0       	rjmp	.+40     	; 0x458 <__fixunssfsi+0x4c>
 430:	b1 30       	cpi	r27, 0x01	; 1
 432:	91 f0       	breq	.+36     	; 0x458 <__fixunssfsi+0x4c>
 434:	0e 94 bc 02 	call	0x578	; 0x578 <__fp_zero>
 438:	b1 e0       	ldi	r27, 0x01	; 1
 43a:	08 95       	ret
 43c:	0c 94 bc 02 	jmp	0x578	; 0x578 <__fp_zero>
 440:	67 2f       	mov	r22, r23
 442:	78 2f       	mov	r23, r24
 444:	88 27       	eor	r24, r24
 446:	b8 5f       	subi	r27, 0xF8	; 248
 448:	39 f0       	breq	.+14     	; 0x458 <__fixunssfsi+0x4c>
 44a:	b9 3f       	cpi	r27, 0xF9	; 249
 44c:	cc f3       	brlt	.-14     	; 0x440 <__fixunssfsi+0x34>
 44e:	86 95       	lsr	r24
 450:	77 95       	ror	r23
 452:	67 95       	ror	r22
 454:	b3 95       	inc	r27
 456:	d9 f7       	brne	.-10     	; 0x44e <__fixunssfsi+0x42>
 458:	3e f4       	brtc	.+14     	; 0x468 <__fixunssfsi+0x5c>
 45a:	90 95       	com	r25
 45c:	80 95       	com	r24
 45e:	70 95       	com	r23
 460:	61 95       	neg	r22
 462:	7f 4f       	sbci	r23, 0xFF	; 255
 464:	8f 4f       	sbci	r24, 0xFF	; 255
 466:	9f 4f       	sbci	r25, 0xFF	; 255
 468:	08 95       	ret

0000046a <__floatunsisf>:
 46a:	e8 94       	clt
 46c:	09 c0       	rjmp	.+18     	; 0x480 <__floatsisf+0x12>

0000046e <__floatsisf>:
 46e:	97 fb       	bst	r25, 7
 470:	3e f4       	brtc	.+14     	; 0x480 <__floatsisf+0x12>
 472:	90 95       	com	r25
 474:	80 95       	com	r24
 476:	70 95       	com	r23
 478:	61 95       	neg	r22
 47a:	7f 4f       	sbci	r23, 0xFF	; 255
 47c:	8f 4f       	sbci	r24, 0xFF	; 255
 47e:	9f 4f       	sbci	r25, 0xFF	; 255
 480:	99 23       	and	r25, r25
 482:	a9 f0       	breq	.+42     	; 0x4ae <__floatsisf+0x40>
 484:	f9 2f       	mov	r31, r25
 486:	96 e9       	ldi	r25, 0x96	; 150
 488:	bb 27       	eor	r27, r27
 48a:	93 95       	inc	r25
 48c:	f6 95       	lsr	r31
 48e:	87 95       	ror	r24
 490:	77 95       	ror	r23
 492:	67 95       	ror	r22
 494:	b7 95       	ror	r27
 496:	f1 11       	cpse	r31, r1
 498:	f8 cf       	rjmp	.-16     	; 0x48a <__floatsisf+0x1c>
 49a:	fa f4       	brpl	.+62     	; 0x4da <__floatsisf+0x6c>
 49c:	bb 0f       	add	r27, r27
 49e:	11 f4       	brne	.+4      	; 0x4a4 <__floatsisf+0x36>
 4a0:	60 ff       	sbrs	r22, 0
 4a2:	1b c0       	rjmp	.+54     	; 0x4da <__floatsisf+0x6c>
 4a4:	6f 5f       	subi	r22, 0xFF	; 255
 4a6:	7f 4f       	sbci	r23, 0xFF	; 255
 4a8:	8f 4f       	sbci	r24, 0xFF	; 255
 4aa:	9f 4f       	sbci	r25, 0xFF	; 255
 4ac:	16 c0       	rjmp	.+44     	; 0x4da <__floatsisf+0x6c>
 4ae:	88 23       	and	r24, r24
 4b0:	11 f0       	breq	.+4      	; 0x4b6 <__floatsisf+0x48>
 4b2:	96 e9       	ldi	r25, 0x96	; 150
 4b4:	11 c0       	rjmp	.+34     	; 0x4d8 <__floatsisf+0x6a>
 4b6:	77 23       	and	r23, r23
 4b8:	21 f0       	breq	.+8      	; 0x4c2 <__floatsisf+0x54>
 4ba:	9e e8       	ldi	r25, 0x8E	; 142
 4bc:	87 2f       	mov	r24, r23
 4be:	76 2f       	mov	r23, r22
 4c0:	05 c0       	rjmp	.+10     	; 0x4cc <__floatsisf+0x5e>
 4c2:	66 23       	and	r22, r22
 4c4:	71 f0       	breq	.+28     	; 0x4e2 <__floatsisf+0x74>
 4c6:	96 e8       	ldi	r25, 0x86	; 134
 4c8:	86 2f       	mov	r24, r22
 4ca:	70 e0       	ldi	r23, 0x00	; 0
 4cc:	60 e0       	ldi	r22, 0x00	; 0
 4ce:	2a f0       	brmi	.+10     	; 0x4da <__floatsisf+0x6c>
 4d0:	9a 95       	dec	r25
 4d2:	66 0f       	add	r22, r22
 4d4:	77 1f       	adc	r23, r23
 4d6:	88 1f       	adc	r24, r24
 4d8:	da f7       	brpl	.-10     	; 0x4d0 <__floatsisf+0x62>
 4da:	88 0f       	add	r24, r24
 4dc:	96 95       	lsr	r25
 4de:	87 95       	ror	r24
 4e0:	97 f9       	bld	r25, 7
 4e2:	08 95       	ret

000004e4 <__fp_inf>:
 4e4:	97 f9       	bld	r25, 7
 4e6:	9f 67       	ori	r25, 0x7F	; 127
 4e8:	80 e8       	ldi	r24, 0x80	; 128
 4ea:	70 e0       	ldi	r23, 0x00	; 0
 4ec:	60 e0       	ldi	r22, 0x00	; 0
 4ee:	08 95       	ret

000004f0 <__fp_nan>:
 4f0:	9f ef       	ldi	r25, 0xFF	; 255
 4f2:	80 ec       	ldi	r24, 0xC0	; 192
 4f4:	08 95       	ret

000004f6 <__fp_pscA>:
 4f6:	00 24       	eor	r0, r0
 4f8:	0a 94       	dec	r0
 4fa:	16 16       	cp	r1, r22
 4fc:	17 06       	cpc	r1, r23
 4fe:	18 06       	cpc	r1, r24
 500:	09 06       	cpc	r0, r25
 502:	08 95       	ret

00000504 <__fp_pscB>:
 504:	00 24       	eor	r0, r0
 506:	0a 94       	dec	r0
 508:	12 16       	cp	r1, r18
 50a:	13 06       	cpc	r1, r19
 50c:	14 06       	cpc	r1, r20
 50e:	05 06       	cpc	r0, r21
 510:	08 95       	ret

00000512 <__fp_round>:
 512:	09 2e       	mov	r0, r25
 514:	03 94       	inc	r0
 516:	00 0c       	add	r0, r0
 518:	11 f4       	brne	.+4      	; 0x51e <__fp_round+0xc>
 51a:	88 23       	and	r24, r24
 51c:	52 f0       	brmi	.+20     	; 0x532 <__fp_round+0x20>
 51e:	bb 0f       	add	r27, r27
 520:	40 f4       	brcc	.+16     	; 0x532 <__fp_round+0x20>
 522:	bf 2b       	or	r27, r31
 524:	11 f4       	brne	.+4      	; 0x52a <__fp_round+0x18>
 526:	60 ff       	sbrs	r22, 0
 528:	04 c0       	rjmp	.+8      	; 0x532 <__fp_round+0x20>
 52a:	6f 5f       	subi	r22, 0xFF	; 255
 52c:	7f 4f       	sbci	r23, 0xFF	; 255
 52e:	8f 4f       	sbci	r24, 0xFF	; 255
 530:	9f 4f       	sbci	r25, 0xFF	; 255
 532:	08 95       	ret

00000534 <__fp_split3>:
 534:	57 fd       	sbrc	r21, 7
 536:	90 58       	subi	r25, 0x80	; 128
 538:	44 0f       	add	r20, r20
 53a:	55 1f       	adc	r21, r21
 53c:	59 f0       	breq	.+22     	; 0x554 <__fp_splitA+0x10>
 53e:	5f 3f       	cpi	r21, 0xFF	; 255
 540:	71 f0       	breq	.+28     	; 0x55e <__fp_splitA+0x1a>
 542:	47 95       	ror	r20

00000544 <__fp_splitA>:
 544:	88 0f       	add	r24, r24
 546:	97 fb       	bst	r25, 7
 548:	99 1f       	adc	r25, r25
 54a:	61 f0       	breq	.+24     	; 0x564 <__fp_splitA+0x20>
 54c:	9f 3f       	cpi	r25, 0xFF	; 255
 54e:	79 f0       	breq	.+30     	; 0x56e <__fp_splitA+0x2a>
 550:	87 95       	ror	r24
 552:	08 95       	ret
 554:	12 16       	cp	r1, r18
 556:	13 06       	cpc	r1, r19
 558:	14 06       	cpc	r1, r20
 55a:	55 1f       	adc	r21, r21
 55c:	f2 cf       	rjmp	.-28     	; 0x542 <__fp_split3+0xe>
 55e:	46 95       	lsr	r20
 560:	f1 df       	rcall	.-30     	; 0x544 <__fp_splitA>
 562:	08 c0       	rjmp	.+16     	; 0x574 <__fp_splitA+0x30>
 564:	16 16       	cp	r1, r22
 566:	17 06       	cpc	r1, r23
 568:	18 06       	cpc	r1, r24
 56a:	99 1f       	adc	r25, r25
 56c:	f1 cf       	rjmp	.-30     	; 0x550 <__fp_splitA+0xc>
 56e:	86 95       	lsr	r24
 570:	71 05       	cpc	r23, r1
 572:	61 05       	cpc	r22, r1
 574:	08 94       	sec
 576:	08 95       	ret

00000578 <__fp_zero>:
 578:	e8 94       	clt

0000057a <__fp_szero>:
 57a:	bb 27       	eor	r27, r27
 57c:	66 27       	eor	r22, r22
 57e:	77 27       	eor	r23, r23
 580:	cb 01       	movw	r24, r22
 582:	97 f9       	bld	r25, 7
 584:	08 95       	ret

00000586 <__mulsf3>:
 586:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__mulsf3x>
 58a:	0c 94 89 02 	jmp	0x512	; 0x512 <__fp_round>
 58e:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__fp_pscA>
 592:	38 f0       	brcs	.+14     	; 0x5a2 <__mulsf3+0x1c>
 594:	0e 94 82 02 	call	0x504	; 0x504 <__fp_pscB>
 598:	20 f0       	brcs	.+8      	; 0x5a2 <__mulsf3+0x1c>
 59a:	95 23       	and	r25, r21
 59c:	11 f0       	breq	.+4      	; 0x5a2 <__mulsf3+0x1c>
 59e:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_inf>
 5a2:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__fp_nan>
 5a6:	11 24       	eor	r1, r1
 5a8:	0c 94 bd 02 	jmp	0x57a	; 0x57a <__fp_szero>

000005ac <__mulsf3x>:
 5ac:	0e 94 9a 02 	call	0x534	; 0x534 <__fp_split3>
 5b0:	70 f3       	brcs	.-36     	; 0x58e <__mulsf3+0x8>

000005b2 <__mulsf3_pse>:
 5b2:	95 9f       	mul	r25, r21
 5b4:	c1 f3       	breq	.-16     	; 0x5a6 <__mulsf3+0x20>
 5b6:	95 0f       	add	r25, r21
 5b8:	50 e0       	ldi	r21, 0x00	; 0
 5ba:	55 1f       	adc	r21, r21
 5bc:	62 9f       	mul	r22, r18
 5be:	f0 01       	movw	r30, r0
 5c0:	72 9f       	mul	r23, r18
 5c2:	bb 27       	eor	r27, r27
 5c4:	f0 0d       	add	r31, r0
 5c6:	b1 1d       	adc	r27, r1
 5c8:	63 9f       	mul	r22, r19
 5ca:	aa 27       	eor	r26, r26
 5cc:	f0 0d       	add	r31, r0
 5ce:	b1 1d       	adc	r27, r1
 5d0:	aa 1f       	adc	r26, r26
 5d2:	64 9f       	mul	r22, r20
 5d4:	66 27       	eor	r22, r22
 5d6:	b0 0d       	add	r27, r0
 5d8:	a1 1d       	adc	r26, r1
 5da:	66 1f       	adc	r22, r22
 5dc:	82 9f       	mul	r24, r18
 5de:	22 27       	eor	r18, r18
 5e0:	b0 0d       	add	r27, r0
 5e2:	a1 1d       	adc	r26, r1
 5e4:	62 1f       	adc	r22, r18
 5e6:	73 9f       	mul	r23, r19
 5e8:	b0 0d       	add	r27, r0
 5ea:	a1 1d       	adc	r26, r1
 5ec:	62 1f       	adc	r22, r18
 5ee:	83 9f       	mul	r24, r19
 5f0:	a0 0d       	add	r26, r0
 5f2:	61 1d       	adc	r22, r1
 5f4:	22 1f       	adc	r18, r18
 5f6:	74 9f       	mul	r23, r20
 5f8:	33 27       	eor	r19, r19
 5fa:	a0 0d       	add	r26, r0
 5fc:	61 1d       	adc	r22, r1
 5fe:	23 1f       	adc	r18, r19
 600:	84 9f       	mul	r24, r20
 602:	60 0d       	add	r22, r0
 604:	21 1d       	adc	r18, r1
 606:	82 2f       	mov	r24, r18
 608:	76 2f       	mov	r23, r22
 60a:	6a 2f       	mov	r22, r26
 60c:	11 24       	eor	r1, r1
 60e:	9f 57       	subi	r25, 0x7F	; 127
 610:	50 40       	sbci	r21, 0x00	; 0
 612:	9a f0       	brmi	.+38     	; 0x63a <__mulsf3_pse+0x88>
 614:	f1 f0       	breq	.+60     	; 0x652 <__mulsf3_pse+0xa0>
 616:	88 23       	and	r24, r24
 618:	4a f0       	brmi	.+18     	; 0x62c <__mulsf3_pse+0x7a>
 61a:	ee 0f       	add	r30, r30
 61c:	ff 1f       	adc	r31, r31
 61e:	bb 1f       	adc	r27, r27
 620:	66 1f       	adc	r22, r22
 622:	77 1f       	adc	r23, r23
 624:	88 1f       	adc	r24, r24
 626:	91 50       	subi	r25, 0x01	; 1
 628:	50 40       	sbci	r21, 0x00	; 0
 62a:	a9 f7       	brne	.-22     	; 0x616 <__mulsf3_pse+0x64>
 62c:	9e 3f       	cpi	r25, 0xFE	; 254
 62e:	51 05       	cpc	r21, r1
 630:	80 f0       	brcs	.+32     	; 0x652 <__mulsf3_pse+0xa0>
 632:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_inf>
 636:	0c 94 bd 02 	jmp	0x57a	; 0x57a <__fp_szero>
 63a:	5f 3f       	cpi	r21, 0xFF	; 255
 63c:	e4 f3       	brlt	.-8      	; 0x636 <__mulsf3_pse+0x84>
 63e:	98 3e       	cpi	r25, 0xE8	; 232
 640:	d4 f3       	brlt	.-12     	; 0x636 <__mulsf3_pse+0x84>
 642:	86 95       	lsr	r24
 644:	77 95       	ror	r23
 646:	67 95       	ror	r22
 648:	b7 95       	ror	r27
 64a:	f7 95       	ror	r31
 64c:	e7 95       	ror	r30
 64e:	9f 5f       	subi	r25, 0xFF	; 255
 650:	c1 f7       	brne	.-16     	; 0x642 <__mulsf3_pse+0x90>
 652:	fe 2b       	or	r31, r30
 654:	88 0f       	add	r24, r24
 656:	91 1d       	adc	r25, r1
 658:	96 95       	lsr	r25
 65a:	87 95       	ror	r24
 65c:	97 f9       	bld	r25, 7
 65e:	08 95       	ret

00000660 <pow>:
 660:	fa 01       	movw	r30, r20
 662:	ee 0f       	add	r30, r30
 664:	ff 1f       	adc	r31, r31
 666:	30 96       	adiw	r30, 0x00	; 0
 668:	21 05       	cpc	r18, r1
 66a:	31 05       	cpc	r19, r1
 66c:	a1 f1       	breq	.+104    	; 0x6d6 <pow+0x76>
 66e:	61 15       	cp	r22, r1
 670:	71 05       	cpc	r23, r1
 672:	61 f4       	brne	.+24     	; 0x68c <pow+0x2c>
 674:	80 38       	cpi	r24, 0x80	; 128
 676:	bf e3       	ldi	r27, 0x3F	; 63
 678:	9b 07       	cpc	r25, r27
 67a:	49 f1       	breq	.+82     	; 0x6ce <pow+0x6e>
 67c:	68 94       	set
 67e:	90 38       	cpi	r25, 0x80	; 128
 680:	81 05       	cpc	r24, r1
 682:	61 f0       	breq	.+24     	; 0x69c <pow+0x3c>
 684:	80 38       	cpi	r24, 0x80	; 128
 686:	bf ef       	ldi	r27, 0xFF	; 255
 688:	9b 07       	cpc	r25, r27
 68a:	41 f0       	breq	.+16     	; 0x69c <pow+0x3c>
 68c:	99 23       	and	r25, r25
 68e:	4a f5       	brpl	.+82     	; 0x6e2 <pow+0x82>
 690:	ff 3f       	cpi	r31, 0xFF	; 255
 692:	e1 05       	cpc	r30, r1
 694:	31 05       	cpc	r19, r1
 696:	21 05       	cpc	r18, r1
 698:	19 f1       	breq	.+70     	; 0x6e0 <pow+0x80>
 69a:	e8 94       	clt
 69c:	08 94       	sec
 69e:	e7 95       	ror	r30
 6a0:	d9 01       	movw	r26, r18
 6a2:	aa 23       	and	r26, r26
 6a4:	29 f4       	brne	.+10     	; 0x6b0 <pow+0x50>
 6a6:	ab 2f       	mov	r26, r27
 6a8:	be 2f       	mov	r27, r30
 6aa:	f8 5f       	subi	r31, 0xF8	; 248
 6ac:	d0 f3       	brcs	.-12     	; 0x6a2 <pow+0x42>
 6ae:	10 c0       	rjmp	.+32     	; 0x6d0 <pow+0x70>
 6b0:	ff 5f       	subi	r31, 0xFF	; 255
 6b2:	70 f4       	brcc	.+28     	; 0x6d0 <pow+0x70>
 6b4:	a6 95       	lsr	r26
 6b6:	e0 f7       	brcc	.-8      	; 0x6b0 <pow+0x50>
 6b8:	f7 39       	cpi	r31, 0x97	; 151
 6ba:	50 f0       	brcs	.+20     	; 0x6d0 <pow+0x70>
 6bc:	19 f0       	breq	.+6      	; 0x6c4 <pow+0x64>
 6be:	ff 3a       	cpi	r31, 0xAF	; 175
 6c0:	38 f4       	brcc	.+14     	; 0x6d0 <pow+0x70>
 6c2:	9f 77       	andi	r25, 0x7F	; 127
 6c4:	9f 93       	push	r25
 6c6:	0d d0       	rcall	.+26     	; 0x6e2 <pow+0x82>
 6c8:	0f 90       	pop	r0
 6ca:	07 fc       	sbrc	r0, 7
 6cc:	90 58       	subi	r25, 0x80	; 128
 6ce:	08 95       	ret
 6d0:	46 f0       	brts	.+16     	; 0x6e2 <pow+0x82>
 6d2:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__fp_nan>
 6d6:	60 e0       	ldi	r22, 0x00	; 0
 6d8:	70 e0       	ldi	r23, 0x00	; 0
 6da:	80 e8       	ldi	r24, 0x80	; 128
 6dc:	9f e3       	ldi	r25, 0x3F	; 63
 6de:	08 95       	ret
 6e0:	4f e7       	ldi	r20, 0x7F	; 127
 6e2:	9f 77       	andi	r25, 0x7F	; 127
 6e4:	5f 93       	push	r21
 6e6:	4f 93       	push	r20
 6e8:	3f 93       	push	r19
 6ea:	2f 93       	push	r18
 6ec:	0e 94 2b 04 	call	0x856	; 0x856 <log>
 6f0:	2f 91       	pop	r18
 6f2:	3f 91       	pop	r19
 6f4:	4f 91       	pop	r20
 6f6:	5f 91       	pop	r21
 6f8:	0e 94 c3 02 	call	0x586	; 0x586 <__mulsf3>
 6fc:	0c 94 88 03 	jmp	0x710	; 0x710 <exp>
 700:	29 f4       	brne	.+10     	; 0x70c <pow+0xac>
 702:	16 f0       	brts	.+4      	; 0x708 <pow+0xa8>
 704:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_inf>
 708:	0c 94 bc 02 	jmp	0x578	; 0x578 <__fp_zero>
 70c:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__fp_nan>

00000710 <exp>:
 710:	0e 94 a2 02 	call	0x544	; 0x544 <__fp_splitA>
 714:	a8 f3       	brcs	.-22     	; 0x700 <pow+0xa0>
 716:	96 38       	cpi	r25, 0x86	; 134
 718:	a0 f7       	brcc	.-24     	; 0x702 <pow+0xa2>
 71a:	07 f8       	bld	r0, 7
 71c:	0f 92       	push	r0
 71e:	e8 94       	clt
 720:	2b e3       	ldi	r18, 0x3B	; 59
 722:	3a ea       	ldi	r19, 0xAA	; 170
 724:	48 eb       	ldi	r20, 0xB8	; 184
 726:	5f e7       	ldi	r21, 0x7F	; 127
 728:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__mulsf3_pse>
 72c:	0f 92       	push	r0
 72e:	0f 92       	push	r0
 730:	0f 92       	push	r0
 732:	4d b7       	in	r20, 0x3d	; 61
 734:	5e b7       	in	r21, 0x3e	; 62
 736:	0f 92       	push	r0
 738:	0e 94 73 04 	call	0x8e6	; 0x8e6 <modf>
 73c:	e4 eb       	ldi	r30, 0xB4	; 180
 73e:	f0 e0       	ldi	r31, 0x00	; 0
 740:	0e 94 ba 03 	call	0x774	; 0x774 <__fp_powser>
 744:	4f 91       	pop	r20
 746:	5f 91       	pop	r21
 748:	ef 91       	pop	r30
 74a:	ff 91       	pop	r31
 74c:	e5 95       	asr	r30
 74e:	ee 1f       	adc	r30, r30
 750:	ff 1f       	adc	r31, r31
 752:	49 f0       	breq	.+18     	; 0x766 <exp+0x56>
 754:	fe 57       	subi	r31, 0x7E	; 126
 756:	e0 68       	ori	r30, 0x80	; 128
 758:	44 27       	eor	r20, r20
 75a:	ee 0f       	add	r30, r30
 75c:	44 1f       	adc	r20, r20
 75e:	fa 95       	dec	r31
 760:	e1 f7       	brne	.-8      	; 0x75a <exp+0x4a>
 762:	41 95       	neg	r20
 764:	55 0b       	sbc	r21, r21
 766:	0e 94 ed 03 	call	0x7da	; 0x7da <ldexp>
 76a:	0f 90       	pop	r0
 76c:	07 fe       	sbrs	r0, 7
 76e:	0c 94 e1 03 	jmp	0x7c2	; 0x7c2 <inverse>
 772:	08 95       	ret

00000774 <__fp_powser>:
 774:	df 93       	push	r29
 776:	cf 93       	push	r28
 778:	1f 93       	push	r17
 77a:	0f 93       	push	r16
 77c:	ff 92       	push	r15
 77e:	ef 92       	push	r14
 780:	df 92       	push	r13
 782:	7b 01       	movw	r14, r22
 784:	8c 01       	movw	r16, r24
 786:	68 94       	set
 788:	06 c0       	rjmp	.+12     	; 0x796 <__fp_powser+0x22>
 78a:	da 2e       	mov	r13, r26
 78c:	ef 01       	movw	r28, r30
 78e:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__mulsf3x>
 792:	fe 01       	movw	r30, r28
 794:	e8 94       	clt
 796:	a5 91       	lpm	r26, Z+
 798:	25 91       	lpm	r18, Z+
 79a:	35 91       	lpm	r19, Z+
 79c:	45 91       	lpm	r20, Z+
 79e:	55 91       	lpm	r21, Z+
 7a0:	a6 f3       	brts	.-24     	; 0x78a <__fp_powser+0x16>
 7a2:	ef 01       	movw	r28, r30
 7a4:	0e 94 bf 04 	call	0x97e	; 0x97e <__addsf3x>
 7a8:	fe 01       	movw	r30, r28
 7aa:	97 01       	movw	r18, r14
 7ac:	a8 01       	movw	r20, r16
 7ae:	da 94       	dec	r13
 7b0:	69 f7       	brne	.-38     	; 0x78c <__fp_powser+0x18>
 7b2:	df 90       	pop	r13
 7b4:	ef 90       	pop	r14
 7b6:	ff 90       	pop	r15
 7b8:	0f 91       	pop	r16
 7ba:	1f 91       	pop	r17
 7bc:	cf 91       	pop	r28
 7be:	df 91       	pop	r29
 7c0:	08 95       	ret

000007c2 <inverse>:
 7c2:	9b 01       	movw	r18, r22
 7c4:	ac 01       	movw	r20, r24
 7c6:	60 e0       	ldi	r22, 0x00	; 0
 7c8:	70 e0       	ldi	r23, 0x00	; 0
 7ca:	80 e8       	ldi	r24, 0x80	; 128
 7cc:	9f e3       	ldi	r25, 0x3F	; 63
 7ce:	0c 94 94 01 	jmp	0x328	; 0x328 <__divsf3>
 7d2:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_inf>
 7d6:	0c 94 14 05 	jmp	0xa28	; 0xa28 <__fp_mpack>

000007da <ldexp>:
 7da:	0e 94 a2 02 	call	0x544	; 0x544 <__fp_splitA>
 7de:	d8 f3       	brcs	.-10     	; 0x7d6 <inverse+0x14>
 7e0:	99 23       	and	r25, r25
 7e2:	c9 f3       	breq	.-14     	; 0x7d6 <inverse+0x14>
 7e4:	94 0f       	add	r25, r20
 7e6:	51 1d       	adc	r21, r1
 7e8:	a3 f3       	brvs	.-24     	; 0x7d2 <inverse+0x10>
 7ea:	91 50       	subi	r25, 0x01	; 1
 7ec:	50 40       	sbci	r21, 0x00	; 0
 7ee:	94 f0       	brlt	.+36     	; 0x814 <ldexp+0x3a>
 7f0:	59 f0       	breq	.+22     	; 0x808 <ldexp+0x2e>
 7f2:	88 23       	and	r24, r24
 7f4:	32 f0       	brmi	.+12     	; 0x802 <ldexp+0x28>
 7f6:	66 0f       	add	r22, r22
 7f8:	77 1f       	adc	r23, r23
 7fa:	88 1f       	adc	r24, r24
 7fc:	91 50       	subi	r25, 0x01	; 1
 7fe:	50 40       	sbci	r21, 0x00	; 0
 800:	c1 f7       	brne	.-16     	; 0x7f2 <ldexp+0x18>
 802:	9e 3f       	cpi	r25, 0xFE	; 254
 804:	51 05       	cpc	r21, r1
 806:	2c f7       	brge	.-54     	; 0x7d2 <inverse+0x10>
 808:	88 0f       	add	r24, r24
 80a:	91 1d       	adc	r25, r1
 80c:	96 95       	lsr	r25
 80e:	87 95       	ror	r24
 810:	97 f9       	bld	r25, 7
 812:	08 95       	ret
 814:	5f 3f       	cpi	r21, 0xFF	; 255
 816:	ac f0       	brlt	.+42     	; 0x842 <ldexp+0x68>
 818:	98 3e       	cpi	r25, 0xE8	; 232
 81a:	9c f0       	brlt	.+38     	; 0x842 <ldexp+0x68>
 81c:	bb 27       	eor	r27, r27
 81e:	86 95       	lsr	r24
 820:	77 95       	ror	r23
 822:	67 95       	ror	r22
 824:	b7 95       	ror	r27
 826:	08 f4       	brcc	.+2      	; 0x82a <ldexp+0x50>
 828:	b1 60       	ori	r27, 0x01	; 1
 82a:	93 95       	inc	r25
 82c:	c1 f7       	brne	.-16     	; 0x81e <ldexp+0x44>
 82e:	bb 0f       	add	r27, r27
 830:	58 f7       	brcc	.-42     	; 0x808 <ldexp+0x2e>
 832:	11 f4       	brne	.+4      	; 0x838 <ldexp+0x5e>
 834:	60 ff       	sbrs	r22, 0
 836:	e8 cf       	rjmp	.-48     	; 0x808 <ldexp+0x2e>
 838:	6f 5f       	subi	r22, 0xFF	; 255
 83a:	7f 4f       	sbci	r23, 0xFF	; 255
 83c:	8f 4f       	sbci	r24, 0xFF	; 255
 83e:	9f 4f       	sbci	r25, 0xFF	; 255
 840:	e3 cf       	rjmp	.-58     	; 0x808 <ldexp+0x2e>
 842:	0c 94 bd 02 	jmp	0x57a	; 0x57a <__fp_szero>
 846:	16 f0       	brts	.+4      	; 0x84c <ldexp+0x72>
 848:	0c 94 14 05 	jmp	0xa28	; 0xa28 <__fp_mpack>
 84c:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__fp_nan>
 850:	68 94       	set
 852:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_inf>

00000856 <log>:
 856:	0e 94 a2 02 	call	0x544	; 0x544 <__fp_splitA>
 85a:	a8 f3       	brcs	.-22     	; 0x846 <ldexp+0x6c>
 85c:	99 23       	and	r25, r25
 85e:	c1 f3       	breq	.-16     	; 0x850 <ldexp+0x76>
 860:	ae f3       	brts	.-22     	; 0x84c <ldexp+0x72>
 862:	df 93       	push	r29
 864:	cf 93       	push	r28
 866:	1f 93       	push	r17
 868:	0f 93       	push	r16
 86a:	ff 92       	push	r15
 86c:	c9 2f       	mov	r28, r25
 86e:	dd 27       	eor	r29, r29
 870:	88 23       	and	r24, r24
 872:	2a f0       	brmi	.+10     	; 0x87e <log+0x28>
 874:	21 97       	sbiw	r28, 0x01	; 1
 876:	66 0f       	add	r22, r22
 878:	77 1f       	adc	r23, r23
 87a:	88 1f       	adc	r24, r24
 87c:	da f7       	brpl	.-10     	; 0x874 <log+0x1e>
 87e:	20 e0       	ldi	r18, 0x00	; 0
 880:	30 e0       	ldi	r19, 0x00	; 0
 882:	40 e8       	ldi	r20, 0x80	; 128
 884:	5f eb       	ldi	r21, 0xBF	; 191
 886:	9f e3       	ldi	r25, 0x3F	; 63
 888:	88 39       	cpi	r24, 0x98	; 152
 88a:	20 f0       	brcs	.+8      	; 0x894 <log+0x3e>
 88c:	80 3e       	cpi	r24, 0xE0	; 224
 88e:	38 f0       	brcs	.+14     	; 0x89e <log+0x48>
 890:	21 96       	adiw	r28, 0x01	; 1
 892:	8f 77       	andi	r24, 0x7F	; 127
 894:	0e 94 a8 04 	call	0x950	; 0x950 <__addsf3>
 898:	ec ed       	ldi	r30, 0xDC	; 220
 89a:	f0 e0       	ldi	r31, 0x00	; 0
 89c:	04 c0       	rjmp	.+8      	; 0x8a6 <log+0x50>
 89e:	0e 94 a8 04 	call	0x950	; 0x950 <__addsf3>
 8a2:	e9 e0       	ldi	r30, 0x09	; 9
 8a4:	f1 e0       	ldi	r31, 0x01	; 1
 8a6:	0e 94 ba 03 	call	0x774	; 0x774 <__fp_powser>
 8aa:	8b 01       	movw	r16, r22
 8ac:	be 01       	movw	r22, r28
 8ae:	ec 01       	movw	r28, r24
 8b0:	fb 2e       	mov	r15, r27
 8b2:	6f 57       	subi	r22, 0x7F	; 127
 8b4:	71 09       	sbc	r23, r1
 8b6:	75 95       	asr	r23
 8b8:	77 1f       	adc	r23, r23
 8ba:	88 0b       	sbc	r24, r24
 8bc:	99 0b       	sbc	r25, r25
 8be:	0e 94 37 02 	call	0x46e	; 0x46e <__floatsisf>
 8c2:	28 e1       	ldi	r18, 0x18	; 24
 8c4:	32 e7       	ldi	r19, 0x72	; 114
 8c6:	41 e3       	ldi	r20, 0x31	; 49
 8c8:	5f e3       	ldi	r21, 0x3F	; 63
 8ca:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__mulsf3x>
 8ce:	af 2d       	mov	r26, r15
 8d0:	98 01       	movw	r18, r16
 8d2:	ae 01       	movw	r20, r28
 8d4:	ff 90       	pop	r15
 8d6:	0f 91       	pop	r16
 8d8:	1f 91       	pop	r17
 8da:	cf 91       	pop	r28
 8dc:	df 91       	pop	r29
 8de:	0e 94 bf 04 	call	0x97e	; 0x97e <__addsf3x>
 8e2:	0c 94 89 02 	jmp	0x512	; 0x512 <__fp_round>

000008e6 <modf>:
 8e6:	fa 01       	movw	r30, r20
 8e8:	dc 01       	movw	r26, r24
 8ea:	aa 0f       	add	r26, r26
 8ec:	bb 1f       	adc	r27, r27
 8ee:	9b 01       	movw	r18, r22
 8f0:	ac 01       	movw	r20, r24
 8f2:	bf 57       	subi	r27, 0x7F	; 127
 8f4:	28 f4       	brcc	.+10     	; 0x900 <__stack+0x1>
 8f6:	22 27       	eor	r18, r18
 8f8:	33 27       	eor	r19, r19
 8fa:	44 27       	eor	r20, r20
 8fc:	50 78       	andi	r21, 0x80	; 128
 8fe:	20 c0       	rjmp	.+64     	; 0x940 <__stack+0x41>
 900:	b7 51       	subi	r27, 0x17	; 23
 902:	90 f4       	brcc	.+36     	; 0x928 <__stack+0x29>
 904:	ab 2f       	mov	r26, r27
 906:	00 24       	eor	r0, r0
 908:	46 95       	lsr	r20
 90a:	37 95       	ror	r19
 90c:	27 95       	ror	r18
 90e:	01 1c       	adc	r0, r1
 910:	a3 95       	inc	r26
 912:	d2 f3       	brmi	.-12     	; 0x908 <__stack+0x9>
 914:	00 20       	and	r0, r0
 916:	71 f0       	breq	.+28     	; 0x934 <__stack+0x35>
 918:	22 0f       	add	r18, r18
 91a:	33 1f       	adc	r19, r19
 91c:	44 1f       	adc	r20, r20
 91e:	b3 95       	inc	r27
 920:	da f3       	brmi	.-10     	; 0x918 <__stack+0x19>
 922:	0e d0       	rcall	.+28     	; 0x940 <__stack+0x41>
 924:	0c 94 a7 04 	jmp	0x94e	; 0x94e <__subsf3>
 928:	61 30       	cpi	r22, 0x01	; 1
 92a:	71 05       	cpc	r23, r1
 92c:	a0 e8       	ldi	r26, 0x80	; 128
 92e:	8a 07       	cpc	r24, r26
 930:	b9 46       	sbci	r27, 0x69	; 105
 932:	30 f4       	brcc	.+12     	; 0x940 <__stack+0x41>
 934:	9b 01       	movw	r18, r22
 936:	ac 01       	movw	r20, r24
 938:	66 27       	eor	r22, r22
 93a:	77 27       	eor	r23, r23
 93c:	88 27       	eor	r24, r24
 93e:	90 78       	andi	r25, 0x80	; 128
 940:	30 96       	adiw	r30, 0x00	; 0
 942:	21 f0       	breq	.+8      	; 0x94c <__stack+0x4d>
 944:	20 83       	st	Z, r18
 946:	31 83       	std	Z+1, r19	; 0x01
 948:	42 83       	std	Z+2, r20	; 0x02
 94a:	53 83       	std	Z+3, r21	; 0x03
 94c:	08 95       	ret

0000094e <__subsf3>:
 94e:	50 58       	subi	r21, 0x80	; 128

00000950 <__addsf3>:
 950:	bb 27       	eor	r27, r27
 952:	aa 27       	eor	r26, r26
 954:	0e 94 bf 04 	call	0x97e	; 0x97e <__addsf3x>
 958:	0c 94 89 02 	jmp	0x512	; 0x512 <__fp_round>
 95c:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__fp_pscA>
 960:	38 f0       	brcs	.+14     	; 0x970 <__addsf3+0x20>
 962:	0e 94 82 02 	call	0x504	; 0x504 <__fp_pscB>
 966:	20 f0       	brcs	.+8      	; 0x970 <__addsf3+0x20>
 968:	39 f4       	brne	.+14     	; 0x978 <__addsf3+0x28>
 96a:	9f 3f       	cpi	r25, 0xFF	; 255
 96c:	19 f4       	brne	.+6      	; 0x974 <__addsf3+0x24>
 96e:	26 f4       	brtc	.+8      	; 0x978 <__addsf3+0x28>
 970:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__fp_nan>
 974:	0e f4       	brtc	.+2      	; 0x978 <__addsf3+0x28>
 976:	e0 95       	com	r30
 978:	e7 fb       	bst	r30, 7
 97a:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_inf>

0000097e <__addsf3x>:
 97e:	e9 2f       	mov	r30, r25
 980:	0e 94 9a 02 	call	0x534	; 0x534 <__fp_split3>
 984:	58 f3       	brcs	.-42     	; 0x95c <__addsf3+0xc>
 986:	ba 17       	cp	r27, r26
 988:	62 07       	cpc	r22, r18
 98a:	73 07       	cpc	r23, r19
 98c:	84 07       	cpc	r24, r20
 98e:	95 07       	cpc	r25, r21
 990:	20 f0       	brcs	.+8      	; 0x99a <__addsf3x+0x1c>
 992:	79 f4       	brne	.+30     	; 0x9b2 <__addsf3x+0x34>
 994:	a6 f5       	brtc	.+104    	; 0x9fe <__addsf3x+0x80>
 996:	0c 94 bc 02 	jmp	0x578	; 0x578 <__fp_zero>
 99a:	0e f4       	brtc	.+2      	; 0x99e <__addsf3x+0x20>
 99c:	e0 95       	com	r30
 99e:	0b 2e       	mov	r0, r27
 9a0:	ba 2f       	mov	r27, r26
 9a2:	a0 2d       	mov	r26, r0
 9a4:	0b 01       	movw	r0, r22
 9a6:	b9 01       	movw	r22, r18
 9a8:	90 01       	movw	r18, r0
 9aa:	0c 01       	movw	r0, r24
 9ac:	ca 01       	movw	r24, r20
 9ae:	a0 01       	movw	r20, r0
 9b0:	11 24       	eor	r1, r1
 9b2:	ff 27       	eor	r31, r31
 9b4:	59 1b       	sub	r21, r25
 9b6:	99 f0       	breq	.+38     	; 0x9de <__addsf3x+0x60>
 9b8:	59 3f       	cpi	r21, 0xF9	; 249
 9ba:	50 f4       	brcc	.+20     	; 0x9d0 <__addsf3x+0x52>
 9bc:	50 3e       	cpi	r21, 0xE0	; 224
 9be:	68 f1       	brcs	.+90     	; 0xa1a <__addsf3x+0x9c>
 9c0:	1a 16       	cp	r1, r26
 9c2:	f0 40       	sbci	r31, 0x00	; 0
 9c4:	a2 2f       	mov	r26, r18
 9c6:	23 2f       	mov	r18, r19
 9c8:	34 2f       	mov	r19, r20
 9ca:	44 27       	eor	r20, r20
 9cc:	58 5f       	subi	r21, 0xF8	; 248
 9ce:	f3 cf       	rjmp	.-26     	; 0x9b6 <__addsf3x+0x38>
 9d0:	46 95       	lsr	r20
 9d2:	37 95       	ror	r19
 9d4:	27 95       	ror	r18
 9d6:	a7 95       	ror	r26
 9d8:	f0 40       	sbci	r31, 0x00	; 0
 9da:	53 95       	inc	r21
 9dc:	c9 f7       	brne	.-14     	; 0x9d0 <__addsf3x+0x52>
 9de:	7e f4       	brtc	.+30     	; 0x9fe <__addsf3x+0x80>
 9e0:	1f 16       	cp	r1, r31
 9e2:	ba 0b       	sbc	r27, r26
 9e4:	62 0b       	sbc	r22, r18
 9e6:	73 0b       	sbc	r23, r19
 9e8:	84 0b       	sbc	r24, r20
 9ea:	ba f0       	brmi	.+46     	; 0xa1a <__addsf3x+0x9c>
 9ec:	91 50       	subi	r25, 0x01	; 1
 9ee:	a1 f0       	breq	.+40     	; 0xa18 <__addsf3x+0x9a>
 9f0:	ff 0f       	add	r31, r31
 9f2:	bb 1f       	adc	r27, r27
 9f4:	66 1f       	adc	r22, r22
 9f6:	77 1f       	adc	r23, r23
 9f8:	88 1f       	adc	r24, r24
 9fa:	c2 f7       	brpl	.-16     	; 0x9ec <__addsf3x+0x6e>
 9fc:	0e c0       	rjmp	.+28     	; 0xa1a <__addsf3x+0x9c>
 9fe:	ba 0f       	add	r27, r26
 a00:	62 1f       	adc	r22, r18
 a02:	73 1f       	adc	r23, r19
 a04:	84 1f       	adc	r24, r20
 a06:	48 f4       	brcc	.+18     	; 0xa1a <__addsf3x+0x9c>
 a08:	87 95       	ror	r24
 a0a:	77 95       	ror	r23
 a0c:	67 95       	ror	r22
 a0e:	b7 95       	ror	r27
 a10:	f7 95       	ror	r31
 a12:	9e 3f       	cpi	r25, 0xFE	; 254
 a14:	08 f0       	brcs	.+2      	; 0xa18 <__addsf3x+0x9a>
 a16:	b0 cf       	rjmp	.-160    	; 0x978 <__addsf3+0x28>
 a18:	93 95       	inc	r25
 a1a:	88 0f       	add	r24, r24
 a1c:	08 f0       	brcs	.+2      	; 0xa20 <__addsf3x+0xa2>
 a1e:	99 27       	eor	r25, r25
 a20:	ee 0f       	add	r30, r30
 a22:	97 95       	ror	r25
 a24:	87 95       	ror	r24
 a26:	08 95       	ret

00000a28 <__fp_mpack>:
 a28:	9f 3f       	cpi	r25, 0xFF	; 255
 a2a:	31 f0       	breq	.+12     	; 0xa38 <__fp_mpack_finite+0xc>

00000a2c <__fp_mpack_finite>:
 a2c:	91 50       	subi	r25, 0x01	; 1
 a2e:	20 f4       	brcc	.+8      	; 0xa38 <__fp_mpack_finite+0xc>
 a30:	87 95       	ror	r24
 a32:	77 95       	ror	r23
 a34:	67 95       	ror	r22
 a36:	b7 95       	ror	r27
 a38:	88 0f       	add	r24, r24
 a3a:	91 1d       	adc	r25, r1
 a3c:	96 95       	lsr	r25
 a3e:	87 95       	ror	r24
 a40:	97 f9       	bld	r25, 7
 a42:	08 95       	ret

00000a44 <_exit>:
 a44:	f8 94       	cli

00000a46 <__stop_program>:
 a46:	ff cf       	rjmp	.-2      	; 0xa46 <__stop_program>
