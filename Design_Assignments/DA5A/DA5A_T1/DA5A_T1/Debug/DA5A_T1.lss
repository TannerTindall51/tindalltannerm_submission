
DA5A_T1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000476  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000402  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  00000476  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000476  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  000004e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ae5  00000000  00000000  00000530  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b2  00000000  00000000  00001015  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000034c  00000000  00000000  000019c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000074  00000000  00000000  00001d14  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004df  00000000  00000000  00001d88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000069  00000000  00000000  00002267  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  000022d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e2 e0       	ldi	r30, 0x02	; 2
  c8:	f4 e0       	ldi	r31, 0x04	; 4
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a0 30       	cpi	r26, 0x00	; 0
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a0 e0       	ldi	r26, 0x00	; 0
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a2 30       	cpi	r26, 0x02	; 2
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 cb 00 	call	0x196	; 0x196 <main>
  ea:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <shift_out_init>:

volatile uint16_t tempC_value;

void shift_out_init(void)
{
	DDRB |= (1<<data);
  f2:	20 9a       	sbi	0x04, 0	; 4
	DDRD|=(1<<clock)|(1<<latch); //PD7 = SCLK & PD4 = latch
  f4:	8a b1       	in	r24, 0x0a	; 10
  f6:	80 69       	ori	r24, 0x90	; 144
  f8:	8a b9       	out	0x0a, r24	; 10
  fa:	08 95       	ret

000000fc <adcRead>:
}

uint16_t adcRead()
{
	ADCSRA |= (1<<6);				//enable ADC conversion
  fc:	ea e7       	ldi	r30, 0x7A	; 122
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	80 81       	ld	r24, Z
 102:	80 64       	ori	r24, 0x40	; 64
 104:	80 83       	st	Z, r24
	while (!(ADCSRA & (1<<latch)));	//waits for conversion to complete by ADIF flag
 106:	80 81       	ld	r24, Z
 108:	84 ff       	sbrs	r24, 4
 10a:	fd cf       	rjmp	.-6      	; 0x106 <adcRead+0xa>
	ADCSRA |= (1<<latch);			//reset when complete
 10c:	ea e7       	ldi	r30, 0x7A	; 122
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	80 61       	ori	r24, 0x10	; 16
 114:	80 83       	st	Z, r24
	return ADC;						//return value once complete
 116:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
 11a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
}
 11e:	08 95       	ret

00000120 <startADC>:

void startADC()
{
	DDRC &= ~(1<<4);												//set PC4 to input
 120:	3c 98       	cbi	0x07, 4	; 7
	ADMUX = (1<<REFS1)| (1<<REFS0)|	(1<<MUX2);						//set Vref and set ADC4 as input
 122:	84 ec       	ldi	r24, 0xC4	; 196
 124:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) |	(1<<ADPS0);		//enable ADC and set prescalar to 128
 128:	87 e8       	ldi	r24, 0x87	; 135
 12a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
	ADCSRB = 0x00;													//set ADCSRB to free running
 12e:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__DATA_REGION_ORIGIN__+0x1b>
 132:	08 95       	ret

00000134 <shift_out>:
}

void shift_out(uint8_t indata)
{
 134:	27 e0       	ldi	r18, 0x07	; 7
 136:	30 e0       	ldi	r19, 0x00	; 0
	for (uint8_t i = 0; i < 8; i++)
	{
		/* Write bit to data port. */
		if (0 == (indata & _BV(7 - i)))
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	ac 01       	movw	r20, r24
 13c:	02 2e       	mov	r0, r18
 13e:	02 c0       	rjmp	.+4      	; 0x144 <shift_out+0x10>
 140:	55 95       	asr	r21
 142:	47 95       	ror	r20
 144:	0a 94       	dec	r0
 146:	e2 f7       	brpl	.-8      	; 0x140 <shift_out+0xc>
 148:	40 fd       	sbrc	r20, 0
 14a:	03 c0       	rjmp	.+6      	; 0x152 <shift_out+0x1e>
		{
			// digital_write(SHIFT_OUT_DATA, LOW);
			PORTB &= (0 << data);
 14c:	45 b1       	in	r20, 0x05	; 5
 14e:	15 b8       	out	0x05, r1	; 5
 150:	01 c0       	rjmp	.+2      	; 0x154 <shift_out+0x20>
		}
		else
		{
			// digital_write(SHIFT_OUT_DATA, HIGH);
			PORTB |= (1 << data);
 152:	28 9a       	sbi	0x05, 0	; 5
		}
		/* Pulse clock to write next bit. */
		PORTD |= (1<<clock);
 154:	5f 9a       	sbi	0x0b, 7	; 11
		PORTD &= (0<<clock);
 156:	4b b1       	in	r20, 0x0b	; 11
 158:	1b b8       	out	0x0b, r1	; 11
 15a:	21 50       	subi	r18, 0x01	; 1
 15c:	31 09       	sbc	r19, r1
 15e:	68 f7       	brcc	.-38     	; 0x13a <shift_out+0x6>
	}
}
 160:	08 95       	ret

00000162 <tempC>:

uint16_t tempC()
{
	uint16_t temperature = adcRead();				//record value from adc
 162:	0e 94 7e 00 	call	0xfc	; 0xfc <adcRead>
	tempC_value = ((temperature)*(110.0/1023.0));	//convert to temp value
 166:	bc 01       	movw	r22, r24
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	0e 94 04 01 	call	0x208	; 0x208 <__floatunsisf>
 170:	2e e0       	ldi	r18, 0x0E	; 14
 172:	37 e3       	ldi	r19, 0x37	; 55
 174:	4c ed       	ldi	r20, 0xDC	; 220
 176:	5d e3       	ldi	r21, 0x3D	; 61
 178:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <__mulsf3>
 17c:	0e 94 d5 00 	call	0x1aa	; 0x1aa <__fixunssfsi>
 180:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_end+0x1>
 184:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_end>
	shift_out(tempC_value);							//send the value out to display
 188:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 18c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_end+0x1>
 190:	0e 94 9a 00 	call	0x134	; 0x134 <shift_out>
	
}
 194:	08 95       	ret

00000196 <main>:

int main(void)
{
	shift_out_init();
 196:	0e 94 79 00 	call	0xf2	; 0xf2 <shift_out_init>
	startADC();
 19a:	0e 94 90 00 	call	0x120	; 0x120 <startADC>
	while (1)
	{
		adcRead();
 19e:	0e 94 7e 00 	call	0xfc	; 0xfc <adcRead>
		tempC();
 1a2:	0e 94 b1 00 	call	0x162	; 0x162 <tempC>
		PORTD |= (1<<latch);
 1a6:	5c 9a       	sbi	0x0b, 4	; 11
 1a8:	fa cf       	rjmp	.-12     	; 0x19e <main+0x8>

000001aa <__fixunssfsi>:
 1aa:	0e 94 49 01 	call	0x292	; 0x292 <__fp_splitA>
 1ae:	88 f0       	brcs	.+34     	; 0x1d2 <__fixunssfsi+0x28>
 1b0:	9f 57       	subi	r25, 0x7F	; 127
 1b2:	98 f0       	brcs	.+38     	; 0x1da <__fixunssfsi+0x30>
 1b4:	b9 2f       	mov	r27, r25
 1b6:	99 27       	eor	r25, r25
 1b8:	b7 51       	subi	r27, 0x17	; 23
 1ba:	b0 f0       	brcs	.+44     	; 0x1e8 <__fixunssfsi+0x3e>
 1bc:	e1 f0       	breq	.+56     	; 0x1f6 <__fixunssfsi+0x4c>
 1be:	66 0f       	add	r22, r22
 1c0:	77 1f       	adc	r23, r23
 1c2:	88 1f       	adc	r24, r24
 1c4:	99 1f       	adc	r25, r25
 1c6:	1a f0       	brmi	.+6      	; 0x1ce <__fixunssfsi+0x24>
 1c8:	ba 95       	dec	r27
 1ca:	c9 f7       	brne	.-14     	; 0x1be <__fixunssfsi+0x14>
 1cc:	14 c0       	rjmp	.+40     	; 0x1f6 <__fixunssfsi+0x4c>
 1ce:	b1 30       	cpi	r27, 0x01	; 1
 1d0:	91 f0       	breq	.+36     	; 0x1f6 <__fixunssfsi+0x4c>
 1d2:	0e 94 63 01 	call	0x2c6	; 0x2c6 <__fp_zero>
 1d6:	b1 e0       	ldi	r27, 0x01	; 1
 1d8:	08 95       	ret
 1da:	0c 94 63 01 	jmp	0x2c6	; 0x2c6 <__fp_zero>
 1de:	67 2f       	mov	r22, r23
 1e0:	78 2f       	mov	r23, r24
 1e2:	88 27       	eor	r24, r24
 1e4:	b8 5f       	subi	r27, 0xF8	; 248
 1e6:	39 f0       	breq	.+14     	; 0x1f6 <__fixunssfsi+0x4c>
 1e8:	b9 3f       	cpi	r27, 0xF9	; 249
 1ea:	cc f3       	brlt	.-14     	; 0x1de <__fixunssfsi+0x34>
 1ec:	86 95       	lsr	r24
 1ee:	77 95       	ror	r23
 1f0:	67 95       	ror	r22
 1f2:	b3 95       	inc	r27
 1f4:	d9 f7       	brne	.-10     	; 0x1ec <__fixunssfsi+0x42>
 1f6:	3e f4       	brtc	.+14     	; 0x206 <__fixunssfsi+0x5c>
 1f8:	90 95       	com	r25
 1fa:	80 95       	com	r24
 1fc:	70 95       	com	r23
 1fe:	61 95       	neg	r22
 200:	7f 4f       	sbci	r23, 0xFF	; 255
 202:	8f 4f       	sbci	r24, 0xFF	; 255
 204:	9f 4f       	sbci	r25, 0xFF	; 255
 206:	08 95       	ret

00000208 <__floatunsisf>:
 208:	e8 94       	clt
 20a:	09 c0       	rjmp	.+18     	; 0x21e <__floatsisf+0x12>

0000020c <__floatsisf>:
 20c:	97 fb       	bst	r25, 7
 20e:	3e f4       	brtc	.+14     	; 0x21e <__floatsisf+0x12>
 210:	90 95       	com	r25
 212:	80 95       	com	r24
 214:	70 95       	com	r23
 216:	61 95       	neg	r22
 218:	7f 4f       	sbci	r23, 0xFF	; 255
 21a:	8f 4f       	sbci	r24, 0xFF	; 255
 21c:	9f 4f       	sbci	r25, 0xFF	; 255
 21e:	99 23       	and	r25, r25
 220:	a9 f0       	breq	.+42     	; 0x24c <__floatsisf+0x40>
 222:	f9 2f       	mov	r31, r25
 224:	96 e9       	ldi	r25, 0x96	; 150
 226:	bb 27       	eor	r27, r27
 228:	93 95       	inc	r25
 22a:	f6 95       	lsr	r31
 22c:	87 95       	ror	r24
 22e:	77 95       	ror	r23
 230:	67 95       	ror	r22
 232:	b7 95       	ror	r27
 234:	f1 11       	cpse	r31, r1
 236:	f8 cf       	rjmp	.-16     	; 0x228 <__floatsisf+0x1c>
 238:	fa f4       	brpl	.+62     	; 0x278 <__floatsisf+0x6c>
 23a:	bb 0f       	add	r27, r27
 23c:	11 f4       	brne	.+4      	; 0x242 <__floatsisf+0x36>
 23e:	60 ff       	sbrs	r22, 0
 240:	1b c0       	rjmp	.+54     	; 0x278 <__floatsisf+0x6c>
 242:	6f 5f       	subi	r22, 0xFF	; 255
 244:	7f 4f       	sbci	r23, 0xFF	; 255
 246:	8f 4f       	sbci	r24, 0xFF	; 255
 248:	9f 4f       	sbci	r25, 0xFF	; 255
 24a:	16 c0       	rjmp	.+44     	; 0x278 <__floatsisf+0x6c>
 24c:	88 23       	and	r24, r24
 24e:	11 f0       	breq	.+4      	; 0x254 <__floatsisf+0x48>
 250:	96 e9       	ldi	r25, 0x96	; 150
 252:	11 c0       	rjmp	.+34     	; 0x276 <__floatsisf+0x6a>
 254:	77 23       	and	r23, r23
 256:	21 f0       	breq	.+8      	; 0x260 <__floatsisf+0x54>
 258:	9e e8       	ldi	r25, 0x8E	; 142
 25a:	87 2f       	mov	r24, r23
 25c:	76 2f       	mov	r23, r22
 25e:	05 c0       	rjmp	.+10     	; 0x26a <__floatsisf+0x5e>
 260:	66 23       	and	r22, r22
 262:	71 f0       	breq	.+28     	; 0x280 <__floatsisf+0x74>
 264:	96 e8       	ldi	r25, 0x86	; 134
 266:	86 2f       	mov	r24, r22
 268:	70 e0       	ldi	r23, 0x00	; 0
 26a:	60 e0       	ldi	r22, 0x00	; 0
 26c:	2a f0       	brmi	.+10     	; 0x278 <__floatsisf+0x6c>
 26e:	9a 95       	dec	r25
 270:	66 0f       	add	r22, r22
 272:	77 1f       	adc	r23, r23
 274:	88 1f       	adc	r24, r24
 276:	da f7       	brpl	.-10     	; 0x26e <__floatsisf+0x62>
 278:	88 0f       	add	r24, r24
 27a:	96 95       	lsr	r25
 27c:	87 95       	ror	r24
 27e:	97 f9       	bld	r25, 7
 280:	08 95       	ret

00000282 <__fp_split3>:
 282:	57 fd       	sbrc	r21, 7
 284:	90 58       	subi	r25, 0x80	; 128
 286:	44 0f       	add	r20, r20
 288:	55 1f       	adc	r21, r21
 28a:	59 f0       	breq	.+22     	; 0x2a2 <__fp_splitA+0x10>
 28c:	5f 3f       	cpi	r21, 0xFF	; 255
 28e:	71 f0       	breq	.+28     	; 0x2ac <__fp_splitA+0x1a>
 290:	47 95       	ror	r20

00000292 <__fp_splitA>:
 292:	88 0f       	add	r24, r24
 294:	97 fb       	bst	r25, 7
 296:	99 1f       	adc	r25, r25
 298:	61 f0       	breq	.+24     	; 0x2b2 <__fp_splitA+0x20>
 29a:	9f 3f       	cpi	r25, 0xFF	; 255
 29c:	79 f0       	breq	.+30     	; 0x2bc <__fp_splitA+0x2a>
 29e:	87 95       	ror	r24
 2a0:	08 95       	ret
 2a2:	12 16       	cp	r1, r18
 2a4:	13 06       	cpc	r1, r19
 2a6:	14 06       	cpc	r1, r20
 2a8:	55 1f       	adc	r21, r21
 2aa:	f2 cf       	rjmp	.-28     	; 0x290 <__fp_split3+0xe>
 2ac:	46 95       	lsr	r20
 2ae:	f1 df       	rcall	.-30     	; 0x292 <__fp_splitA>
 2b0:	08 c0       	rjmp	.+16     	; 0x2c2 <__fp_splitA+0x30>
 2b2:	16 16       	cp	r1, r22
 2b4:	17 06       	cpc	r1, r23
 2b6:	18 06       	cpc	r1, r24
 2b8:	99 1f       	adc	r25, r25
 2ba:	f1 cf       	rjmp	.-30     	; 0x29e <__fp_splitA+0xc>
 2bc:	86 95       	lsr	r24
 2be:	71 05       	cpc	r23, r1
 2c0:	61 05       	cpc	r22, r1
 2c2:	08 94       	sec
 2c4:	08 95       	ret

000002c6 <__fp_zero>:
 2c6:	e8 94       	clt

000002c8 <__fp_szero>:
 2c8:	bb 27       	eor	r27, r27
 2ca:	66 27       	eor	r22, r22
 2cc:	77 27       	eor	r23, r23
 2ce:	cb 01       	movw	r24, r22
 2d0:	97 f9       	bld	r25, 7
 2d2:	08 95       	ret

000002d4 <__mulsf3>:
 2d4:	0e 94 7d 01 	call	0x2fa	; 0x2fa <__mulsf3x>
 2d8:	0c 94 ee 01 	jmp	0x3dc	; 0x3dc <__fp_round>
 2dc:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <__fp_pscA>
 2e0:	38 f0       	brcs	.+14     	; 0x2f0 <__mulsf3+0x1c>
 2e2:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__fp_pscB>
 2e6:	20 f0       	brcs	.+8      	; 0x2f0 <__mulsf3+0x1c>
 2e8:	95 23       	and	r25, r21
 2ea:	11 f0       	breq	.+4      	; 0x2f0 <__mulsf3+0x1c>
 2ec:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__fp_inf>
 2f0:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__fp_nan>
 2f4:	11 24       	eor	r1, r1
 2f6:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__fp_szero>

000002fa <__mulsf3x>:
 2fa:	0e 94 41 01 	call	0x282	; 0x282 <__fp_split3>
 2fe:	70 f3       	brcs	.-36     	; 0x2dc <__mulsf3+0x8>

00000300 <__mulsf3_pse>:
 300:	95 9f       	mul	r25, r21
 302:	c1 f3       	breq	.-16     	; 0x2f4 <__mulsf3+0x20>
 304:	95 0f       	add	r25, r21
 306:	50 e0       	ldi	r21, 0x00	; 0
 308:	55 1f       	adc	r21, r21
 30a:	62 9f       	mul	r22, r18
 30c:	f0 01       	movw	r30, r0
 30e:	72 9f       	mul	r23, r18
 310:	bb 27       	eor	r27, r27
 312:	f0 0d       	add	r31, r0
 314:	b1 1d       	adc	r27, r1
 316:	63 9f       	mul	r22, r19
 318:	aa 27       	eor	r26, r26
 31a:	f0 0d       	add	r31, r0
 31c:	b1 1d       	adc	r27, r1
 31e:	aa 1f       	adc	r26, r26
 320:	64 9f       	mul	r22, r20
 322:	66 27       	eor	r22, r22
 324:	b0 0d       	add	r27, r0
 326:	a1 1d       	adc	r26, r1
 328:	66 1f       	adc	r22, r22
 32a:	82 9f       	mul	r24, r18
 32c:	22 27       	eor	r18, r18
 32e:	b0 0d       	add	r27, r0
 330:	a1 1d       	adc	r26, r1
 332:	62 1f       	adc	r22, r18
 334:	73 9f       	mul	r23, r19
 336:	b0 0d       	add	r27, r0
 338:	a1 1d       	adc	r26, r1
 33a:	62 1f       	adc	r22, r18
 33c:	83 9f       	mul	r24, r19
 33e:	a0 0d       	add	r26, r0
 340:	61 1d       	adc	r22, r1
 342:	22 1f       	adc	r18, r18
 344:	74 9f       	mul	r23, r20
 346:	33 27       	eor	r19, r19
 348:	a0 0d       	add	r26, r0
 34a:	61 1d       	adc	r22, r1
 34c:	23 1f       	adc	r18, r19
 34e:	84 9f       	mul	r24, r20
 350:	60 0d       	add	r22, r0
 352:	21 1d       	adc	r18, r1
 354:	82 2f       	mov	r24, r18
 356:	76 2f       	mov	r23, r22
 358:	6a 2f       	mov	r22, r26
 35a:	11 24       	eor	r1, r1
 35c:	9f 57       	subi	r25, 0x7F	; 127
 35e:	50 40       	sbci	r21, 0x00	; 0
 360:	9a f0       	brmi	.+38     	; 0x388 <__mulsf3_pse+0x88>
 362:	f1 f0       	breq	.+60     	; 0x3a0 <__mulsf3_pse+0xa0>
 364:	88 23       	and	r24, r24
 366:	4a f0       	brmi	.+18     	; 0x37a <__mulsf3_pse+0x7a>
 368:	ee 0f       	add	r30, r30
 36a:	ff 1f       	adc	r31, r31
 36c:	bb 1f       	adc	r27, r27
 36e:	66 1f       	adc	r22, r22
 370:	77 1f       	adc	r23, r23
 372:	88 1f       	adc	r24, r24
 374:	91 50       	subi	r25, 0x01	; 1
 376:	50 40       	sbci	r21, 0x00	; 0
 378:	a9 f7       	brne	.-22     	; 0x364 <__mulsf3_pse+0x64>
 37a:	9e 3f       	cpi	r25, 0xFE	; 254
 37c:	51 05       	cpc	r21, r1
 37e:	80 f0       	brcs	.+32     	; 0x3a0 <__mulsf3_pse+0xa0>
 380:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__fp_inf>
 384:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__fp_szero>
 388:	5f 3f       	cpi	r21, 0xFF	; 255
 38a:	e4 f3       	brlt	.-8      	; 0x384 <__mulsf3_pse+0x84>
 38c:	98 3e       	cpi	r25, 0xE8	; 232
 38e:	d4 f3       	brlt	.-12     	; 0x384 <__mulsf3_pse+0x84>
 390:	86 95       	lsr	r24
 392:	77 95       	ror	r23
 394:	67 95       	ror	r22
 396:	b7 95       	ror	r27
 398:	f7 95       	ror	r31
 39a:	e7 95       	ror	r30
 39c:	9f 5f       	subi	r25, 0xFF	; 255
 39e:	c1 f7       	brne	.-16     	; 0x390 <__mulsf3_pse+0x90>
 3a0:	fe 2b       	or	r31, r30
 3a2:	88 0f       	add	r24, r24
 3a4:	91 1d       	adc	r25, r1
 3a6:	96 95       	lsr	r25
 3a8:	87 95       	ror	r24
 3aa:	97 f9       	bld	r25, 7
 3ac:	08 95       	ret

000003ae <__fp_inf>:
 3ae:	97 f9       	bld	r25, 7
 3b0:	9f 67       	ori	r25, 0x7F	; 127
 3b2:	80 e8       	ldi	r24, 0x80	; 128
 3b4:	70 e0       	ldi	r23, 0x00	; 0
 3b6:	60 e0       	ldi	r22, 0x00	; 0
 3b8:	08 95       	ret

000003ba <__fp_nan>:
 3ba:	9f ef       	ldi	r25, 0xFF	; 255
 3bc:	80 ec       	ldi	r24, 0xC0	; 192
 3be:	08 95       	ret

000003c0 <__fp_pscA>:
 3c0:	00 24       	eor	r0, r0
 3c2:	0a 94       	dec	r0
 3c4:	16 16       	cp	r1, r22
 3c6:	17 06       	cpc	r1, r23
 3c8:	18 06       	cpc	r1, r24
 3ca:	09 06       	cpc	r0, r25
 3cc:	08 95       	ret

000003ce <__fp_pscB>:
 3ce:	00 24       	eor	r0, r0
 3d0:	0a 94       	dec	r0
 3d2:	12 16       	cp	r1, r18
 3d4:	13 06       	cpc	r1, r19
 3d6:	14 06       	cpc	r1, r20
 3d8:	05 06       	cpc	r0, r21
 3da:	08 95       	ret

000003dc <__fp_round>:
 3dc:	09 2e       	mov	r0, r25
 3de:	03 94       	inc	r0
 3e0:	00 0c       	add	r0, r0
 3e2:	11 f4       	brne	.+4      	; 0x3e8 <__fp_round+0xc>
 3e4:	88 23       	and	r24, r24
 3e6:	52 f0       	brmi	.+20     	; 0x3fc <__fp_round+0x20>
 3e8:	bb 0f       	add	r27, r27
 3ea:	40 f4       	brcc	.+16     	; 0x3fc <__fp_round+0x20>
 3ec:	bf 2b       	or	r27, r31
 3ee:	11 f4       	brne	.+4      	; 0x3f4 <__fp_round+0x18>
 3f0:	60 ff       	sbrs	r22, 0
 3f2:	04 c0       	rjmp	.+8      	; 0x3fc <__fp_round+0x20>
 3f4:	6f 5f       	subi	r22, 0xFF	; 255
 3f6:	7f 4f       	sbci	r23, 0xFF	; 255
 3f8:	8f 4f       	sbci	r24, 0xFF	; 255
 3fa:	9f 4f       	sbci	r25, 0xFF	; 255
 3fc:	08 95       	ret

000003fe <_exit>:
 3fe:	f8 94       	cli

00000400 <__stop_program>:
 400:	ff cf       	rjmp	.-2      	; 0x400 <__stop_program>
